2024-07-11 17:51:56,686 INFO [background-preinit] Version: HV000001: Hibernate Validator 8.0.1.Final
2024-07-11 17:51:56,746 INFO [main] EmergencyApplication: Starting EmergencyApplication using Java 17.0.10 with PID 17164 (D:\programming\java\emergency-ms\emergency\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-11 17:51:56,746 DEBUG [main] EmergencyApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-11 17:51:56,747 INFO [main] EmergencyApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-11 17:51:57,461 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-11 17:51:57,522 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 52 ms. Found 3 JPA repository interfaces.
2024-07-11 17:51:58,239 INFO [main] TomcatWebServer: Tomcat initialized with port 8081 (http)
2024-07-11 17:51:58,259 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8081"]
2024-07-11 17:51:58,261 INFO [main] StandardService: Starting service [Tomcat]
2024-07-11 17:51:58,261 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-11 17:51:58,323 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-11 17:51:58,324 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1535 ms
2024-07-11 17:51:58,568 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-11 17:51:58,773 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3ace6346
2024-07-11 17:51:58,774 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-11 17:51:58,815 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_notifications_db (PostgreSQL 16.3)
2024-07-11 17:51:58,890 INFO [main] DbValidate: Successfully validated 2 migrations (execution time 00:00.038s)
2024-07-11 17:51:58,910 INFO [main] DbMigrate: Current version of schema "public": 1.1
2024-07-11 17:51:58,932 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-11 17:51:59,015 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-11 17:51:59,086 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-11 17:51:59,134 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-11 17:51:59,461 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-11 17:52:00,194 INFO [main] EntityInstantiatorPojoStandard: HHH000182: No default (no-argument) constructor for class: org.example.emergency.entity.EmergencyCall (class must be instantiated by Interceptor)
2024-07-11 17:52:00,414 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-11 17:52:00,416 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-11 17:52:00,750 TRACE [main] AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer: Eagerly initializing {securityConfig=org.example.emergency.config.SecurityConfig$$SpringCGLIB$$0@159314ca}
2024-07-11 17:52:00,763 INFO [main] InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer: Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-07-11 17:52:00,764 WARN [main] InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer: Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-07-11 17:52:00,863 INFO [main] QueryEnhancerFactory: Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-11 17:52:00,931 WARN [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-11 17:52:01,212 DEBUG [main] DefaultSecurityFilterChain: Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-11 17:52:01,517 INFO [main] AdminClientConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-07-11 17:52:01,633 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-11 17:52:01,633 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-11 17:52:01,633 INFO [main] AppInfoParser: Kafka startTimeMs: 1720709521631
2024-07-11 17:52:02,005 INFO [kafka-admin-client-thread | emergency-admin-0] AppInfoParser: App info kafka.admin.client for emergency-admin-0 unregistered
2024-07-11 17:52:02,008 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics scheduler closed
2024-07-11 17:52:02,008 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-11 17:52:02,008 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics reporters closed
2024-07-11 17:52:02,012 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8081"]
2024-07-11 17:52:02,021 INFO [main] TomcatWebServer: Tomcat started on port 8081 (http) with context path '/'
2024-07-11 17:52:02,047 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092, localhost:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-telegram-notification-created-topic-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = telegram-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-11 17:52:02,096 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-11 17:52:02,160 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-11 17:52:02,161 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-11 17:52:02,161 INFO [main] AppInfoParser: Kafka startTimeMs: 1720709522160
2024-07-11 17:52:02,164 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Subscribed to topic(s): telegram-receiver-user-response-topic
2024-07-11 17:52:02,185 INFO [main] EmergencyApplication: Started EmergencyApplication in 5.798 seconds (process running for 6.245)
2024-07-11 17:52:02,194 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metadata: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-11 17:52:02,202 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-11 17:52:02,205 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-11 17:52:02,233 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-telegram-notification-created-topic-1-c6c81fdc-36f7-4a99-82ab-7503a10c9b34
2024-07-11 17:52:02,234 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-11 17:52:05,251 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=21, memberId='consumer-telegram-notification-created-topic-1-c6c81fdc-36f7-4a99-82ab-7503a10c9b34', protocol='range'}
2024-07-11 17:52:05,257 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Finished assignment for group at generation 21: {consumer-telegram-notification-created-topic-1-c6c81fdc-36f7-4a99-82ab-7503a10c9b34=Assignment(partitions=[telegram-receiver-user-response-topic-0])}
2024-07-11 17:52:05,286 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=21, memberId='consumer-telegram-notification-created-topic-1-c6c81fdc-36f7-4a99-82ab-7503a10c9b34', protocol='range'}
2024-07-11 17:52:05,287 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-receiver-user-response-topic-0])
2024-07-11 17:52:05,289 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-receiver-user-response-topic-0
2024-07-11 17:52:05,312 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-response-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=2}}
2024-07-11 17:52:05,314 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-receiver-user-response-topic-0]
2024-07-11 17:52:06,130 INFO [main] TelegramNotificationsApplication: Starting TelegramNotificationsApplication using Java 17.0.10 with PID 19244 (D:\programming\java\emergency-ms\telegram-notifications\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-11 17:52:06,131 DEBUG [main] TelegramNotificationsApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-11 17:52:06,132 INFO [main] TelegramNotificationsApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-11 17:52:06,746 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-11 17:52:06,802 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 48 ms. Found 1 JPA repository interface.
2024-07-11 17:52:07,417 INFO [main] TomcatWebServer: Tomcat initialized with port 8083 (http)
2024-07-11 17:52:07,425 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8083"]
2024-07-11 17:52:07,427 INFO [main] StandardService: Starting service [Tomcat]
2024-07-11 17:52:07,427 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-11 17:52:07,504 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-11 17:52:07,505 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1325 ms
2024-07-11 17:52:07,754 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-11 17:52:07,903 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4f3c7808
2024-07-11 17:52:07,905 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-11 17:52:07,938 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_telegram_db (PostgreSQL 16.3)
2024-07-11 17:52:08,002 INFO [main] DbValidate: Successfully validated 1 migration (execution time 00:00.032s)
2024-07-11 17:52:08,038 INFO [main] DbMigrate: Current version of schema "public": 1.0
2024-07-11 17:52:08,041 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-11 17:52:08,113 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-11 17:52:08,166 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-11 17:52:08,197 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-11 17:52:08,496 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-11 17:52:09,205 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-11 17:52:09,207 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-11 17:52:09,720 WARN [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-11 17:52:10,141 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8083"]
2024-07-11 17:52:10,159 INFO [main] TomcatWebServer: Tomcat started on port 8083 (http) with context path '/'
2024-07-11 17:52:10,203 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092, localhost:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-telegram-notification-created-topic-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = telegram-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-11 17:52:10,245 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-11 17:52:10,336 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-11 17:52:10,337 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-11 17:52:10,337 INFO [main] AppInfoParser: Kafka startTimeMs: 1720709530335
2024-07-11 17:52:10,340 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Subscribed to topic(s): telegram-notification-created-topic
2024-07-11 17:52:10,345 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092, localhost:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-telegram-notification-created-topic-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = telegram-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-11 17:52:10,346 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-11 17:52:10,356 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-11 17:52:10,356 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-11 17:52:10,356 INFO [main] AppInfoParser: Kafka startTimeMs: 1720709530356
2024-07-11 17:52:10,357 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Subscribed to topic(s): telegram-receiver-user-request-topic
2024-07-11 17:52:10,664 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] Metadata: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-11 17:52:10,664 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metadata: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-11 17:52:10,666 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-11 17:52:10,668 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-11 17:52:10,670 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-11 17:52:10,670 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-11 17:52:10,697 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-telegram-notification-created-topic-2-67d74f38-0b76-4c47-9b56-1da1b805cf60
2024-07-11 17:52:10,699 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-11 17:52:10,699 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-telegram-notification-created-topic-1-f3ba5d51-11cb-4f11-a10f-82dfea39a47b
2024-07-11 17:52:10,700 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-11 17:52:10,738 INFO [main] TelegramNotificationsApplication: Started TelegramNotificationsApplication in 4.964 seconds (process running for 5.384)
2024-07-11 17:52:11,263 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: group is already rebalancing
2024-07-11 17:52:11,264 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Revoke previously assigned partitions telegram-receiver-user-response-topic-0
2024-07-11 17:52:11,264 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions revoked: [telegram-receiver-user-response-topic-0]
2024-07-11 17:52:11,264 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-11 17:52:11,266 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=22, memberId='consumer-telegram-notification-created-topic-1-c6c81fdc-36f7-4a99-82ab-7503a10c9b34', protocol='range'}
2024-07-11 17:52:11,266 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=22, memberId='consumer-telegram-notification-created-topic-2-67d74f38-0b76-4c47-9b56-1da1b805cf60', protocol='range'}
2024-07-11 17:52:11,266 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=22, memberId='consumer-telegram-notification-created-topic-1-f3ba5d51-11cb-4f11-a10f-82dfea39a47b', protocol='range'}
2024-07-11 17:52:11,544 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Finished assignment for group at generation 22: {consumer-telegram-notification-created-topic-1-c6c81fdc-36f7-4a99-82ab-7503a10c9b34=Assignment(partitions=[telegram-receiver-user-response-topic-0]), consumer-telegram-notification-created-topic-2-67d74f38-0b76-4c47-9b56-1da1b805cf60=Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]), consumer-telegram-notification-created-topic-1-f3ba5d51-11cb-4f11-a10f-82dfea39a47b=Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2])}
2024-07-11 17:52:11,547 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=22, memberId='consumer-telegram-notification-created-topic-1-c6c81fdc-36f7-4a99-82ab-7503a10c9b34', protocol='range'}
2024-07-11 17:52:11,547 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=22, memberId='consumer-telegram-notification-created-topic-2-67d74f38-0b76-4c47-9b56-1da1b805cf60', protocol='range'}
2024-07-11 17:52:11,547 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=22, memberId='consumer-telegram-notification-created-topic-1-f3ba5d51-11cb-4f11-a10f-82dfea39a47b', protocol='range'}
2024-07-11 17:52:11,547 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-receiver-user-response-topic-0])
2024-07-11 17:52:11,547 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-receiver-user-response-topic-0
2024-07-11 17:52:11,549 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-response-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=2}}
2024-07-11 17:52:11,549 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2])
2024-07-11 17:52:11,549 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2])
2024-07-11 17:52:11,549 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-receiver-user-response-topic-0]
2024-07-11 17:52:11,550 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2
2024-07-11 17:52:11,550 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2
2024-07-11 17:52:11,557 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-1 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=6}}
2024-07-11 17:52:11,557 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-0 to the committed offset FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=6}}
2024-07-11 17:52:11,558 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-2 to the committed offset FetchPosition{offset=7, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=7}}
2024-07-11 17:52:11,558 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=7}}
2024-07-11 17:52:11,558 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-1 to the committed offset FetchPosition{offset=7, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=5}}
2024-07-11 17:52:11,558 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-2 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=5}}
2024-07-11 17:52:11,559 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]
2024-07-11 17:52:11,559 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]
2024-07-11 17:52:11,801 INFO [background-preinit] Version: HV000001: Hibernate Validator 8.0.1.Final
2024-07-11 17:52:11,843 INFO [main] EmailNotificationsApplication: Starting EmailNotificationsApplication using Java 17.0.10 with PID 20324 (D:\programming\java\emergency-ms\email-notifications\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-11 17:52:11,843 DEBUG [main] EmailNotificationsApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-11 17:52:11,844 INFO [main] EmailNotificationsApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-11 17:52:12,627 INFO [main] TomcatWebServer: Tomcat initialized with port 8082 (http)
2024-07-11 17:52:12,633 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8082"]
2024-07-11 17:52:12,635 INFO [main] StandardService: Starting service [Tomcat]
2024-07-11 17:52:12,635 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-11 17:52:12,682 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-11 17:52:12,683 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 810 ms
2024-07-11 17:52:13,460 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8082"]
2024-07-11 17:52:13,478 INFO [main] TomcatWebServer: Tomcat started on port 8082 (http) with context path '/'
2024-07-11 17:52:13,509 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092, localhost:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-email-notification-created-topic-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = email-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-11 17:52:13,545 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-11 17:52:13,664 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-11 17:52:13,665 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-11 17:52:13,665 INFO [main] AppInfoParser: Kafka startTimeMs: 1720709533663
2024-07-11 17:52:13,668 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Subscribed to topic(s): email-notification-created-topic
2024-07-11 17:52:13,676 INFO [main] EmailNotificationsApplication: Started EmailNotificationsApplication in 2.115 seconds (process running for 2.46)
2024-07-11 17:52:13,904 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metadata: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-11 17:52:13,904 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Discovered group coordinator localhost:9096 (id: 2147483644 rack: null)
2024-07-11 17:52:13,906 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] (Re-)joining group
2024-07-11 17:52:13,922 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-email-notification-created-topic-1-b73fc036-4fca-4272-bbe9-0424374083dd
2024-07-11 17:52:13,922 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] (Re-)joining group
2024-07-11 17:52:16,936 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Successfully joined group with generation Generation{generationId=3, memberId='consumer-email-notification-created-topic-1-b73fc036-4fca-4272-bbe9-0424374083dd', protocol='range'}
2024-07-11 17:52:16,940 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Finished assignment for group at generation 3: {consumer-email-notification-created-topic-1-b73fc036-4fca-4272-bbe9-0424374083dd=Assignment(partitions=[email-notification-created-topic-0, email-notification-created-topic-1, email-notification-created-topic-2])}
2024-07-11 17:52:16,962 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Successfully synced group in generation Generation{generationId=3, memberId='consumer-email-notification-created-topic-1-b73fc036-4fca-4272-bbe9-0424374083dd', protocol='range'}
2024-07-11 17:52:16,962 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Notifying assignor about the new Assignment(partitions=[email-notification-created-topic-0, email-notification-created-topic-1, email-notification-created-topic-2])
2024-07-11 17:52:16,964 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Adding newly assigned partitions: email-notification-created-topic-0, email-notification-created-topic-1, email-notification-created-topic-2
2024-07-11 17:52:16,973 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition email-notification-created-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=5}}
2024-07-11 17:52:16,973 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition email-notification-created-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=7}}
2024-07-11 17:52:16,973 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition email-notification-created-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=6}}
2024-07-11 17:52:16,974 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: email-notification-created-topic: partitions assigned: [email-notification-created-topic-0, email-notification-created-topic-1, email-notification-created-topic-2]
2024-07-11 17:52:17,012 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] EmailNotificationCreatedEventHandler: Received event from abcde
2024-07-11 17:52:17,562 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] EmailNotificationCreatedEventHandler: Received event from bladeattheneck
2024-07-11 17:52:40,848 INFO [http-nio-8081-exec-1] [/]: Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-11 17:52:40,848 INFO [http-nio-8081-exec-1] DispatcherServlet: Initializing Servlet 'dispatcherServlet'
2024-07-11 17:52:40,849 INFO [http-nio-8081-exec-1] DispatcherServlet: Completed initialization in 1 ms
2024-07-11 17:52:40,864 TRACE [http-nio-8081-exec-1] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@52e57403, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@56c0e09a, org.springframework.security.web.context.SecurityContextHolderFilter@4ba32242, org.springframework.security.web.header.HeaderWriterFilter@10b063fd, org.springframework.security.web.authentication.logout.LogoutFilter@79bb14d8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@52b2c255, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@18f8c76d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1b751310, org.springframework.security.web.access.ExceptionTranslationFilter@54d6f172, org.springframework.security.web.access.intercept.AuthorizationFilter@3fe1b278]] (1/1)
2024-07-11 17:52:40,864 DEBUG [http-nio-8081-exec-1] FilterChainProxy: Securing POST /emergency-calls/call/
2024-07-11 17:52:40,865 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-11 17:52:40,865 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-11 17:52:40,866 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-11 17:52:40,867 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-11 17:52:40,868 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-11 17:52:40,868 TRACE [http-nio-8081-exec-1] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-11 17:52:40,868 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-11 17:52:40,868 TRACE [http-nio-8081-exec-1] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-11 17:52:40,868 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-11 17:52:40,869 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-11 17:52:40,869 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-11 17:52:40,869 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-11 17:52:40,869 TRACE [http-nio-8081-exec-1] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /emergency-calls/call/
2024-07-11 17:52:40,869 TRACE [http-nio-8081-exec-1] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /emergency-calls/call/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@4139981f
2024-07-11 17:52:40,869 TRACE [http-nio-8081-exec-1] HttpSessionSecurityContextRepository: No HttpSession currently exists
2024-07-11 17:52:40,869 TRACE [http-nio-8081-exec-1] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-11 17:52:40,870 TRACE [http-nio-8081-exec-1] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-11 17:52:40,870 TRACE [http-nio-8081-exec-1] AnonymousAuthenticationFilter: Set SecurityContextHolder to AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]]
2024-07-11 17:52:40,871 TRACE [http-nio-8081-exec-1] ExceptionTranslationFilter: Sending AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]] to authentication entry point since access is denied
org.springframework.security.access.AccessDeniedException: Access Denied
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:98)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2024-07-11 17:52:40,892 DEBUG [http-nio-8081-exec-1] HttpSessionRequestCache: Saved request http://localhost:8081/emergency-calls/call/?continue to session
2024-07-11 17:52:40,892 DEBUG [http-nio-8081-exec-1] Http403ForbiddenEntryPoint: Pre-authenticated entry point called. Rejecting access
2024-07-11 17:52:40,893 TRACE [http-nio-8081-exec-1] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-11 17:52:40,901 TRACE [http-nio-8081-exec-1] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@52e57403, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@56c0e09a, org.springframework.security.web.context.SecurityContextHolderFilter@4ba32242, org.springframework.security.web.header.HeaderWriterFilter@10b063fd, org.springframework.security.web.authentication.logout.LogoutFilter@79bb14d8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@52b2c255, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@18f8c76d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1b751310, org.springframework.security.web.access.ExceptionTranslationFilter@54d6f172, org.springframework.security.web.access.intercept.AuthorizationFilter@3fe1b278]] (1/1)
2024-07-11 17:52:40,901 DEBUG [http-nio-8081-exec-1] FilterChainProxy: Securing POST /error
2024-07-11 17:52:40,901 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-11 17:52:40,901 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-11 17:52:40,901 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-11 17:52:40,901 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-11 17:52:40,901 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-11 17:52:40,901 TRACE [http-nio-8081-exec-1] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-11 17:52:40,901 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-11 17:52:40,901 TRACE [http-nio-8081-exec-1] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-11 17:52:40,901 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-11 17:52:40,901 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-11 17:52:40,901 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-11 17:52:40,902 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-11 17:52:40,902 TRACE [http-nio-8081-exec-1] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /error
2024-07-11 17:52:40,902 TRACE [http-nio-8081-exec-1] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /error using org.springframework.security.authorization.AuthenticatedAuthorizationManager@4139981f
2024-07-11 17:52:40,902 TRACE [http-nio-8081-exec-1] HttpSessionSecurityContextRepository: Did not find SecurityContext in HttpSession 30374493875AF57D5D2E88D48D6A6B26 using the SPRING_SECURITY_CONTEXT session attribute
2024-07-11 17:52:40,902 TRACE [http-nio-8081-exec-1] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-11 17:52:40,902 TRACE [http-nio-8081-exec-1] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-11 17:52:40,902 TRACE [http-nio-8081-exec-1] AnonymousAuthenticationFilter: Set SecurityContextHolder to AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=30374493875AF57D5D2E88D48D6A6B26], Granted Authorities=[ROLE_ANONYMOUS]]
2024-07-11 17:52:40,902 TRACE [http-nio-8081-exec-1] ExceptionTranslationFilter: Sending AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=30374493875AF57D5D2E88D48D6A6B26], Granted Authorities=[ROLE_ANONYMOUS]] to authentication entry point since access is denied
org.springframework.security.access.AccessDeniedException: Access Denied
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:98)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:632)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:410)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:330)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:267)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:362)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:222)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2024-07-11 17:52:40,903 DEBUG [http-nio-8081-exec-1] HttpSessionRequestCache: Saved request http://localhost:8081/error?continue to session
2024-07-11 17:52:40,903 DEBUG [http-nio-8081-exec-1] Http403ForbiddenEntryPoint: Pre-authenticated entry point called. Rejecting access
2024-07-11 17:52:57,406 TRACE [http-nio-8081-exec-3] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@52e57403, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@56c0e09a, org.springframework.security.web.context.SecurityContextHolderFilter@4ba32242, org.springframework.security.web.header.HeaderWriterFilter@10b063fd, org.springframework.security.web.authentication.logout.LogoutFilter@79bb14d8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@52b2c255, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@18f8c76d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1b751310, org.springframework.security.web.access.ExceptionTranslationFilter@54d6f172, org.springframework.security.web.access.intercept.AuthorizationFilter@3fe1b278]] (1/1)
2024-07-11 17:52:57,406 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Securing POST /authentication/login/
2024-07-11 17:52:57,406 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-11 17:52:57,406 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-11 17:52:57,406 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-11 17:52:57,406 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-11 17:52:57,406 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-11 17:52:57,407 TRACE [http-nio-8081-exec-3] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-11 17:52:57,407 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-11 17:52:57,407 TRACE [http-nio-8081-exec-3] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-11 17:52:57,407 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-11 17:52:57,407 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-11 17:52:57,407 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-11 17:52:57,407 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-11 17:52:57,407 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /authentication/login/
2024-07-11 17:52:57,407 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /authentication/login/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@3e787cdb
2024-07-11 17:52:57,407 TRACE [http-nio-8081-exec-3] HttpSessionSecurityContextRepository: Did not find SecurityContext in HttpSession 30374493875AF57D5D2E88D48D6A6B26 using the SPRING_SECURITY_CONTEXT session attribute
2024-07-11 17:52:57,407 TRACE [http-nio-8081-exec-3] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-11 17:52:57,407 TRACE [http-nio-8081-exec-3] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-11 17:52:57,407 TRACE [http-nio-8081-exec-3] AnonymousAuthenticationFilter: Set SecurityContextHolder to AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=30374493875AF57D5D2E88D48D6A6B26], Granted Authorities=[ROLE_ANONYMOUS]]
2024-07-11 17:52:57,407 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Secured POST /authentication/login/
2024-07-11 17:52:57,459 TRACE [http-nio-8081-exec-3] ProviderManager: Authenticating request with DaoAuthenticationProvider (1/1)
2024-07-11 17:52:57,721 DEBUG [http-nio-8081-exec-3] DaoAuthenticationProvider: Authenticated user
2024-07-11 17:52:57,722 DEBUG [http-nio-8081-exec-3] HttpSessionSecurityContextRepository: Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@57ee15fe]
2024-07-11 17:52:57,740 TRACE [http-nio-8081-exec-3] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-11 17:53:04,969 TRACE [http-nio-8081-exec-4] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@52e57403, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@56c0e09a, org.springframework.security.web.context.SecurityContextHolderFilter@4ba32242, org.springframework.security.web.header.HeaderWriterFilter@10b063fd, org.springframework.security.web.authentication.logout.LogoutFilter@79bb14d8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@52b2c255, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@18f8c76d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1b751310, org.springframework.security.web.access.ExceptionTranslationFilter@54d6f172, org.springframework.security.web.access.intercept.AuthorizationFilter@3fe1b278]] (1/1)
2024-07-11 17:53:04,969 DEBUG [http-nio-8081-exec-4] FilterChainProxy: Securing POST /authentication/login/
2024-07-11 17:53:04,969 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-11 17:53:04,969 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-11 17:53:04,969 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-11 17:53:04,969 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-11 17:53:04,969 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-11 17:53:04,969 TRACE [http-nio-8081-exec-4] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-11 17:53:04,969 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-11 17:53:04,969 TRACE [http-nio-8081-exec-4] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-11 17:53:04,969 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-11 17:53:04,969 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-11 17:53:04,969 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-11 17:53:04,969 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-11 17:53:04,970 TRACE [http-nio-8081-exec-4] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /authentication/login/
2024-07-11 17:53:04,970 TRACE [http-nio-8081-exec-4] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /authentication/login/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@3e787cdb
2024-07-11 17:53:04,970 TRACE [http-nio-8081-exec-4] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]] from SPRING_SECURITY_CONTEXT
2024-07-11 17:53:04,970 TRACE [http-nio-8081-exec-4] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]
2024-07-11 17:53:04,970 TRACE [http-nio-8081-exec-4] ExceptionTranslationFilter: Sending UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]] to access denied handler since access is denied
org.springframework.security.access.AccessDeniedException: Access Denied
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:98)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2024-07-11 17:53:04,970 DEBUG [http-nio-8081-exec-4] AccessDeniedHandlerImpl: Responding with 403 status code
2024-07-11 17:53:04,970 TRACE [http-nio-8081-exec-4] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-11 17:53:04,971 TRACE [http-nio-8081-exec-4] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@52e57403, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@56c0e09a, org.springframework.security.web.context.SecurityContextHolderFilter@4ba32242, org.springframework.security.web.header.HeaderWriterFilter@10b063fd, org.springframework.security.web.authentication.logout.LogoutFilter@79bb14d8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@52b2c255, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@18f8c76d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1b751310, org.springframework.security.web.access.ExceptionTranslationFilter@54d6f172, org.springframework.security.web.access.intercept.AuthorizationFilter@3fe1b278]] (1/1)
2024-07-11 17:53:04,971 DEBUG [http-nio-8081-exec-4] FilterChainProxy: Securing POST /error
2024-07-11 17:53:04,971 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-11 17:53:04,971 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-11 17:53:04,971 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-11 17:53:04,971 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-11 17:53:04,971 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-11 17:53:04,971 TRACE [http-nio-8081-exec-4] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-11 17:53:04,971 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-11 17:53:04,971 TRACE [http-nio-8081-exec-4] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-11 17:53:04,971 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-11 17:53:04,971 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-11 17:53:04,971 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-11 17:53:04,971 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-11 17:53:04,971 TRACE [http-nio-8081-exec-4] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /error
2024-07-11 17:53:04,972 TRACE [http-nio-8081-exec-4] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /error using org.springframework.security.authorization.AuthenticatedAuthorizationManager@4139981f
2024-07-11 17:53:04,972 TRACE [http-nio-8081-exec-4] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]] from SPRING_SECURITY_CONTEXT
2024-07-11 17:53:04,972 TRACE [http-nio-8081-exec-4] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]
2024-07-11 17:53:04,972 DEBUG [http-nio-8081-exec-4] FilterChainProxy: Secured POST /error
2024-07-11 17:53:35,377 TRACE [http-nio-8081-exec-5] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@52e57403, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@56c0e09a, org.springframework.security.web.context.SecurityContextHolderFilter@4ba32242, org.springframework.security.web.header.HeaderWriterFilter@10b063fd, org.springframework.security.web.authentication.logout.LogoutFilter@79bb14d8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@52b2c255, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@18f8c76d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1b751310, org.springframework.security.web.access.ExceptionTranslationFilter@54d6f172, org.springframework.security.web.access.intercept.AuthorizationFilter@3fe1b278]] (1/1)
2024-07-11 17:53:35,377 DEBUG [http-nio-8081-exec-5] FilterChainProxy: Securing POST /callers/create/
2024-07-11 17:53:35,377 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-11 17:53:35,377 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-11 17:53:35,377 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-11 17:53:35,378 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-11 17:53:35,378 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-11 17:53:35,378 TRACE [http-nio-8081-exec-5] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-11 17:53:35,378 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-11 17:53:35,378 TRACE [http-nio-8081-exec-5] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-11 17:53:35,378 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-11 17:53:35,378 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-11 17:53:35,378 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-11 17:53:35,378 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-11 17:53:35,378 TRACE [http-nio-8081-exec-5] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /callers/create/
2024-07-11 17:53:35,378 TRACE [http-nio-8081-exec-5] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /callers/create/ using AuthorityAuthorizationManager[authorities=[ROLE_ADMIN]]
2024-07-11 17:53:35,378 TRACE [http-nio-8081-exec-5] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]] from SPRING_SECURITY_CONTEXT
2024-07-11 17:53:35,378 TRACE [http-nio-8081-exec-5] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]
2024-07-11 17:53:35,378 DEBUG [http-nio-8081-exec-5] FilterChainProxy: Secured POST /callers/create/
2024-07-11 17:53:35,470 TRACE [http-nio-8081-exec-5] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-11 17:54:44,756 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Request joining group due to: group is already rebalancing
2024-07-11 17:54:44,756 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: group is already rebalancing
2024-07-11 17:54:44,757 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Revoke previously assigned partitions telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2
2024-07-11 17:54:44,757 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Revoke previously assigned partitions telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2
2024-07-11 17:54:44,757 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions revoked: [telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]
2024-07-11 17:54:44,757 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions revoked: [telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]
2024-07-11 17:54:44,758 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-11 17:54:44,758 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-11 17:54:44,759 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=23, memberId='consumer-telegram-notification-created-topic-1-f3ba5d51-11cb-4f11-a10f-82dfea39a47b', protocol='range'}
2024-07-11 17:54:44,759 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=23, memberId='consumer-telegram-notification-created-topic-2-67d74f38-0b76-4c47-9b56-1da1b805cf60', protocol='range'}
2024-07-11 17:54:44,893 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Finished assignment for group at generation 23: {consumer-telegram-notification-created-topic-2-67d74f38-0b76-4c47-9b56-1da1b805cf60=Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]), consumer-telegram-notification-created-topic-1-f3ba5d51-11cb-4f11-a10f-82dfea39a47b=Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2])}
2024-07-11 17:54:44,895 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=23, memberId='consumer-telegram-notification-created-topic-1-f3ba5d51-11cb-4f11-a10f-82dfea39a47b', protocol='range'}
2024-07-11 17:54:44,895 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=23, memberId='consumer-telegram-notification-created-topic-2-67d74f38-0b76-4c47-9b56-1da1b805cf60', protocol='range'}
2024-07-11 17:54:44,896 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2])
2024-07-11 17:54:44,896 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2])
2024-07-11 17:54:44,896 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2
2024-07-11 17:54:44,896 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2
2024-07-11 17:54:44,896 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-1 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=6}}
2024-07-11 17:54:44,896 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-0 to the committed offset FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=6}}
2024-07-11 17:54:44,896 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=7}}
2024-07-11 17:54:44,896 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-2 to the committed offset FetchPosition{offset=7, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=7}}
2024-07-11 17:54:44,896 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-2 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=5}}
2024-07-11 17:54:44,896 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-1 to the committed offset FetchPosition{offset=7, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=5}}
2024-07-11 17:54:44,897 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]
2024-07-11 17:54:44,897 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]
2024-07-11 17:56:00,181 INFO [background-preinit] Version: HV000001: Hibernate Validator 8.0.1.Final
2024-07-11 17:56:00,209 INFO [main] EmergencyApplication: Starting EmergencyApplication using Java 17.0.10 with PID 15632 (D:\programming\java\emergency-ms\emergency\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-11 17:56:00,210 DEBUG [main] EmergencyApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-11 17:56:00,211 INFO [main] EmergencyApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-11 17:56:00,769 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-11 17:56:00,815 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 40 ms. Found 3 JPA repository interfaces.
2024-07-11 17:56:01,306 INFO [main] TomcatWebServer: Tomcat initialized with port 8081 (http)
2024-07-11 17:56:01,315 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8081"]
2024-07-11 17:56:01,316 INFO [main] StandardService: Starting service [Tomcat]
2024-07-11 17:56:01,316 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-11 17:56:01,376 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-11 17:56:01,377 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1133 ms
2024-07-11 17:56:01,576 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-11 17:56:01,705 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7159d601
2024-07-11 17:56:01,705 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-11 17:56:01,730 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_notifications_db (PostgreSQL 16.3)
2024-07-11 17:56:01,764 INFO [main] DbValidate: Successfully validated 2 migrations (execution time 00:00.020s)
2024-07-11 17:56:01,794 INFO [main] DbMigrate: Current version of schema "public": 1.1
2024-07-11 17:56:01,796 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-11 17:56:01,858 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-11 17:56:01,904 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-11 17:56:01,942 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-11 17:56:02,201 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-11 17:56:02,718 INFO [main] EntityInstantiatorPojoStandard: HHH000182: No default (no-argument) constructor for class: org.example.emergency.entity.EmergencyCall (class must be instantiated by Interceptor)
2024-07-11 17:56:02,902 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-11 17:56:02,903 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-11 17:56:03,139 TRACE [main] AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer: Eagerly initializing {securityConfig=org.example.emergency.config.SecurityConfig$$SpringCGLIB$$0@1bf4a79b}
2024-07-11 17:56:03,148 INFO [main] InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer: Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-07-11 17:56:03,149 WARN [main] InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer: Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-07-11 17:56:03,213 INFO [main] QueryEnhancerFactory: Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-11 17:56:03,264 WARN [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-11 17:56:03,443 DEBUG [main] DefaultSecurityFilterChain: Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-11 17:56:03,657 INFO [main] AdminClientConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-07-11 17:56:03,730 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-11 17:56:03,731 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-11 17:56:03,731 INFO [main] AppInfoParser: Kafka startTimeMs: 1720709763730
2024-07-11 17:56:03,926 INFO [kafka-admin-client-thread | emergency-admin-0] AppInfoParser: App info kafka.admin.client for emergency-admin-0 unregistered
2024-07-11 17:56:03,929 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics scheduler closed
2024-07-11 17:56:03,929 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-11 17:56:03,929 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics reporters closed
2024-07-11 17:56:03,933 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8081"]
2024-07-11 17:56:03,941 INFO [main] TomcatWebServer: Tomcat started on port 8081 (http) with context path '/'
2024-07-11 17:56:03,959 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092, localhost:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-telegram-notification-created-topic-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = telegram-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-11 17:56:03,983 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-11 17:56:04,032 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-11 17:56:04,032 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-11 17:56:04,032 INFO [main] AppInfoParser: Kafka startTimeMs: 1720709764032
2024-07-11 17:56:04,034 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Subscribed to topic(s): telegram-receiver-user-response-topic
2024-07-11 17:56:04,048 INFO [main] EmergencyApplication: Started EmergencyApplication in 4.112 seconds (process running for 4.484)
2024-07-11 17:56:04,052 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metadata: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-11 17:56:04,054 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-11 17:56:04,056 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-11 17:56:04,067 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-telegram-notification-created-topic-1-c4fe7e71-3fcc-4747-8357-0d7f0ae7ec9f
2024-07-11 17:56:04,067 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-11 17:56:05,994 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Request joining group due to: group is already rebalancing
2024-07-11 17:56:05,994 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: group is already rebalancing
2024-07-11 17:56:05,994 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Revoke previously assigned partitions telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2
2024-07-11 17:56:05,994 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Revoke previously assigned partitions telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2
2024-07-11 17:56:05,994 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions revoked: [telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]
2024-07-11 17:56:05,994 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions revoked: [telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]
2024-07-11 17:56:05,994 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-11 17:56:05,996 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-11 17:56:05,997 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=24, memberId='consumer-telegram-notification-created-topic-1-f3ba5d51-11cb-4f11-a10f-82dfea39a47b', protocol='range'}
2024-07-11 17:56:05,997 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=24, memberId='consumer-telegram-notification-created-topic-2-67d74f38-0b76-4c47-9b56-1da1b805cf60', protocol='range'}
2024-07-11 17:56:05,997 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=24, memberId='consumer-telegram-notification-created-topic-1-c4fe7e71-3fcc-4747-8357-0d7f0ae7ec9f', protocol='range'}
2024-07-11 17:56:06,497 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Finished assignment for group at generation 24: {consumer-telegram-notification-created-topic-1-c4fe7e71-3fcc-4747-8357-0d7f0ae7ec9f=Assignment(partitions=[telegram-receiver-user-response-topic-0]), consumer-telegram-notification-created-topic-2-67d74f38-0b76-4c47-9b56-1da1b805cf60=Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]), consumer-telegram-notification-created-topic-1-f3ba5d51-11cb-4f11-a10f-82dfea39a47b=Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2])}
2024-07-11 17:56:06,498 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=24, memberId='consumer-telegram-notification-created-topic-2-67d74f38-0b76-4c47-9b56-1da1b805cf60', protocol='range'}
2024-07-11 17:56:06,498 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=24, memberId='consumer-telegram-notification-created-topic-1-f3ba5d51-11cb-4f11-a10f-82dfea39a47b', protocol='range'}
2024-07-11 17:56:06,498 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2])
2024-07-11 17:56:06,498 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2])
2024-07-11 17:56:06,498 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2
2024-07-11 17:56:06,498 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2
2024-07-11 17:56:06,499 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=24, memberId='consumer-telegram-notification-created-topic-1-c4fe7e71-3fcc-4747-8357-0d7f0ae7ec9f', protocol='range'}
2024-07-11 17:56:06,499 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-1 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=6}}
2024-07-11 17:56:06,499 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-0 to the committed offset FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=6}}
2024-07-11 17:56:06,500 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=7}}
2024-07-11 17:56:06,500 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-2 to the committed offset FetchPosition{offset=7, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=7}}
2024-07-11 17:56:06,500 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-2 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=5}}
2024-07-11 17:56:06,500 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-1 to the committed offset FetchPosition{offset=7, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=5}}
2024-07-11 17:56:06,500 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]
2024-07-11 17:56:06,500 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]
2024-07-11 17:56:06,500 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-receiver-user-response-topic-0])
2024-07-11 17:56:06,502 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-receiver-user-response-topic-0
2024-07-11 17:56:06,508 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-response-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=2}}
2024-07-11 17:56:06,509 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-receiver-user-response-topic-0]
2024-07-11 17:56:13,523 INFO [http-nio-8081-exec-1] [/]: Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-11 17:56:13,523 INFO [http-nio-8081-exec-1] DispatcherServlet: Initializing Servlet 'dispatcherServlet'
2024-07-11 17:56:13,524 INFO [http-nio-8081-exec-1] DispatcherServlet: Completed initialization in 1 ms
2024-07-11 17:56:13,537 TRACE [http-nio-8081-exec-1] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@5bc2526e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4aa7227d, org.springframework.security.web.context.SecurityContextHolderFilter@683218c8, org.springframework.security.web.header.HeaderWriterFilter@5f113867, org.springframework.security.web.authentication.logout.LogoutFilter@175377d3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@345f4e0d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64b242b3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@70a22146, org.springframework.security.web.access.ExceptionTranslationFilter@420c9959, org.springframework.security.web.access.intercept.AuthorizationFilter@3fc105dd]] (1/1)
2024-07-11 17:56:13,538 DEBUG [http-nio-8081-exec-1] FilterChainProxy: Securing POST /authentication/login/
2024-07-11 17:56:13,538 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-11 17:56:13,538 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-11 17:56:13,540 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-11 17:56:13,540 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-11 17:56:13,541 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-11 17:56:13,541 TRACE [http-nio-8081-exec-1] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-11 17:56:13,541 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-11 17:56:13,541 TRACE [http-nio-8081-exec-1] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-11 17:56:13,542 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-11 17:56:13,542 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-11 17:56:13,542 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-11 17:56:13,542 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-11 17:56:13,543 TRACE [http-nio-8081-exec-1] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /authentication/login/
2024-07-11 17:56:13,543 TRACE [http-nio-8081-exec-1] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /authentication/login/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@38d3256d
2024-07-11 17:56:13,543 TRACE [http-nio-8081-exec-1] HttpSessionSecurityContextRepository: No HttpSession currently exists
2024-07-11 17:56:13,543 TRACE [http-nio-8081-exec-1] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-11 17:56:13,544 TRACE [http-nio-8081-exec-1] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-11 17:56:13,544 TRACE [http-nio-8081-exec-1] AnonymousAuthenticationFilter: Set SecurityContextHolder to AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]]
2024-07-11 17:56:13,544 DEBUG [http-nio-8081-exec-1] FilterChainProxy: Secured POST /authentication/login/
2024-07-11 17:56:13,602 TRACE [http-nio-8081-exec-1] ProviderManager: Authenticating request with DaoAuthenticationProvider (1/1)
2024-07-11 17:56:13,816 DEBUG [http-nio-8081-exec-1] DaoAuthenticationProvider: Authenticated user
2024-07-11 17:56:13,837 DEBUG [http-nio-8081-exec-1] HttpSessionSecurityContextRepository: Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@79b5393f]
2024-07-11 17:56:13,858 TRACE [http-nio-8081-exec-1] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-11 17:56:17,265 TRACE [http-nio-8081-exec-4] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@5bc2526e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4aa7227d, org.springframework.security.web.context.SecurityContextHolderFilter@683218c8, org.springframework.security.web.header.HeaderWriterFilter@5f113867, org.springframework.security.web.authentication.logout.LogoutFilter@175377d3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@345f4e0d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64b242b3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@70a22146, org.springframework.security.web.access.ExceptionTranslationFilter@420c9959, org.springframework.security.web.access.intercept.AuthorizationFilter@3fc105dd]] (1/1)
2024-07-11 17:56:17,265 DEBUG [http-nio-8081-exec-4] FilterChainProxy: Securing POST /callers/create/
2024-07-11 17:56:17,265 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-11 17:56:17,265 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-11 17:56:17,265 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-11 17:56:17,265 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-11 17:56:17,265 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-11 17:56:17,265 TRACE [http-nio-8081-exec-4] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-11 17:56:17,265 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-11 17:56:17,265 TRACE [http-nio-8081-exec-4] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-11 17:56:17,265 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-11 17:56:17,266 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-11 17:56:17,266 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-11 17:56:17,266 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-11 17:56:17,266 TRACE [http-nio-8081-exec-4] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /callers/create/
2024-07-11 17:56:17,266 TRACE [http-nio-8081-exec-4] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /callers/create/ using AuthorityAuthorizationManager[authorities=[ROLE_ADMIN]]
2024-07-11 17:56:17,266 TRACE [http-nio-8081-exec-4] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]] from SPRING_SECURITY_CONTEXT
2024-07-11 17:56:17,266 TRACE [http-nio-8081-exec-4] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]
2024-07-11 17:56:17,266 DEBUG [http-nio-8081-exec-4] FilterChainProxy: Secured POST /callers/create/
2024-07-11 17:56:17,328 TRACE [http-nio-8081-exec-4] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-11 17:56:25,807 TRACE [http-nio-8081-exec-5] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@5bc2526e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4aa7227d, org.springframework.security.web.context.SecurityContextHolderFilter@683218c8, org.springframework.security.web.header.HeaderWriterFilter@5f113867, org.springframework.security.web.authentication.logout.LogoutFilter@175377d3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@345f4e0d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64b242b3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@70a22146, org.springframework.security.web.access.ExceptionTranslationFilter@420c9959, org.springframework.security.web.access.intercept.AuthorizationFilter@3fc105dd]] (1/1)
2024-07-11 17:56:25,807 DEBUG [http-nio-8081-exec-5] FilterChainProxy: Securing POST /callers/create/
2024-07-11 17:56:25,807 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-11 17:56:25,807 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-11 17:56:25,807 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-11 17:56:25,807 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-11 17:56:25,807 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-11 17:56:25,807 TRACE [http-nio-8081-exec-5] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-11 17:56:25,807 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-11 17:56:25,807 TRACE [http-nio-8081-exec-5] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-11 17:56:25,807 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-11 17:56:25,807 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-11 17:56:25,807 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-11 17:56:25,808 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-11 17:56:25,808 TRACE [http-nio-8081-exec-5] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /callers/create/
2024-07-11 17:56:25,808 TRACE [http-nio-8081-exec-5] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /callers/create/ using AuthorityAuthorizationManager[authorities=[ROLE_ADMIN]]
2024-07-11 17:56:25,808 TRACE [http-nio-8081-exec-5] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]] from SPRING_SECURITY_CONTEXT
2024-07-11 17:56:25,808 TRACE [http-nio-8081-exec-5] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]
2024-07-11 17:56:25,808 DEBUG [http-nio-8081-exec-5] FilterChainProxy: Secured POST /callers/create/
2024-07-11 17:56:25,811 TRACE [http-nio-8081-exec-5] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-11 17:56:39,641 TRACE [http-nio-8081-exec-8] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@5bc2526e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4aa7227d, org.springframework.security.web.context.SecurityContextHolderFilter@683218c8, org.springframework.security.web.header.HeaderWriterFilter@5f113867, org.springframework.security.web.authentication.logout.LogoutFilter@175377d3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@345f4e0d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64b242b3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@70a22146, org.springframework.security.web.access.ExceptionTranslationFilter@420c9959, org.springframework.security.web.access.intercept.AuthorizationFilter@3fc105dd]] (1/1)
2024-07-11 17:56:39,641 DEBUG [http-nio-8081-exec-8] FilterChainProxy: Securing DELETE /callers/ekynd01/
2024-07-11 17:56:39,641 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-11 17:56:39,641 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-11 17:56:39,641 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-11 17:56:39,641 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-11 17:56:39,641 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-11 17:56:39,641 TRACE [http-nio-8081-exec-8] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-11 17:56:39,641 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-11 17:56:39,641 TRACE [http-nio-8081-exec-8] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-11 17:56:39,641 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-11 17:56:39,641 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-11 17:56:39,641 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-11 17:56:39,641 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-11 17:56:39,641 TRACE [http-nio-8081-exec-8] RequestMatcherDelegatingAuthorizationManager: Authorizing DELETE /callers/ekynd01/
2024-07-11 17:56:39,642 TRACE [http-nio-8081-exec-8] RequestMatcherDelegatingAuthorizationManager: Checking authorization on DELETE /callers/ekynd01/ using AuthorityAuthorizationManager[authorities=[ROLE_ADMIN]]
2024-07-11 17:56:39,642 TRACE [http-nio-8081-exec-8] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]] from SPRING_SECURITY_CONTEXT
2024-07-11 17:56:39,642 TRACE [http-nio-8081-exec-8] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]
2024-07-11 17:56:39,642 DEBUG [http-nio-8081-exec-8] FilterChainProxy: Secured DELETE /callers/ekynd01/
2024-07-11 17:56:39,651 TRACE [http-nio-8081-exec-8] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-11 17:56:44,593 TRACE [http-nio-8081-exec-6] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@5bc2526e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4aa7227d, org.springframework.security.web.context.SecurityContextHolderFilter@683218c8, org.springframework.security.web.header.HeaderWriterFilter@5f113867, org.springframework.security.web.authentication.logout.LogoutFilter@175377d3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@345f4e0d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64b242b3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@70a22146, org.springframework.security.web.access.ExceptionTranslationFilter@420c9959, org.springframework.security.web.access.intercept.AuthorizationFilter@3fc105dd]] (1/1)
2024-07-11 17:56:44,593 DEBUG [http-nio-8081-exec-6] FilterChainProxy: Securing DELETE /callers/ekynd0111/
2024-07-11 17:56:44,593 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-11 17:56:44,593 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-11 17:56:44,593 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-11 17:56:44,593 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-11 17:56:44,593 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-11 17:56:44,593 TRACE [http-nio-8081-exec-6] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-11 17:56:44,593 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-11 17:56:44,593 TRACE [http-nio-8081-exec-6] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-11 17:56:44,593 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-11 17:56:44,594 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-11 17:56:44,594 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-11 17:56:44,594 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-11 17:56:44,594 TRACE [http-nio-8081-exec-6] RequestMatcherDelegatingAuthorizationManager: Authorizing DELETE /callers/ekynd0111/
2024-07-11 17:56:44,594 TRACE [http-nio-8081-exec-6] RequestMatcherDelegatingAuthorizationManager: Checking authorization on DELETE /callers/ekynd0111/ using AuthorityAuthorizationManager[authorities=[ROLE_ADMIN]]
2024-07-11 17:56:44,594 TRACE [http-nio-8081-exec-6] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]] from SPRING_SECURITY_CONTEXT
2024-07-11 17:56:44,594 TRACE [http-nio-8081-exec-6] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]
2024-07-11 17:56:44,594 DEBUG [http-nio-8081-exec-6] FilterChainProxy: Secured DELETE /callers/ekynd0111/
2024-07-11 17:56:44,598 TRACE [http-nio-8081-exec-6] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-11 17:59:51,073 INFO [background-preinit] Version: HV000001: Hibernate Validator 8.0.1.Final
2024-07-11 17:59:51,103 INFO [main] EmergencyApplication: Starting EmergencyApplication using Java 17.0.10 with PID 1032 (D:\programming\java\emergency-ms\emergency\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-11 17:59:51,103 DEBUG [main] EmergencyApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-11 17:59:51,104 INFO [main] EmergencyApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-11 17:59:51,729 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-11 17:59:51,789 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 48 ms. Found 3 JPA repository interfaces.
2024-07-11 17:59:52,324 INFO [main] TomcatWebServer: Tomcat initialized with port 8081 (http)
2024-07-11 17:59:52,334 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8081"]
2024-07-11 17:59:52,336 INFO [main] StandardService: Starting service [Tomcat]
2024-07-11 17:59:52,336 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-11 17:59:52,380 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-11 17:59:52,381 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1240 ms
2024-07-11 17:59:52,585 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-11 17:59:52,714 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@70b33256
2024-07-11 17:59:52,715 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-11 17:59:52,741 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_notifications_db (PostgreSQL 16.3)
2024-07-11 17:59:52,782 INFO [main] DbValidate: Successfully validated 2 migrations (execution time 00:00.027s)
2024-07-11 17:59:52,821 INFO [main] DbMigrate: Current version of schema "public": 1.1
2024-07-11 17:59:52,823 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-11 17:59:52,897 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-11 17:59:52,946 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-11 17:59:52,977 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-11 17:59:53,218 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-11 17:59:53,752 INFO [main] EntityInstantiatorPojoStandard: HHH000182: No default (no-argument) constructor for class: org.example.emergency.entity.EmergencyCall (class must be instantiated by Interceptor)
2024-07-11 17:59:53,957 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-11 17:59:53,959 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-11 17:59:54,227 TRACE [main] AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer: Eagerly initializing {securityConfig=org.example.emergency.config.SecurityConfig$$SpringCGLIB$$0@a1be5cb}
2024-07-11 17:59:54,237 INFO [main] InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer: Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-07-11 17:59:54,238 WARN [main] InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer: Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-07-11 17:59:54,312 INFO [main] QueryEnhancerFactory: Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-11 17:59:54,376 WARN [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-11 17:59:54,600 DEBUG [main] DefaultSecurityFilterChain: Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-11 17:59:54,851 INFO [main] AdminClientConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-07-11 17:59:54,930 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-11 17:59:54,930 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-11 17:59:54,930 INFO [main] AppInfoParser: Kafka startTimeMs: 1720709994929
2024-07-11 17:59:55,131 INFO [kafka-admin-client-thread | emergency-admin-0] AppInfoParser: App info kafka.admin.client for emergency-admin-0 unregistered
2024-07-11 17:59:55,134 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics scheduler closed
2024-07-11 17:59:55,134 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-11 17:59:55,134 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics reporters closed
2024-07-11 17:59:55,137 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8081"]
2024-07-11 17:59:55,147 INFO [main] TomcatWebServer: Tomcat started on port 8081 (http) with context path '/'
2024-07-11 17:59:55,167 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092, localhost:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-telegram-notification-created-topic-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = telegram-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-11 17:59:55,196 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-11 17:59:55,246 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-11 17:59:55,246 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-11 17:59:55,246 INFO [main] AppInfoParser: Kafka startTimeMs: 1720709995246
2024-07-11 17:59:55,248 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Subscribed to topic(s): telegram-receiver-user-response-topic
2024-07-11 17:59:55,265 INFO [main] EmergencyApplication: Started EmergencyApplication in 4.447 seconds (process running for 4.817)
2024-07-11 17:59:55,269 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metadata: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-11 17:59:55,270 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-11 17:59:55,272 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-11 17:59:55,280 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-telegram-notification-created-topic-1-56457dc5-1973-4bbc-ab04-3f0b1c39eeef
2024-07-11 17:59:55,280 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-11 17:59:57,699 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Request joining group due to: group is already rebalancing
2024-07-11 17:59:57,699 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: group is already rebalancing
2024-07-11 17:59:57,700 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Revoke previously assigned partitions telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2
2024-07-11 17:59:57,700 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Revoke previously assigned partitions telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2
2024-07-11 17:59:57,700 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions revoked: [telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]
2024-07-11 17:59:57,700 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions revoked: [telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]
2024-07-11 17:59:57,700 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-11 17:59:57,700 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-11 18:00:33,678 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=25, memberId='consumer-telegram-notification-created-topic-2-67d74f38-0b76-4c47-9b56-1da1b805cf60', protocol='range'}
2024-07-11 18:00:33,678 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=25, memberId='consumer-telegram-notification-created-topic-1-f3ba5d51-11cb-4f11-a10f-82dfea39a47b', protocol='range'}
2024-07-11 18:00:33,679 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=25, memberId='consumer-telegram-notification-created-topic-1-56457dc5-1973-4bbc-ab04-3f0b1c39eeef', protocol='range'}
2024-07-11 18:00:33,680 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Finished assignment for group at generation 25: {consumer-telegram-notification-created-topic-2-67d74f38-0b76-4c47-9b56-1da1b805cf60=Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]), consumer-telegram-notification-created-topic-1-56457dc5-1973-4bbc-ab04-3f0b1c39eeef=Assignment(partitions=[telegram-receiver-user-response-topic-0]), consumer-telegram-notification-created-topic-1-f3ba5d51-11cb-4f11-a10f-82dfea39a47b=Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2])}
2024-07-11 18:00:33,682 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=25, memberId='consumer-telegram-notification-created-topic-1-f3ba5d51-11cb-4f11-a10f-82dfea39a47b', protocol='range'}
2024-07-11 18:00:33,682 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=25, memberId='consumer-telegram-notification-created-topic-2-67d74f38-0b76-4c47-9b56-1da1b805cf60', protocol='range'}
2024-07-11 18:00:33,682 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2])
2024-07-11 18:00:33,682 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2])
2024-07-11 18:00:33,682 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2
2024-07-11 18:00:33,682 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2
2024-07-11 18:00:33,682 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=25, memberId='consumer-telegram-notification-created-topic-1-56457dc5-1973-4bbc-ab04-3f0b1c39eeef', protocol='range'}
2024-07-11 18:00:33,683 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-0 to the committed offset FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=6}}
2024-07-11 18:00:33,683 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-1 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=6}}
2024-07-11 18:00:33,683 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-2 to the committed offset FetchPosition{offset=7, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=8}}
2024-07-11 18:00:33,683 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-1 to the committed offset FetchPosition{offset=7, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=6}}
2024-07-11 18:00:33,683 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=8}}
2024-07-11 18:00:33,683 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-2 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=6}}
2024-07-11 18:00:33,683 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]
2024-07-11 18:00:33,683 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]
2024-07-11 18:00:33,683 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-receiver-user-response-topic-0])
2024-07-11 18:00:33,685 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-receiver-user-response-topic-0
2024-07-11 18:00:33,689 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-response-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=2}}
2024-07-11 18:00:33,690 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-receiver-user-response-topic-0]
2024-07-11 18:01:10,716 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Node -1 disconnected.
2024-07-11 18:01:10,716 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node -2 disconnected.
2024-07-11 18:01:10,718 INFO [kafka-coordinator-heartbeat-thread | telegram-notification-created-topic] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Node -2 disconnected.
2024-07-11 18:01:10,718 INFO [kafka-coordinator-heartbeat-thread | telegram-notification-created-topic] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node -1 disconnected.
2024-07-11 18:01:13,917 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node -2 disconnected.
2024-07-11 18:01:13,919 INFO [kafka-coordinator-heartbeat-thread | email-notification-created-topic] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node -1 disconnected.
2024-07-11 18:02:27,144 INFO [http-nio-8081-exec-1] [/]: Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-11 18:02:27,144 INFO [http-nio-8081-exec-1] DispatcherServlet: Initializing Servlet 'dispatcherServlet'
2024-07-11 18:02:27,145 INFO [http-nio-8081-exec-1] DispatcherServlet: Completed initialization in 1 ms
2024-07-11 18:02:27,156 TRACE [http-nio-8081-exec-1] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6ce7f47f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@562ef172, org.springframework.security.web.context.SecurityContextHolderFilter@3eb6d7a9, org.springframework.security.web.header.HeaderWriterFilter@72cf159f, org.springframework.security.web.authentication.logout.LogoutFilter@645b67d6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1c3eeda4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6cb1da13, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5b5eb23f, org.springframework.security.web.access.ExceptionTranslationFilter@7e584f3c, org.springframework.security.web.access.intercept.AuthorizationFilter@35129b9e]] (1/1)
2024-07-11 18:02:27,157 DEBUG [http-nio-8081-exec-1] FilterChainProxy: Securing DELETE /callers/ekynd0111/
2024-07-11 18:02:27,157 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-11 18:02:27,157 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-11 18:02:27,158 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-11 18:02:27,159 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-11 18:02:27,159 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-11 18:02:27,159 TRACE [http-nio-8081-exec-1] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-11 18:02:27,159 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-11 18:02:27,161 TRACE [http-nio-8081-exec-1] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-11 18:02:27,161 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-11 18:02:27,161 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-11 18:02:27,161 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-11 18:02:27,161 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-11 18:02:27,162 TRACE [http-nio-8081-exec-1] RequestMatcherDelegatingAuthorizationManager: Authorizing DELETE /callers/ekynd0111/
2024-07-11 18:02:27,162 TRACE [http-nio-8081-exec-1] RequestMatcherDelegatingAuthorizationManager: Checking authorization on DELETE /callers/ekynd0111/ using AuthorityAuthorizationManager[authorities=[ROLE_ADMIN]]
2024-07-11 18:02:27,163 TRACE [http-nio-8081-exec-1] HttpSessionSecurityContextRepository: No HttpSession currently exists
2024-07-11 18:02:27,163 TRACE [http-nio-8081-exec-1] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-11 18:02:27,163 TRACE [http-nio-8081-exec-1] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-11 18:02:27,163 TRACE [http-nio-8081-exec-1] AnonymousAuthenticationFilter: Set SecurityContextHolder to AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]]
2024-07-11 18:02:27,164 TRACE [http-nio-8081-exec-1] ExceptionTranslationFilter: Sending AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]] to authentication entry point since access is denied
org.springframework.security.access.AccessDeniedException: Access Denied
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:98)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2024-07-11 18:02:27,187 DEBUG [http-nio-8081-exec-1] HttpSessionRequestCache: Saved request http://localhost:8081/callers/ekynd0111/?continue to session
2024-07-11 18:02:27,187 DEBUG [http-nio-8081-exec-1] Http403ForbiddenEntryPoint: Pre-authenticated entry point called. Rejecting access
2024-07-11 18:02:27,187 TRACE [http-nio-8081-exec-1] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-11 18:02:27,192 TRACE [http-nio-8081-exec-1] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6ce7f47f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@562ef172, org.springframework.security.web.context.SecurityContextHolderFilter@3eb6d7a9, org.springframework.security.web.header.HeaderWriterFilter@72cf159f, org.springframework.security.web.authentication.logout.LogoutFilter@645b67d6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1c3eeda4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6cb1da13, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5b5eb23f, org.springframework.security.web.access.ExceptionTranslationFilter@7e584f3c, org.springframework.security.web.access.intercept.AuthorizationFilter@35129b9e]] (1/1)
2024-07-11 18:02:27,192 DEBUG [http-nio-8081-exec-1] FilterChainProxy: Securing DELETE /error
2024-07-11 18:02:27,192 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-11 18:02:27,192 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-11 18:02:27,192 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-11 18:02:27,192 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-11 18:02:27,192 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-11 18:02:27,192 TRACE [http-nio-8081-exec-1] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-11 18:02:27,192 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-11 18:02:27,192 TRACE [http-nio-8081-exec-1] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-11 18:02:27,192 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-11 18:02:27,192 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-11 18:02:27,192 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-11 18:02:27,192 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-11 18:02:27,192 TRACE [http-nio-8081-exec-1] RequestMatcherDelegatingAuthorizationManager: Authorizing DELETE /error
2024-07-11 18:02:27,192 TRACE [http-nio-8081-exec-1] RequestMatcherDelegatingAuthorizationManager: Checking authorization on DELETE /error using org.springframework.security.authorization.AuthenticatedAuthorizationManager@75217546
2024-07-11 18:02:27,193 TRACE [http-nio-8081-exec-1] HttpSessionSecurityContextRepository: Did not find SecurityContext in HttpSession 262B31AF7462478E6F5E7EEE8417C42A using the SPRING_SECURITY_CONTEXT session attribute
2024-07-11 18:02:27,193 TRACE [http-nio-8081-exec-1] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-11 18:02:27,193 TRACE [http-nio-8081-exec-1] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-11 18:02:27,193 TRACE [http-nio-8081-exec-1] AnonymousAuthenticationFilter: Set SecurityContextHolder to AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=262B31AF7462478E6F5E7EEE8417C42A], Granted Authorities=[ROLE_ANONYMOUS]]
2024-07-11 18:02:27,193 TRACE [http-nio-8081-exec-1] ExceptionTranslationFilter: Sending AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=262B31AF7462478E6F5E7EEE8417C42A], Granted Authorities=[ROLE_ANONYMOUS]] to authentication entry point since access is denied
org.springframework.security.access.AccessDeniedException: Access Denied
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:98)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:632)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:410)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:330)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:267)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:362)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:222)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2024-07-11 18:02:27,193 DEBUG [http-nio-8081-exec-1] HttpSessionRequestCache: Saved request http://localhost:8081/error?continue to session
2024-07-11 18:02:27,193 DEBUG [http-nio-8081-exec-1] Http403ForbiddenEntryPoint: Pre-authenticated entry point called. Rejecting access
2024-07-11 18:02:37,405 TRACE [http-nio-8081-exec-3] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6ce7f47f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@562ef172, org.springframework.security.web.context.SecurityContextHolderFilter@3eb6d7a9, org.springframework.security.web.header.HeaderWriterFilter@72cf159f, org.springframework.security.web.authentication.logout.LogoutFilter@645b67d6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1c3eeda4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6cb1da13, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5b5eb23f, org.springframework.security.web.access.ExceptionTranslationFilter@7e584f3c, org.springframework.security.web.access.intercept.AuthorizationFilter@35129b9e]] (1/1)
2024-07-11 18:02:37,406 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Securing POST /authentication/login/
2024-07-11 18:02:37,406 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-11 18:02:37,406 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-11 18:02:37,406 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-11 18:02:37,406 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-11 18:02:37,406 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-11 18:02:37,406 TRACE [http-nio-8081-exec-3] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-11 18:02:37,406 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-11 18:02:37,406 TRACE [http-nio-8081-exec-3] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-11 18:02:37,406 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-11 18:02:37,406 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-11 18:02:37,406 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-11 18:02:37,406 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-11 18:02:37,406 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /authentication/login/
2024-07-11 18:02:37,406 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /authentication/login/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@72874157
2024-07-11 18:02:37,406 TRACE [http-nio-8081-exec-3] HttpSessionSecurityContextRepository: Did not find SecurityContext in HttpSession 262B31AF7462478E6F5E7EEE8417C42A using the SPRING_SECURITY_CONTEXT session attribute
2024-07-11 18:02:37,406 TRACE [http-nio-8081-exec-3] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-11 18:02:37,406 TRACE [http-nio-8081-exec-3] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-11 18:02:37,406 TRACE [http-nio-8081-exec-3] AnonymousAuthenticationFilter: Set SecurityContextHolder to AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=262B31AF7462478E6F5E7EEE8417C42A], Granted Authorities=[ROLE_ANONYMOUS]]
2024-07-11 18:02:37,407 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Secured POST /authentication/login/
2024-07-11 18:02:37,459 TRACE [http-nio-8081-exec-3] ProviderManager: Authenticating request with DaoAuthenticationProvider (1/1)
2024-07-11 18:02:37,688 DEBUG [http-nio-8081-exec-3] DaoAuthenticationProvider: Authenticated user
2024-07-11 18:02:37,689 DEBUG [http-nio-8081-exec-3] HttpSessionSecurityContextRepository: Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@7319856e]
2024-07-11 18:02:37,705 TRACE [http-nio-8081-exec-3] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-11 18:02:40,518 TRACE [http-nio-8081-exec-4] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6ce7f47f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@562ef172, org.springframework.security.web.context.SecurityContextHolderFilter@3eb6d7a9, org.springframework.security.web.header.HeaderWriterFilter@72cf159f, org.springframework.security.web.authentication.logout.LogoutFilter@645b67d6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1c3eeda4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6cb1da13, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5b5eb23f, org.springframework.security.web.access.ExceptionTranslationFilter@7e584f3c, org.springframework.security.web.access.intercept.AuthorizationFilter@35129b9e]] (1/1)
2024-07-11 18:02:40,518 DEBUG [http-nio-8081-exec-4] FilterChainProxy: Securing DELETE /callers/ekynd0111/
2024-07-11 18:02:40,518 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-11 18:02:40,518 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-11 18:02:40,518 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-11 18:02:40,518 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-11 18:02:40,518 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-11 18:02:40,518 TRACE [http-nio-8081-exec-4] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-11 18:02:40,518 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-11 18:02:40,518 TRACE [http-nio-8081-exec-4] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-11 18:02:40,518 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-11 18:02:40,518 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-11 18:02:40,518 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-11 18:02:40,518 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-11 18:02:40,518 TRACE [http-nio-8081-exec-4] RequestMatcherDelegatingAuthorizationManager: Authorizing DELETE /callers/ekynd0111/
2024-07-11 18:02:40,519 TRACE [http-nio-8081-exec-4] RequestMatcherDelegatingAuthorizationManager: Checking authorization on DELETE /callers/ekynd0111/ using AuthorityAuthorizationManager[authorities=[ROLE_ADMIN]]
2024-07-11 18:02:40,519 TRACE [http-nio-8081-exec-4] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]] from SPRING_SECURITY_CONTEXT
2024-07-11 18:02:40,519 TRACE [http-nio-8081-exec-4] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]
2024-07-11 18:02:40,519 DEBUG [http-nio-8081-exec-4] FilterChainProxy: Secured DELETE /callers/ekynd0111/
2024-07-11 18:02:40,531 TRACE [http-nio-8081-exec-4] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-11 18:02:44,994 TRACE [http-nio-8081-exec-6] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6ce7f47f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@562ef172, org.springframework.security.web.context.SecurityContextHolderFilter@3eb6d7a9, org.springframework.security.web.header.HeaderWriterFilter@72cf159f, org.springframework.security.web.authentication.logout.LogoutFilter@645b67d6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1c3eeda4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6cb1da13, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5b5eb23f, org.springframework.security.web.access.ExceptionTranslationFilter@7e584f3c, org.springframework.security.web.access.intercept.AuthorizationFilter@35129b9e]] (1/1)
2024-07-11 18:02:44,994 DEBUG [http-nio-8081-exec-6] FilterChainProxy: Securing DELETE /callers/ekynd01/
2024-07-11 18:02:44,994 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-11 18:02:44,994 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-11 18:02:44,994 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-11 18:02:44,994 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-11 18:02:44,994 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-11 18:02:44,994 TRACE [http-nio-8081-exec-6] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-11 18:02:44,994 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-11 18:02:44,994 TRACE [http-nio-8081-exec-6] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-11 18:02:44,994 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-11 18:02:44,995 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-11 18:02:44,995 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-11 18:02:44,995 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-11 18:02:44,995 TRACE [http-nio-8081-exec-6] RequestMatcherDelegatingAuthorizationManager: Authorizing DELETE /callers/ekynd01/
2024-07-11 18:02:44,995 TRACE [http-nio-8081-exec-6] RequestMatcherDelegatingAuthorizationManager: Checking authorization on DELETE /callers/ekynd01/ using AuthorityAuthorizationManager[authorities=[ROLE_ADMIN]]
2024-07-11 18:02:44,995 TRACE [http-nio-8081-exec-6] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]] from SPRING_SECURITY_CONTEXT
2024-07-11 18:02:44,995 TRACE [http-nio-8081-exec-6] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]
2024-07-11 18:02:44,995 DEBUG [http-nio-8081-exec-6] FilterChainProxy: Secured DELETE /callers/ekynd01/
2024-07-11 18:02:44,998 TRACE [http-nio-8081-exec-6] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-11 18:02:47,839 TRACE [http-nio-8081-exec-8] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6ce7f47f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@562ef172, org.springframework.security.web.context.SecurityContextHolderFilter@3eb6d7a9, org.springframework.security.web.header.HeaderWriterFilter@72cf159f, org.springframework.security.web.authentication.logout.LogoutFilter@645b67d6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1c3eeda4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6cb1da13, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5b5eb23f, org.springframework.security.web.access.ExceptionTranslationFilter@7e584f3c, org.springframework.security.web.access.intercept.AuthorizationFilter@35129b9e]] (1/1)
2024-07-11 18:02:47,839 DEBUG [http-nio-8081-exec-8] FilterChainProxy: Securing DELETE /callers/ekynd0/
2024-07-11 18:02:47,839 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-11 18:02:47,839 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-11 18:02:47,839 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-11 18:02:47,839 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-11 18:02:47,839 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-11 18:02:47,839 TRACE [http-nio-8081-exec-8] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-11 18:02:47,839 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-11 18:02:47,839 TRACE [http-nio-8081-exec-8] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-11 18:02:47,839 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-11 18:02:47,839 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-11 18:02:47,839 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-11 18:02:47,839 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-11 18:02:47,839 TRACE [http-nio-8081-exec-8] RequestMatcherDelegatingAuthorizationManager: Authorizing DELETE /callers/ekynd0/
2024-07-11 18:02:47,839 TRACE [http-nio-8081-exec-8] RequestMatcherDelegatingAuthorizationManager: Checking authorization on DELETE /callers/ekynd0/ using AuthorityAuthorizationManager[authorities=[ROLE_ADMIN]]
2024-07-11 18:02:47,839 TRACE [http-nio-8081-exec-8] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]] from SPRING_SECURITY_CONTEXT
2024-07-11 18:02:47,839 TRACE [http-nio-8081-exec-8] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]
2024-07-11 18:02:47,841 DEBUG [http-nio-8081-exec-8] FilterChainProxy: Secured DELETE /callers/ekynd0/
2024-07-11 18:02:47,844 TRACE [http-nio-8081-exec-8] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-11 18:03:45,857 TRACE [http-nio-8081-exec-10] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6ce7f47f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@562ef172, org.springframework.security.web.context.SecurityContextHolderFilter@3eb6d7a9, org.springframework.security.web.header.HeaderWriterFilter@72cf159f, org.springframework.security.web.authentication.logout.LogoutFilter@645b67d6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1c3eeda4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6cb1da13, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5b5eb23f, org.springframework.security.web.access.ExceptionTranslationFilter@7e584f3c, org.springframework.security.web.access.intercept.AuthorizationFilter@35129b9e]] (1/1)
2024-07-11 18:03:45,857 DEBUG [http-nio-8081-exec-10] FilterChainProxy: Securing DELETE /callers/exampleusername12/
2024-07-11 18:03:45,857 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-11 18:03:45,857 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-11 18:03:45,857 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-11 18:03:45,857 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-11 18:03:45,857 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-11 18:03:45,857 TRACE [http-nio-8081-exec-10] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-11 18:03:45,857 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-11 18:03:45,857 TRACE [http-nio-8081-exec-10] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-11 18:03:45,857 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-11 18:03:45,857 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-11 18:03:45,857 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-11 18:03:45,858 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-11 18:03:45,858 TRACE [http-nio-8081-exec-10] RequestMatcherDelegatingAuthorizationManager: Authorizing DELETE /callers/exampleusername12/
2024-07-11 18:03:45,858 TRACE [http-nio-8081-exec-10] RequestMatcherDelegatingAuthorizationManager: Checking authorization on DELETE /callers/exampleusername12/ using AuthorityAuthorizationManager[authorities=[ROLE_ADMIN]]
2024-07-11 18:03:45,858 TRACE [http-nio-8081-exec-10] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]] from SPRING_SECURITY_CONTEXT
2024-07-11 18:03:45,858 TRACE [http-nio-8081-exec-10] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]
2024-07-11 18:03:45,858 DEBUG [http-nio-8081-exec-10] FilterChainProxy: Secured DELETE /callers/exampleusername12/
2024-07-11 18:03:45,885 TRACE [http-nio-8081-exec-10] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-11 18:03:50,710 TRACE [http-nio-8081-exec-2] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6ce7f47f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@562ef172, org.springframework.security.web.context.SecurityContextHolderFilter@3eb6d7a9, org.springframework.security.web.header.HeaderWriterFilter@72cf159f, org.springframework.security.web.authentication.logout.LogoutFilter@645b67d6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1c3eeda4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6cb1da13, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5b5eb23f, org.springframework.security.web.access.ExceptionTranslationFilter@7e584f3c, org.springframework.security.web.access.intercept.AuthorizationFilter@35129b9e]] (1/1)
2024-07-11 18:03:50,710 DEBUG [http-nio-8081-exec-2] FilterChainProxy: Securing GET /callers/scythejudge/
2024-07-11 18:03:50,710 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-11 18:03:50,710 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-11 18:03:50,710 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-11 18:03:50,710 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-11 18:03:50,710 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-11 18:03:50,710 TRACE [http-nio-8081-exec-2] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-11 18:03:50,711 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-11 18:03:50,711 TRACE [http-nio-8081-exec-2] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-11 18:03:50,711 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-11 18:03:50,711 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-11 18:03:50,711 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-11 18:03:50,711 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-11 18:03:50,711 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Authorizing GET /callers/scythejudge/
2024-07-11 18:03:50,711 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Checking authorization on GET /callers/scythejudge/ using AuthorityAuthorizationManager[authorities=[ROLE_ADMIN]]
2024-07-11 18:03:50,711 TRACE [http-nio-8081-exec-2] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]] from SPRING_SECURITY_CONTEXT
2024-07-11 18:03:50,711 TRACE [http-nio-8081-exec-2] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]
2024-07-11 18:03:50,711 DEBUG [http-nio-8081-exec-2] FilterChainProxy: Secured GET /callers/scythejudge/
2024-07-11 18:03:50,715 TRACE [http-nio-8081-exec-2] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-11 18:03:57,532 TRACE [http-nio-8081-exec-3] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6ce7f47f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@562ef172, org.springframework.security.web.context.SecurityContextHolderFilter@3eb6d7a9, org.springframework.security.web.header.HeaderWriterFilter@72cf159f, org.springframework.security.web.authentication.logout.LogoutFilter@645b67d6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1c3eeda4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6cb1da13, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5b5eb23f, org.springframework.security.web.access.ExceptionTranslationFilter@7e584f3c, org.springframework.security.web.access.intercept.AuthorizationFilter@35129b9e]] (1/1)
2024-07-11 18:03:57,532 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Securing GET /callers/abcde/
2024-07-11 18:03:57,532 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-11 18:03:57,532 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-11 18:03:57,532 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-11 18:03:57,532 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-11 18:03:57,532 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-11 18:03:57,532 TRACE [http-nio-8081-exec-3] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-11 18:03:57,532 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-11 18:03:57,532 TRACE [http-nio-8081-exec-3] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-11 18:03:57,532 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-11 18:03:57,532 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-11 18:03:57,532 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-11 18:03:57,532 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-11 18:03:57,532 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Authorizing GET /callers/abcde/
2024-07-11 18:03:57,532 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Checking authorization on GET /callers/abcde/ using AuthorityAuthorizationManager[authorities=[ROLE_ADMIN]]
2024-07-11 18:03:57,532 TRACE [http-nio-8081-exec-3] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]] from SPRING_SECURITY_CONTEXT
2024-07-11 18:03:57,533 TRACE [http-nio-8081-exec-3] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]
2024-07-11 18:03:57,533 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Secured GET /callers/abcde/
2024-07-11 18:03:57,536 TRACE [http-nio-8081-exec-3] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-11 18:04:00,979 TRACE [http-nio-8081-exec-4] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6ce7f47f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@562ef172, org.springframework.security.web.context.SecurityContextHolderFilter@3eb6d7a9, org.springframework.security.web.header.HeaderWriterFilter@72cf159f, org.springframework.security.web.authentication.logout.LogoutFilter@645b67d6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1c3eeda4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6cb1da13, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5b5eb23f, org.springframework.security.web.access.ExceptionTranslationFilter@7e584f3c, org.springframework.security.web.access.intercept.AuthorizationFilter@35129b9e]] (1/1)
2024-07-11 18:04:00,979 DEBUG [http-nio-8081-exec-4] FilterChainProxy: Securing GET /callers/id/1/
2024-07-11 18:04:00,980 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-11 18:04:00,980 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-11 18:04:00,980 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-11 18:04:00,980 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-11 18:04:00,980 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-11 18:04:00,980 TRACE [http-nio-8081-exec-4] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-11 18:04:00,980 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-11 18:04:00,980 TRACE [http-nio-8081-exec-4] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-11 18:04:00,980 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-11 18:04:00,980 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-11 18:04:00,980 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-11 18:04:00,980 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-11 18:04:00,980 TRACE [http-nio-8081-exec-4] RequestMatcherDelegatingAuthorizationManager: Authorizing GET /callers/id/1/
2024-07-11 18:04:00,980 TRACE [http-nio-8081-exec-4] RequestMatcherDelegatingAuthorizationManager: Checking authorization on GET /callers/id/1/ using AuthorityAuthorizationManager[authorities=[ROLE_ADMIN]]
2024-07-11 18:04:00,980 TRACE [http-nio-8081-exec-4] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]] from SPRING_SECURITY_CONTEXT
2024-07-11 18:04:00,980 TRACE [http-nio-8081-exec-4] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]
2024-07-11 18:04:00,980 DEBUG [http-nio-8081-exec-4] FilterChainProxy: Secured GET /callers/id/1/
2024-07-11 18:04:00,994 TRACE [http-nio-8081-exec-4] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-11 18:04:03,490 TRACE [http-nio-8081-exec-5] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6ce7f47f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@562ef172, org.springframework.security.web.context.SecurityContextHolderFilter@3eb6d7a9, org.springframework.security.web.header.HeaderWriterFilter@72cf159f, org.springframework.security.web.authentication.logout.LogoutFilter@645b67d6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1c3eeda4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6cb1da13, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5b5eb23f, org.springframework.security.web.access.ExceptionTranslationFilter@7e584f3c, org.springframework.security.web.access.intercept.AuthorizationFilter@35129b9e]] (1/1)
2024-07-11 18:04:03,491 DEBUG [http-nio-8081-exec-5] FilterChainProxy: Securing GET /callers/id/12/
2024-07-11 18:04:03,491 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-11 18:04:03,491 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-11 18:04:03,491 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-11 18:04:03,491 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-11 18:04:03,491 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-11 18:04:03,491 TRACE [http-nio-8081-exec-5] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-11 18:04:03,491 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-11 18:04:03,491 TRACE [http-nio-8081-exec-5] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-11 18:04:03,491 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-11 18:04:03,491 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-11 18:04:03,491 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-11 18:04:03,491 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-11 18:04:03,491 TRACE [http-nio-8081-exec-5] RequestMatcherDelegatingAuthorizationManager: Authorizing GET /callers/id/12/
2024-07-11 18:04:03,491 TRACE [http-nio-8081-exec-5] RequestMatcherDelegatingAuthorizationManager: Checking authorization on GET /callers/id/12/ using AuthorityAuthorizationManager[authorities=[ROLE_ADMIN]]
2024-07-11 18:04:03,491 TRACE [http-nio-8081-exec-5] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]] from SPRING_SECURITY_CONTEXT
2024-07-11 18:04:03,491 TRACE [http-nio-8081-exec-5] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]
2024-07-11 18:04:03,491 DEBUG [http-nio-8081-exec-5] FilterChainProxy: Secured GET /callers/id/12/
2024-07-11 18:04:03,494 TRACE [http-nio-8081-exec-5] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-11 18:05:37,915 TRACE [http-nio-8081-exec-7] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6ce7f47f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@562ef172, org.springframework.security.web.context.SecurityContextHolderFilter@3eb6d7a9, org.springframework.security.web.header.HeaderWriterFilter@72cf159f, org.springframework.security.web.authentication.logout.LogoutFilter@645b67d6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1c3eeda4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6cb1da13, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5b5eb23f, org.springframework.security.web.access.ExceptionTranslationFilter@7e584f3c, org.springframework.security.web.access.intercept.AuthorizationFilter@35129b9e]] (1/1)
2024-07-11 18:05:37,916 DEBUG [http-nio-8081-exec-7] FilterChainProxy: Securing POST /receivers/create/
2024-07-11 18:05:37,916 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-11 18:05:37,916 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-11 18:05:37,916 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-11 18:05:37,916 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-11 18:05:37,916 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-11 18:05:37,916 TRACE [http-nio-8081-exec-7] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-11 18:05:37,916 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-11 18:05:37,916 TRACE [http-nio-8081-exec-7] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-11 18:05:37,916 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-11 18:05:37,916 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-11 18:05:37,916 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-11 18:05:37,916 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-11 18:05:37,916 TRACE [http-nio-8081-exec-7] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /receivers/create/
2024-07-11 18:05:37,916 TRACE [http-nio-8081-exec-7] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /receivers/create/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@75217546
2024-07-11 18:05:37,916 TRACE [http-nio-8081-exec-7] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]] from SPRING_SECURITY_CONTEXT
2024-07-11 18:05:37,916 TRACE [http-nio-8081-exec-7] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]
2024-07-11 18:05:37,916 DEBUG [http-nio-8081-exec-7] FilterChainProxy: Secured POST /receivers/create/
2024-07-11 18:05:37,934 TRACE [http-nio-8081-exec-7] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-11 18:05:41,435 TRACE [http-nio-8081-exec-9] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6ce7f47f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@562ef172, org.springframework.security.web.context.SecurityContextHolderFilter@3eb6d7a9, org.springframework.security.web.header.HeaderWriterFilter@72cf159f, org.springframework.security.web.authentication.logout.LogoutFilter@645b67d6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1c3eeda4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6cb1da13, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5b5eb23f, org.springframework.security.web.access.ExceptionTranslationFilter@7e584f3c, org.springframework.security.web.access.intercept.AuthorizationFilter@35129b9e]] (1/1)
2024-07-11 18:05:41,435 DEBUG [http-nio-8081-exec-9] FilterChainProxy: Securing POST /receivers/create/
2024-07-11 18:05:41,435 TRACE [http-nio-8081-exec-9] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-11 18:05:41,435 TRACE [http-nio-8081-exec-9] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-11 18:05:41,436 TRACE [http-nio-8081-exec-9] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-11 18:05:41,436 TRACE [http-nio-8081-exec-9] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-11 18:05:41,436 TRACE [http-nio-8081-exec-9] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-11 18:05:41,436 TRACE [http-nio-8081-exec-9] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-11 18:05:41,436 TRACE [http-nio-8081-exec-9] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-11 18:05:41,436 TRACE [http-nio-8081-exec-9] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-11 18:05:41,436 TRACE [http-nio-8081-exec-9] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-11 18:05:41,436 TRACE [http-nio-8081-exec-9] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-11 18:05:41,436 TRACE [http-nio-8081-exec-9] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-11 18:05:41,436 TRACE [http-nio-8081-exec-9] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-11 18:05:41,436 TRACE [http-nio-8081-exec-9] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /receivers/create/
2024-07-11 18:05:41,436 TRACE [http-nio-8081-exec-9] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /receivers/create/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@75217546
2024-07-11 18:05:41,436 TRACE [http-nio-8081-exec-9] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]] from SPRING_SECURITY_CONTEXT
2024-07-11 18:05:41,436 TRACE [http-nio-8081-exec-9] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]
2024-07-11 18:05:41,436 DEBUG [http-nio-8081-exec-9] FilterChainProxy: Secured POST /receivers/create/
2024-07-11 18:05:41,451 INFO [http-nio-8081-exec-9] ProducerConfig: ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092, localhost:9094]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 10000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 5000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2024-07-11 18:05:41,452 INFO [http-nio-8081-exec-9] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-11 18:05:41,459 INFO [http-nio-8081-exec-9] KafkaProducer: [Producer clientId=emergency-producer-1] Instantiated an idempotent producer.
2024-07-11 18:05:41,469 INFO [http-nio-8081-exec-9] AppInfoParser: Kafka version: 3.7.0
2024-07-11 18:05:41,469 INFO [http-nio-8081-exec-9] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-11 18:05:41,469 INFO [http-nio-8081-exec-9] AppInfoParser: Kafka startTimeMs: 1720710341469
2024-07-11 18:05:41,474 INFO [kafka-producer-network-thread | emergency-producer-1] Metadata: [Producer clientId=emergency-producer-1] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-11 18:05:41,696 INFO [kafka-producer-network-thread | emergency-producer-1] TransactionManager: [Producer clientId=emergency-producer-1] ProducerId set to 5000 with epoch 0
2024-07-11 18:05:41,727 TRACE [http-nio-8081-exec-9] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-11 18:05:41,733 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 68
2024-07-11 18:05:41,848 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ProducerConfig: ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092, localhost:9094]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = telegram-notifications-producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 10000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 5000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2024-07-11 18:05:41,849 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-11 18:05:41,857 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaProducer: [Producer clientId=telegram-notifications-producer-1] Instantiated an idempotent producer.
2024-07-11 18:05:41,867 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] AppInfoParser: Kafka version: 3.7.0
2024-07-11 18:05:41,867 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-11 18:05:41,867 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] AppInfoParser: Kafka startTimeMs: 1720710341867
2024-07-11 18:05:41,871 INFO [kafka-producer-network-thread | telegram-notifications-producer-1] TransactionManager: [Producer clientId=telegram-notifications-producer-1] ProducerId set to 5001 with epoch 0
2024-07-11 18:05:41,872 INFO [kafka-producer-network-thread | telegram-notifications-producer-1] Metadata: [Producer clientId=telegram-notifications-producer-1] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-11 18:05:41,900 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] TelegramReceiverUserResponseEventHandler: Received event to receiver with id 68
2024-07-11 18:05:59,923 TRACE [http-nio-8081-exec-10] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6ce7f47f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@562ef172, org.springframework.security.web.context.SecurityContextHolderFilter@3eb6d7a9, org.springframework.security.web.header.HeaderWriterFilter@72cf159f, org.springframework.security.web.authentication.logout.LogoutFilter@645b67d6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1c3eeda4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6cb1da13, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5b5eb23f, org.springframework.security.web.access.ExceptionTranslationFilter@7e584f3c, org.springframework.security.web.access.intercept.AuthorizationFilter@35129b9e]] (1/1)
2024-07-11 18:05:59,923 DEBUG [http-nio-8081-exec-10] FilterChainProxy: Securing POST /receivers/create/
2024-07-11 18:05:59,923 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-11 18:05:59,923 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-11 18:05:59,923 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-11 18:05:59,923 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-11 18:05:59,923 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-11 18:05:59,923 TRACE [http-nio-8081-exec-10] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-11 18:05:59,923 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-11 18:05:59,923 TRACE [http-nio-8081-exec-10] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-11 18:05:59,923 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-11 18:05:59,923 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-11 18:05:59,923 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-11 18:05:59,923 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-11 18:05:59,923 TRACE [http-nio-8081-exec-10] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /receivers/create/
2024-07-11 18:05:59,923 TRACE [http-nio-8081-exec-10] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /receivers/create/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@75217546
2024-07-11 18:05:59,923 TRACE [http-nio-8081-exec-10] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]] from SPRING_SECURITY_CONTEXT
2024-07-11 18:05:59,923 TRACE [http-nio-8081-exec-10] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]
2024-07-11 18:05:59,923 DEBUG [http-nio-8081-exec-10] FilterChainProxy: Secured POST /receivers/create/
2024-07-11 18:05:59,931 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 69
2024-07-11 18:05:59,933 TRACE [http-nio-8081-exec-10] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-11 18:05:59,934 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Non retryable exception occured, because of IllegalArgumentException. Message body: The telegram user with username scythejudge1 does not exist.
2024-07-11 18:05:59,950 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 4 for partition telegram-receiver-user-request-topic-0
2024-07-11 18:05:59,950 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username scythejudge1 does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username scythejudge1 does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-11 18:06:00,447 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 69
2024-07-11 18:06:00,450 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Non retryable exception occured, because of IllegalArgumentException. Message body: The telegram user with username scythejudge1 does not exist.
2024-07-11 18:06:00,461 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 4 for partition telegram-receiver-user-request-topic-0
2024-07-11 18:06:00,461 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username scythejudge1 does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username scythejudge1 does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-11 18:06:00,948 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 69
2024-07-11 18:06:00,951 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Non retryable exception occured, because of IllegalArgumentException. Message body: The telegram user with username scythejudge1 does not exist.
2024-07-11 18:06:00,962 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 4 for partition telegram-receiver-user-request-topic-0
2024-07-11 18:06:00,962 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username scythejudge1 does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username scythejudge1 does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-11 18:06:01,450 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 69
2024-07-11 18:06:01,452 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Non retryable exception occured, because of IllegalArgumentException. Message body: The telegram user with username scythejudge1 does not exist.
2024-07-11 18:06:01,464 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 4 for partition telegram-receiver-user-request-topic-0
2024-07-11 18:06:01,464 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username scythejudge1 does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username scythejudge1 does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-11 18:06:01,952 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 69
2024-07-11 18:06:01,954 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Non retryable exception occured, because of IllegalArgumentException. Message body: The telegram user with username scythejudge1 does not exist.
2024-07-11 18:06:01,967 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 4 for partition telegram-receiver-user-request-topic-0
2024-07-11 18:06:01,967 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username scythejudge1 does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username scythejudge1 does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-11 18:06:02,454 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 69
2024-07-11 18:06:02,456 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Non retryable exception occured, because of IllegalArgumentException. Message body: The telegram user with username scythejudge1 does not exist.
2024-07-11 18:06:02,469 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 4 for partition telegram-receiver-user-request-topic-0
2024-07-11 18:06:02,469 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username scythejudge1 does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username scythejudge1 does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-11 18:06:02,956 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 69
2024-07-11 18:06:02,959 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Non retryable exception occured, because of IllegalArgumentException. Message body: The telegram user with username scythejudge1 does not exist.
2024-07-11 18:06:02,971 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 4 for partition telegram-receiver-user-request-topic-0
2024-07-11 18:06:02,971 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username scythejudge1 does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username scythejudge1 does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-11 18:06:03,460 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 69
2024-07-11 18:06:03,462 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Non retryable exception occured, because of IllegalArgumentException. Message body: The telegram user with username scythejudge1 does not exist.
2024-07-11 18:06:03,475 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 4 for partition telegram-receiver-user-request-topic-0
2024-07-11 18:06:03,475 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username scythejudge1 does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username scythejudge1 does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-11 18:06:03,963 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 69
2024-07-11 18:06:03,965 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Non retryable exception occured, because of IllegalArgumentException. Message body: The telegram user with username scythejudge1 does not exist.
2024-07-11 18:06:03,978 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 4 for partition telegram-receiver-user-request-topic-0
2024-07-11 18:06:03,978 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username scythejudge1 does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username scythejudge1 does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-11 18:06:04,466 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 69
2024-07-11 18:06:04,468 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Non retryable exception occured, because of IllegalArgumentException. Message body: The telegram user with username scythejudge1 does not exist.
2024-07-11 18:06:04,471 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DefaultErrorHandler: Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for telegram-receiver-user-request-topic-0@4
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username scythejudge1 does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username scythejudge1 does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-11 18:06:50,880 TRACE [http-nio-8081-exec-2] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6ce7f47f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@562ef172, org.springframework.security.web.context.SecurityContextHolderFilter@3eb6d7a9, org.springframework.security.web.header.HeaderWriterFilter@72cf159f, org.springframework.security.web.authentication.logout.LogoutFilter@645b67d6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1c3eeda4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6cb1da13, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5b5eb23f, org.springframework.security.web.access.ExceptionTranslationFilter@7e584f3c, org.springframework.security.web.access.intercept.AuthorizationFilter@35129b9e]] (1/1)
2024-07-11 18:06:50,880 DEBUG [http-nio-8081-exec-2] FilterChainProxy: Securing GET /receivers/
2024-07-11 18:06:50,880 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-11 18:06:50,880 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-11 18:06:50,880 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-11 18:06:50,880 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-11 18:06:50,880 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-11 18:06:50,880 TRACE [http-nio-8081-exec-2] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-11 18:06:50,880 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-11 18:06:50,880 TRACE [http-nio-8081-exec-2] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-11 18:06:50,881 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-11 18:06:50,881 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-11 18:06:50,881 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-11 18:06:50,881 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-11 18:06:50,881 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Authorizing GET /receivers/
2024-07-11 18:06:50,881 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Checking authorization on GET /receivers/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@75217546
2024-07-11 18:06:50,881 TRACE [http-nio-8081-exec-2] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]] from SPRING_SECURITY_CONTEXT
2024-07-11 18:06:50,881 TRACE [http-nio-8081-exec-2] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]
2024-07-11 18:06:50,881 DEBUG [http-nio-8081-exec-2] FilterChainProxy: Secured GET /receivers/
2024-07-11 18:06:50,893 TRACE [http-nio-8081-exec-2] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-11 18:07:04,572 TRACE [http-nio-8081-exec-1] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6ce7f47f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@562ef172, org.springframework.security.web.context.SecurityContextHolderFilter@3eb6d7a9, org.springframework.security.web.header.HeaderWriterFilter@72cf159f, org.springframework.security.web.authentication.logout.LogoutFilter@645b67d6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1c3eeda4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6cb1da13, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5b5eb23f, org.springframework.security.web.access.ExceptionTranslationFilter@7e584f3c, org.springframework.security.web.access.intercept.AuthorizationFilter@35129b9e]] (1/1)
2024-07-11 18:07:04,572 DEBUG [http-nio-8081-exec-1] FilterChainProxy: Securing POST /emergency-calls/call/
2024-07-11 18:07:04,572 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-11 18:07:04,572 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-11 18:07:04,572 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-11 18:07:04,572 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-11 18:07:04,572 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-11 18:07:04,572 TRACE [http-nio-8081-exec-1] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-11 18:07:04,572 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-11 18:07:04,572 TRACE [http-nio-8081-exec-1] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-11 18:07:04,572 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-11 18:07:04,572 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-11 18:07:04,572 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-11 18:07:04,572 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-11 18:07:04,572 TRACE [http-nio-8081-exec-1] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /emergency-calls/call/
2024-07-11 18:07:04,572 TRACE [http-nio-8081-exec-1] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /emergency-calls/call/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@75217546
2024-07-11 18:07:04,572 TRACE [http-nio-8081-exec-1] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]] from SPRING_SECURITY_CONTEXT
2024-07-11 18:07:04,572 TRACE [http-nio-8081-exec-1] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]
2024-07-11 18:07:04,572 DEBUG [http-nio-8081-exec-1] FilterChainProxy: Secured POST /emergency-calls/call/
2024-07-11 18:07:04,577 INFO [http-nio-8081-exec-1] ProducerConfig: ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092, localhost:9094]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 10000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 5000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2024-07-11 18:07:04,577 INFO [http-nio-8081-exec-1] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-11 18:07:04,578 INFO [http-nio-8081-exec-1] KafkaProducer: [Producer clientId=emergency-producer-1] Instantiated an idempotent producer.
2024-07-11 18:07:04,581 INFO [http-nio-8081-exec-1] AppInfoParser: The mbean of App info: [kafka.producer], id: [emergency-producer-1] already exists, so skipping a new mbean creation.
2024-07-11 18:07:04,584 INFO [kafka-producer-network-thread | emergency-producer-1] TransactionManager: [Producer clientId=emergency-producer-1] ProducerId set to 5002 with epoch 0
2024-07-11 18:07:04,584 INFO [kafka-producer-network-thread | emergency-producer-1] Metadata: [Producer clientId=emergency-producer-1] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-11 18:07:04,595 INFO [kafka-producer-network-thread | emergency-producer-1] EmergencyCallServiceImpl: Message send successfully: email-notification-created-topic-2@0
2024-07-11 18:07:04,596 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] EmailNotificationCreatedEventHandler: Received event from bladeattheneck
2024-07-11 18:07:04,597 INFO [http-nio-8081-exec-1] ProducerConfig: ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092, localhost:9094]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 10000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 5000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2024-07-11 18:07:04,598 INFO [http-nio-8081-exec-1] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-11 18:07:04,599 INFO [http-nio-8081-exec-1] KafkaProducer: [Producer clientId=emergency-producer-1] Instantiated an idempotent producer.
2024-07-11 18:07:04,602 INFO [http-nio-8081-exec-1] AppInfoParser: The mbean of App info: [kafka.producer], id: [emergency-producer-1] already exists, so skipping a new mbean creation.
2024-07-11 18:07:04,604 INFO [kafka-producer-network-thread | emergency-producer-1] TransactionManager: [Producer clientId=emergency-producer-1] ProducerId set to 5003 with epoch 0
2024-07-11 18:07:04,604 INFO [kafka-producer-network-thread | emergency-producer-1] Metadata: [Producer clientId=emergency-producer-1] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-11 18:07:04,613 TRACE [http-nio-8081-exec-1] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-11 18:07:04,619 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] TelegramNotificationCreatedEventHandler: Received event from bladeattheneck
2024-07-11 18:07:04,621 INFO [kafka-producer-network-thread | emergency-producer-1] EmergencyCallServiceImpl: Message send successfully: telegram-notification-created-topic-2@1
2024-07-11 18:07:04,625 INFO [kafka-producer-network-thread | emergency-producer-1] EmergencyCallServiceImpl: Message send successfully: telegram-notification-created-topic-2@2
2024-07-11 18:07:04,969 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] TelegramNotificationCreatedEventHandler: Received event from bladeattheneck
2024-07-11 18:08:55,460 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node -2 disconnected.
2024-07-11 18:08:55,462 INFO [kafka-coordinator-heartbeat-thread | telegram-notification-created-topic] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node -1 disconnected.
2024-07-11 18:11:10,867 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Node -2 disconnected.
2024-07-11 18:11:13,963 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node -1 disconnected.
2024-07-11 18:14:41,956 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node -2 disconnected.
2024-07-11 18:14:41,956 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node -1 disconnected.
2024-07-11 18:14:42,239 INFO [kafka-producer-network-thread | telegram-notifications-producer-1] NetworkClient: [Producer clientId=telegram-notifications-producer-1] Node -1 disconnected.
2024-07-11 18:14:42,239 INFO [kafka-producer-network-thread | telegram-notifications-producer-1] NetworkClient: [Producer clientId=telegram-notifications-producer-1] Node -2 disconnected.
2024-07-11 18:16:04,902 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node -1 disconnected.
2024-07-11 18:16:04,902 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node -2 disconnected.
2024-07-11 18:16:04,950 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node -1 disconnected.
2024-07-11 18:16:04,950 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node -2 disconnected.
2024-07-11 18:18:55,601 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node -1 disconnected.
2024-07-11 18:19:41,958 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-11 18:24:42,242 INFO [kafka-producer-network-thread | telegram-notifications-producer-1] NetworkClient: [Producer clientId=telegram-notifications-producer-1] Node -2 disconnected.
2024-07-11 18:25:01,942 TRACE [http-nio-8081-exec-5] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6ce7f47f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@562ef172, org.springframework.security.web.context.SecurityContextHolderFilter@3eb6d7a9, org.springframework.security.web.header.HeaderWriterFilter@72cf159f, org.springframework.security.web.authentication.logout.LogoutFilter@645b67d6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1c3eeda4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6cb1da13, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5b5eb23f, org.springframework.security.web.access.ExceptionTranslationFilter@7e584f3c, org.springframework.security.web.access.intercept.AuthorizationFilter@35129b9e]] (1/1)
2024-07-11 18:25:01,942 DEBUG [http-nio-8081-exec-5] FilterChainProxy: Securing POST /authentication/login/
2024-07-11 18:25:01,942 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-11 18:25:01,942 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-11 18:25:01,942 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-11 18:25:01,942 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-11 18:25:01,942 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-11 18:25:01,942 TRACE [http-nio-8081-exec-5] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-11 18:25:01,943 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-11 18:25:01,943 TRACE [http-nio-8081-exec-5] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-11 18:25:01,943 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-11 18:25:01,943 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-11 18:25:01,943 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-11 18:25:01,943 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-11 18:25:01,943 TRACE [http-nio-8081-exec-5] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /authentication/login/
2024-07-11 18:25:01,943 TRACE [http-nio-8081-exec-5] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /authentication/login/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@72874157
2024-07-11 18:25:01,943 TRACE [http-nio-8081-exec-5] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]] from SPRING_SECURITY_CONTEXT
2024-07-11 18:25:01,943 TRACE [http-nio-8081-exec-5] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]
2024-07-11 18:25:01,943 TRACE [http-nio-8081-exec-5] ExceptionTranslationFilter: Sending UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]] to access denied handler since access is denied
org.springframework.security.access.AccessDeniedException: Access Denied
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:98)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2024-07-11 18:25:01,943 DEBUG [http-nio-8081-exec-5] AccessDeniedHandlerImpl: Responding with 403 status code
2024-07-11 18:25:01,943 TRACE [http-nio-8081-exec-5] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-11 18:25:01,944 TRACE [http-nio-8081-exec-5] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6ce7f47f, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@562ef172, org.springframework.security.web.context.SecurityContextHolderFilter@3eb6d7a9, org.springframework.security.web.header.HeaderWriterFilter@72cf159f, org.springframework.security.web.authentication.logout.LogoutFilter@645b67d6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1c3eeda4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6cb1da13, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5b5eb23f, org.springframework.security.web.access.ExceptionTranslationFilter@7e584f3c, org.springframework.security.web.access.intercept.AuthorizationFilter@35129b9e]] (1/1)
2024-07-11 18:25:01,944 DEBUG [http-nio-8081-exec-5] FilterChainProxy: Securing POST /error
2024-07-11 18:25:01,944 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-11 18:25:01,944 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-11 18:25:01,944 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-11 18:25:01,944 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-11 18:25:01,944 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-11 18:25:01,944 TRACE [http-nio-8081-exec-5] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-11 18:25:01,944 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-11 18:25:01,944 TRACE [http-nio-8081-exec-5] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-11 18:25:01,944 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-11 18:25:01,944 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-11 18:25:01,944 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-11 18:25:01,944 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-11 18:25:01,944 TRACE [http-nio-8081-exec-5] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /error
2024-07-11 18:25:01,944 TRACE [http-nio-8081-exec-5] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /error using org.springframework.security.authorization.AuthenticatedAuthorizationManager@75217546
2024-07-11 18:25:01,944 TRACE [http-nio-8081-exec-5] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]] from SPRING_SECURITY_CONTEXT
2024-07-11 18:25:01,944 TRACE [http-nio-8081-exec-5] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]
2024-07-11 18:25:01,944 DEBUG [http-nio-8081-exec-5] FilterChainProxy: Secured POST /error
