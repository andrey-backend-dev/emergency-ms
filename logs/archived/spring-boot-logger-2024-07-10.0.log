2024-07-09 20:23:50,704 INFO [background-preinit] Version: HV000001: Hibernate Validator 8.0.1.Final
2024-07-09 20:23:50,756 INFO [main] EmailNotificationsApplication: Starting EmailNotificationsApplication using Java 17.0.10 with PID 14644 (D:\programming\java\emergency-ms\email-notifications\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-09 20:23:50,757 DEBUG [main] EmailNotificationsApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-09 20:23:50,757 INFO [main] EmailNotificationsApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-09 20:23:51,618 INFO [main] TomcatWebServer: Tomcat initialized with port 8082 (http)
2024-07-09 20:23:51,629 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8082"]
2024-07-09 20:23:51,631 INFO [main] StandardService: Starting service [Tomcat]
2024-07-09 20:23:51,632 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-09 20:23:51,688 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-09 20:23:51,689 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 900 ms
2024-07-09 20:23:52,378 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8082"]
2024-07-09 20:23:52,391 INFO [main] TomcatWebServer: Tomcat started on port 8082 (http) with context path '/'
2024-07-09 20:23:52,443 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092, localhost:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-email-notification-created-topic-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = email-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-09 20:23:52,492 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-09 20:23:52,642 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-09 20:23:52,643 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-09 20:23:52,643 INFO [main] AppInfoParser: Kafka startTimeMs: 1720545832641
2024-07-09 20:23:52,646 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Subscribed to topic(s): email-notification-created-topic
2024-07-09 20:23:52,659 INFO [main] EmailNotificationsApplication: Started EmailNotificationsApplication in 2.216 seconds (process running for 2.596)
2024-07-09 20:23:52,903 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node -2 disconnected.
2024-07-09 20:23:52,904 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node -2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 20:23:52,904 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Bootstrap broker localhost:9094 (id: -2 rack: null) disconnected
2024-07-09 20:23:53,002 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node -1 disconnected.
2024-07-09 20:23:53,003 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 20:23:53,003 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-07-09 20:23:53,003 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node -2 disconnected.
2024-07-09 20:23:53,003 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node -2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 20:23:53,003 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Bootstrap broker localhost:9094 (id: -2 rack: null) disconnected
2024-07-09 20:23:53,058 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node -1 disconnected.
2024-07-09 20:23:53,058 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 20:23:53,058 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-07-09 20:23:53,121 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node -2 disconnected.
2024-07-09 20:23:53,121 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node -2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 20:23:53,121 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Bootstrap broker localhost:9094 (id: -2 rack: null) disconnected
2024-07-09 20:23:53,185 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node -1 disconnected.
2024-07-09 20:23:53,186 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 20:23:53,186 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-07-09 20:23:53,375 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node -2 disconnected.
2024-07-09 20:23:53,376 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node -2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 20:23:53,376 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Bootstrap broker localhost:9094 (id: -2 rack: null) disconnected
2024-07-09 20:23:53,376 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node -1 disconnected.
2024-07-09 20:23:53,376 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 20:23:53,376 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-07-09 20:23:53,751 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node -2 disconnected.
2024-07-09 20:23:53,752 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node -2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 20:23:53,752 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Bootstrap broker localhost:9094 (id: -2 rack: null) disconnected
2024-07-09 20:23:53,752 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node -1 disconnected.
2024-07-09 20:23:53,752 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 20:23:53,752 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-07-09 20:23:54,568 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node -2 disconnected.
2024-07-09 20:23:54,568 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node -2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 20:23:54,568 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Bootstrap broker localhost:9094 (id: -2 rack: null) disconnected
2024-07-09 20:23:54,694 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node -1 disconnected.
2024-07-09 20:23:54,694 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node -1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 20:23:54,694 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Bootstrap broker localhost:9092 (id: -1 rack: null) disconnected
2024-07-09 22:56:57,887 INFO [background-preinit] Version: HV000001: Hibernate Validator 8.0.1.Final
2024-07-09 22:56:57,915 INFO [main] EmergencyApplication: Starting EmergencyApplication using Java 17.0.10 with PID 17980 (D:\programming\java\emergency-ms\emergency\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-09 22:56:57,915 DEBUG [main] EmergencyApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-09 22:56:57,916 INFO [main] EmergencyApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-09 22:56:58,481 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-09 22:56:58,531 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 40 ms. Found 3 JPA repository interfaces.
2024-07-09 22:56:59,023 INFO [main] TomcatWebServer: Tomcat initialized with port 8081 (http)
2024-07-09 22:56:59,031 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8081"]
2024-07-09 22:56:59,034 INFO [main] StandardService: Starting service [Tomcat]
2024-07-09 22:56:59,035 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-09 22:56:59,089 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-09 22:56:59,090 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1146 ms
2024-07-09 22:56:59,328 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-09 22:56:59,518 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@24e5389c
2024-07-09 22:56:59,519 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-09 22:56:59,560 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_notifications_db (PostgreSQL 16.3)
2024-07-09 22:56:59,635 INFO [main] DbValidate: Successfully validated 2 migrations (execution time 00:00.038s)
2024-07-09 22:56:59,657 INFO [main] DbMigrate: Current version of schema "public": 1.1
2024-07-09 22:56:59,676 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-09 22:56:59,743 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-09 22:56:59,785 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-09 22:56:59,812 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-09 22:57:00,085 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-09 22:57:00,670 INFO [main] EntityInstantiatorPojoStandard: HHH000182: No default (no-argument) constructor for class: org.example.emergency.entity.EmergencyCall (class must be instantiated by Interceptor)
2024-07-09 22:57:00,862 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-09 22:57:00,864 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-09 22:57:01,105 TRACE [main] AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer: Eagerly initializing {securityConfig=org.example.emergency.config.SecurityConfig$$SpringCGLIB$$0@4986b0ea}
2024-07-09 22:57:01,115 INFO [main] InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer: Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-07-09 22:57:01,116 WARN [main] InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer: Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-07-09 22:57:01,180 INFO [main] QueryEnhancerFactory: Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-09 22:57:01,214 WARN [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-09 22:57:01,399 DEBUG [main] DefaultSecurityFilterChain: Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-09 22:57:01,597 INFO [main] AdminClientConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-07-09 22:57:01,676 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-09 22:57:01,676 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-09 22:57:01,676 INFO [main] AppInfoParser: Kafka startTimeMs: 1720555021674
2024-07-09 22:57:01,963 INFO [kafka-admin-client-thread | emergency-admin-0] AppInfoParser: App info kafka.admin.client for emergency-admin-0 unregistered
2024-07-09 22:57:01,966 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics scheduler closed
2024-07-09 22:57:01,966 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-09 22:57:01,966 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics reporters closed
2024-07-09 22:57:01,969 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8081"]
2024-07-09 22:57:01,978 INFO [main] TomcatWebServer: Tomcat started on port 8081 (http) with context path '/'
2024-07-09 22:57:01,988 INFO [main] EmergencyApplication: Started EmergencyApplication in 4.346 seconds (process running for 4.722)
2024-07-09 22:57:11,996 INFO [background-preinit] Version: HV000001: Hibernate Validator 8.0.1.Final
2024-07-09 22:57:12,033 INFO [main] EmailNotificationsApplication: Starting EmailNotificationsApplication using Java 17.0.10 with PID 19372 (D:\programming\java\emergency-ms\email-notifications\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-09 22:57:12,033 DEBUG [main] EmailNotificationsApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-09 22:57:12,034 INFO [main] EmailNotificationsApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-09 22:57:12,802 INFO [main] TomcatWebServer: Tomcat initialized with port 8082 (http)
2024-07-09 22:57:12,810 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8082"]
2024-07-09 22:57:12,811 INFO [main] StandardService: Starting service [Tomcat]
2024-07-09 22:57:12,811 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-09 22:57:12,860 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-09 22:57:12,861 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 798 ms
2024-07-09 22:57:13,754 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8082"]
2024-07-09 22:57:13,766 INFO [main] TomcatWebServer: Tomcat started on port 8082 (http) with context path '/'
2024-07-09 22:57:13,814 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092, localhost:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-email-notification-created-topic-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = email-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-09 22:57:13,849 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-09 22:57:13,974 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-09 22:57:13,975 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-09 22:57:13,975 INFO [main] AppInfoParser: Kafka startTimeMs: 1720555033973
2024-07-09 22:57:13,977 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Subscribed to topic(s): email-notification-created-topic
2024-07-09 22:57:13,987 INFO [main] EmailNotificationsApplication: Started EmailNotificationsApplication in 2.217 seconds (process running for 2.56)
2024-07-09 22:57:14,221 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metadata: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Cluster ID: z6enREWhQpW0SJQoB6P-dw
2024-07-09 22:57:14,222 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Discovered group coordinator localhost:9094 (id: 2147483645 rack: null)
2024-07-09 22:57:14,224 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] (Re-)joining group
2024-07-09 22:57:14,238 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-email-notification-created-topic-1-284d4bf4-37b5-4862-a9dc-2f853ede0756
2024-07-09 22:57:14,238 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] (Re-)joining group
2024-07-09 22:57:21,077 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Successfully joined group with generation Generation{generationId=24, memberId='consumer-email-notification-created-topic-1-284d4bf4-37b5-4862-a9dc-2f853ede0756', protocol='range'}
2024-07-09 22:57:21,081 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Finished assignment for group at generation 24: {consumer-email-notification-created-topic-1-284d4bf4-37b5-4862-a9dc-2f853ede0756=Assignment(partitions=[email-notification-created-topic-0, email-notification-created-topic-1, email-notification-created-topic-2])}
2024-07-09 22:57:21,098 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Successfully synced group in generation Generation{generationId=24, memberId='consumer-email-notification-created-topic-1-284d4bf4-37b5-4862-a9dc-2f853ede0756', protocol='range'}
2024-07-09 22:57:21,099 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Notifying assignor about the new Assignment(partitions=[email-notification-created-topic-0, email-notification-created-topic-1, email-notification-created-topic-2])
2024-07-09 22:57:21,100 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Adding newly assigned partitions: email-notification-created-topic-0, email-notification-created-topic-1, email-notification-created-topic-2
2024-07-09 22:57:21,109 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition email-notification-created-topic-1 to the committed offset FetchPosition{offset=12, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=4}}
2024-07-09 22:57:21,109 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition email-notification-created-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=2}}
2024-07-09 22:57:21,109 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition email-notification-created-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=2}}
2024-07-09 22:57:21,110 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: email-notification-created-topic: partitions assigned: [email-notification-created-topic-0, email-notification-created-topic-1, email-notification-created-topic-2]
2024-07-09 22:57:36,360 INFO [main] TelegramNotificationsApplication: Starting TelegramNotificationsApplication using Java 17.0.10 with PID 19584 (D:\programming\java\emergency-ms\telegram-notifications\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-09 22:57:36,361 DEBUG [main] TelegramNotificationsApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-09 22:57:36,362 INFO [main] TelegramNotificationsApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-09 22:57:36,841 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-09 22:57:36,884 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 38 ms. Found 1 JPA repository interface.
2024-07-09 22:57:37,348 INFO [main] TomcatWebServer: Tomcat initialized with port 8083 (http)
2024-07-09 22:57:37,356 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8083"]
2024-07-09 22:57:37,359 INFO [main] StandardService: Starting service [Tomcat]
2024-07-09 22:57:37,359 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-09 22:57:37,413 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-09 22:57:37,414 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1018 ms
2024-07-09 22:57:37,615 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-09 22:57:37,756 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@34c62fdf
2024-07-09 22:57:37,757 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-09 22:57:37,786 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_telegram_db (PostgreSQL 16.3)
2024-07-09 22:57:37,836 INFO [main] DbValidate: Successfully validated 1 migration (execution time 00:00.025s)
2024-07-09 22:57:37,866 INFO [main] DbMigrate: Current version of schema "public": 1.0
2024-07-09 22:57:37,868 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-09 22:57:37,927 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-09 22:57:37,970 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-09 22:57:37,998 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-09 22:57:38,223 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-09 22:57:38,761 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-09 22:57:38,763 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-09 22:57:39,129 WARN [main] AnnotationConfigServletWebServerApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'telegramReceiverUserResponseProducerFactory' defined in class path resource [org/example/telegram_notifications/config/KafkaProducerConfig.class]: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'telegramReceiverUserResponseProducerFactory' threw exception with message: null
2024-07-09 22:57:39,130 INFO [main] LocalContainerEntityManagerFactoryBean: Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-09 22:57:39,132 INFO [main] HikariDataSource: HikariPool-1 - Shutdown initiated...
2024-07-09 22:57:39,134 INFO [main] HikariDataSource: HikariPool-1 - Shutdown completed.
2024-07-09 22:57:39,137 INFO [main] StandardService: Stopping service [Tomcat]
2024-07-09 22:57:39,144 INFO [main] ConditionEvaluationReportLogger: 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-07-09 22:57:39,156 ERROR [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'telegramReceiverUserResponseProducerFactory' defined in class path resource [org/example/telegram_notifications/config/KafkaProducerConfig.class]: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'telegramReceiverUserResponseProducerFactory' threw exception with message: null
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at org.example.telegram_notifications.TelegramNotificationsApplication.main(TelegramNotificationsApplication.java:10)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'telegramReceiverUserResponseProducerFactory' threw exception with message: null
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:177)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644)
	... 19 common frames omitted
Caused by: java.lang.NullPointerException: null
	at java.base/java.util.concurrent.ConcurrentHashMap.putVal(ConcurrentHashMap.java:1011)
	at java.base/java.util.concurrent.ConcurrentHashMap.putAll(ConcurrentHashMap.java:1089)
	at java.base/java.util.concurrent.ConcurrentHashMap.<init>(ConcurrentHashMap.java:852)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory.<init>(DefaultKafkaProducerFactory.java:256)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory.<init>(DefaultKafkaProducerFactory.java:234)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory.<init>(DefaultKafkaProducerFactory.java:176)
	at org.example.telegram_notifications.config.KafkaProducerConfig.telegramReceiverUserResponseProducerFactory(KafkaProducerConfig.java:25)
	at org.example.telegram_notifications.config.KafkaProducerConfig$$SpringCGLIB$$0.CGLIB$telegramReceiverUserResponseProducerFactory$0(<generated>)
	at org.example.telegram_notifications.config.KafkaProducerConfig$$SpringCGLIB$$FastClass$$1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:258)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:348)
	at org.example.telegram_notifications.config.KafkaProducerConfig$$SpringCGLIB$$0.telegramReceiverUserResponseProducerFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	... 20 common frames omitted
2024-07-09 23:02:00,359 INFO [main] TelegramNotificationsApplication: Starting TelegramNotificationsApplication using Java 17.0.10 with PID 18720 (D:\programming\java\emergency-ms\telegram-notifications\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-09 23:02:00,361 DEBUG [main] TelegramNotificationsApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-09 23:02:00,361 INFO [main] TelegramNotificationsApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-09 23:02:00,827 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-09 23:02:00,887 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 50 ms. Found 1 JPA repository interface.
2024-07-09 23:02:01,346 INFO [main] TomcatWebServer: Tomcat initialized with port 8083 (http)
2024-07-09 23:02:01,354 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8083"]
2024-07-09 23:02:01,356 INFO [main] StandardService: Starting service [Tomcat]
2024-07-09 23:02:01,356 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-09 23:02:01,410 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-09 23:02:01,411 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1010 ms
2024-07-09 23:02:01,593 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-09 23:02:01,723 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@125f16b2
2024-07-09 23:02:01,724 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-09 23:02:01,749 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_telegram_db (PostgreSQL 16.3)
2024-07-09 23:02:01,781 INFO [main] DbValidate: Successfully validated 1 migration (execution time 00:00.019s)
2024-07-09 23:02:01,815 INFO [main] DbMigrate: Current version of schema "public": 1.0
2024-07-09 23:02:01,817 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-09 23:02:01,874 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-09 23:02:01,913 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-09 23:02:01,946 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-09 23:02:02,178 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-09 23:02:02,731 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-09 23:02:02,733 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-09 23:02:03,091 WARN [main] AnnotationConfigServletWebServerApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'telegramReceiverUserResponseProducerFactory' defined in class path resource [org/example/telegram_notifications/config/KafkaProducerConfig.class]: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'telegramReceiverUserResponseProducerFactory' threw exception with message: null
2024-07-09 23:02:03,091 INFO [main] LocalContainerEntityManagerFactoryBean: Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-09 23:02:03,093 INFO [main] HikariDataSource: HikariPool-1 - Shutdown initiated...
2024-07-09 23:02:03,100 INFO [main] HikariDataSource: HikariPool-1 - Shutdown completed.
2024-07-09 23:02:03,103 INFO [main] StandardService: Stopping service [Tomcat]
2024-07-09 23:02:03,112 INFO [main] ConditionEvaluationReportLogger: 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-07-09 23:02:03,125 ERROR [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'telegramReceiverUserResponseProducerFactory' defined in class path resource [org/example/telegram_notifications/config/KafkaProducerConfig.class]: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'telegramReceiverUserResponseProducerFactory' threw exception with message: null
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at org.example.telegram_notifications.TelegramNotificationsApplication.main(TelegramNotificationsApplication.java:10)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'telegramReceiverUserResponseProducerFactory' threw exception with message: null
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:177)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644)
	... 19 common frames omitted
Caused by: java.lang.NullPointerException: null
	at java.base/java.util.concurrent.ConcurrentHashMap.putVal(ConcurrentHashMap.java:1011)
	at java.base/java.util.concurrent.ConcurrentHashMap.putAll(ConcurrentHashMap.java:1089)
	at java.base/java.util.concurrent.ConcurrentHashMap.<init>(ConcurrentHashMap.java:852)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory.<init>(DefaultKafkaProducerFactory.java:256)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory.<init>(DefaultKafkaProducerFactory.java:234)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory.<init>(DefaultKafkaProducerFactory.java:176)
	at org.example.telegram_notifications.config.KafkaProducerConfig.telegramReceiverUserResponseProducerFactory(KafkaProducerConfig.java:25)
	at org.example.telegram_notifications.config.KafkaProducerConfig$$SpringCGLIB$$0.CGLIB$telegramReceiverUserResponseProducerFactory$0(<generated>)
	at org.example.telegram_notifications.config.KafkaProducerConfig$$SpringCGLIB$$FastClass$$1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:258)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:348)
	at org.example.telegram_notifications.config.KafkaProducerConfig$$SpringCGLIB$$0.telegramReceiverUserResponseProducerFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	... 20 common frames omitted
2024-07-09 23:04:07,455 INFO [main] TelegramNotificationsApplication: Starting TelegramNotificationsApplication using Java 17.0.10 with PID 18536 (D:\programming\java\emergency-ms\telegram-notifications\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-09 23:04:07,456 DEBUG [main] TelegramNotificationsApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-09 23:04:07,457 INFO [main] TelegramNotificationsApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-09 23:04:07,940 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-09 23:04:07,989 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 43 ms. Found 1 JPA repository interface.
2024-07-09 23:04:08,466 INFO [main] TomcatWebServer: Tomcat initialized with port 8083 (http)
2024-07-09 23:04:08,474 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8083"]
2024-07-09 23:04:08,475 INFO [main] StandardService: Starting service [Tomcat]
2024-07-09 23:04:08,475 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-09 23:04:08,532 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-09 23:04:08,536 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1039 ms
2024-07-09 23:04:08,720 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-09 23:04:08,851 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7be94cd6
2024-07-09 23:04:08,852 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-09 23:04:08,881 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_telegram_db (PostgreSQL 16.3)
2024-07-09 23:04:08,911 INFO [main] DbValidate: Successfully validated 1 migration (execution time 00:00.018s)
2024-07-09 23:04:08,943 INFO [main] DbMigrate: Current version of schema "public": 1.0
2024-07-09 23:04:08,945 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-09 23:04:09,007 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-09 23:04:09,051 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-09 23:04:09,079 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-09 23:04:09,306 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-09 23:04:09,897 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-09 23:04:09,899 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-09 23:04:10,320 WARN [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-09 23:04:10,609 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8083"]
2024-07-09 23:04:10,622 INFO [main] TomcatWebServer: Tomcat started on port 8083 (http) with context path '/'
2024-07-09 23:04:10,650 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092, localhost:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-telegram-notification-created-topic-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = telegram-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-09 23:04:10,682 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-09 23:04:10,774 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-09 23:04:10,774 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-09 23:04:10,775 INFO [main] AppInfoParser: Kafka startTimeMs: 1720555450773
2024-07-09 23:04:10,777 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Subscribed to topic(s): telegram-notification-created-topic
2024-07-09 23:04:11,037 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metadata: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Cluster ID: z6enREWhQpW0SJQoB6P-dw
2024-07-09 23:04:11,040 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9096 (id: 2147483644 rack: null)
2024-07-09 23:04:11,043 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-09 23:04:11,062 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-telegram-notification-created-topic-1-f85ceb92-96c7-4edd-b864-80333b7d8de4
2024-07-09 23:04:11,063 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-09 23:04:11,114 INFO [main] TelegramNotificationsApplication: Started TelegramNotificationsApplication in 3.942 seconds (process running for 4.32)
2024-07-09 23:04:14,071 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=34, memberId='consumer-telegram-notification-created-topic-1-f85ceb92-96c7-4edd-b864-80333b7d8de4', protocol='range'}
2024-07-09 23:04:14,077 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Finished assignment for group at generation 34: {consumer-telegram-notification-created-topic-1-f85ceb92-96c7-4edd-b864-80333b7d8de4=Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2])}
2024-07-09 23:04:14,094 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=34, memberId='consumer-telegram-notification-created-topic-1-f85ceb92-96c7-4edd-b864-80333b7d8de4', protocol='range'}
2024-07-09 23:04:14,094 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2])
2024-07-09 23:04:14,096 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2
2024-07-09 23:04:14,104 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=2}}
2024-07-09 23:04:14,104 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=2}}
2024-07-09 23:04:14,104 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-2 to the committed offset FetchPosition{offset=11, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=2}}
2024-07-09 23:04:14,105 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]
2024-07-09 23:06:14,280 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node -2 disconnected.
2024-07-09 23:06:14,282 INFO [kafka-coordinator-heartbeat-thread | email-notification-created-topic] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node -1 disconnected.
2024-07-09 23:08:23,613 INFO [http-nio-8081-exec-1] [/]: Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-09 23:08:23,613 INFO [http-nio-8081-exec-1] DispatcherServlet: Initializing Servlet 'dispatcherServlet'
2024-07-09 23:08:23,614 INFO [http-nio-8081-exec-1] DispatcherServlet: Completed initialization in 1 ms
2024-07-09 23:08:23,627 TRACE [http-nio-8081-exec-1] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@2b823d8d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3356f8ad, org.springframework.security.web.context.SecurityContextHolderFilter@63574d76, org.springframework.security.web.header.HeaderWriterFilter@487f025, org.springframework.security.web.authentication.logout.LogoutFilter@5c168f98, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@dcf64d2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7959fbe3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@79754505, org.springframework.security.web.access.ExceptionTranslationFilter@64547a83, org.springframework.security.web.access.intercept.AuthorizationFilter@470fc16c]] (1/1)
2024-07-09 23:08:23,627 DEBUG [http-nio-8081-exec-1] FilterChainProxy: Securing POST /authentication/register/
2024-07-09 23:08:23,628 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:08:23,628 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:08:23,629 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:08:23,630 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:08:23,631 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:08:23,631 TRACE [http-nio-8081-exec-1] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:08:23,631 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:08:23,631 TRACE [http-nio-8081-exec-1] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:08:23,631 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:08:23,632 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:08:23,632 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:08:23,632 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:08:23,632 TRACE [http-nio-8081-exec-1] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /authentication/register/
2024-07-09 23:08:23,633 TRACE [http-nio-8081-exec-1] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /authentication/register/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@45fd45b4
2024-07-09 23:08:23,633 TRACE [http-nio-8081-exec-1] HttpSessionSecurityContextRepository: No HttpSession currently exists
2024-07-09 23:08:23,633 TRACE [http-nio-8081-exec-1] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-09 23:08:23,633 TRACE [http-nio-8081-exec-1] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-09 23:08:23,634 TRACE [http-nio-8081-exec-1] AnonymousAuthenticationFilter: Set SecurityContextHolder to AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]]
2024-07-09 23:08:23,635 DEBUG [http-nio-8081-exec-1] FilterChainProxy: Secured POST /authentication/register/
2024-07-09 23:08:23,858 TRACE [http-nio-8081-exec-1] ProviderManager: Authenticating request with DaoAuthenticationProvider (1/1)
2024-07-09 23:08:24,046 DEBUG [http-nio-8081-exec-1] DaoAuthenticationProvider: Authenticated user
2024-07-09 23:08:24,064 DEBUG [http-nio-8081-exec-1] HttpSessionSecurityContextRepository: Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@4656de98]
2024-07-09 23:08:24,072 TRACE [http-nio-8081-exec-1] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-09 23:09:05,855 TRACE [http-nio-8081-exec-3] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@2b823d8d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3356f8ad, org.springframework.security.web.context.SecurityContextHolderFilter@63574d76, org.springframework.security.web.header.HeaderWriterFilter@487f025, org.springframework.security.web.authentication.logout.LogoutFilter@5c168f98, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@dcf64d2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7959fbe3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@79754505, org.springframework.security.web.access.ExceptionTranslationFilter@64547a83, org.springframework.security.web.access.intercept.AuthorizationFilter@470fc16c]] (1/1)
2024-07-09 23:09:05,855 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Securing POST /callers/create/
2024-07-09 23:09:05,855 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:09:05,855 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:09:05,855 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:09:05,855 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:09:05,855 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:09:05,855 TRACE [http-nio-8081-exec-3] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:09:05,855 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:09:05,855 TRACE [http-nio-8081-exec-3] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:09:05,855 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:09:05,855 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:09:05,855 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:09:05,856 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:09:05,856 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /callers/create/
2024-07-09 23:09:05,856 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /callers/create/ using AuthorityAuthorizationManager[authorities=[ROLE_ADMIN]]
2024-07-09 23:09:05,856 TRACE [http-nio-8081-exec-3] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-09 23:09:05,856 TRACE [http-nio-8081-exec-3] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-09 23:09:05,857 TRACE [http-nio-8081-exec-3] ExceptionTranslationFilter: Sending UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]] to access denied handler since access is denied
org.springframework.security.access.AccessDeniedException: Access Denied
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:98)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2024-07-09 23:09:05,858 DEBUG [http-nio-8081-exec-3] AccessDeniedHandlerImpl: Responding with 403 status code
2024-07-09 23:09:05,858 TRACE [http-nio-8081-exec-3] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-09 23:09:05,862 TRACE [http-nio-8081-exec-3] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@2b823d8d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3356f8ad, org.springframework.security.web.context.SecurityContextHolderFilter@63574d76, org.springframework.security.web.header.HeaderWriterFilter@487f025, org.springframework.security.web.authentication.logout.LogoutFilter@5c168f98, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@dcf64d2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7959fbe3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@79754505, org.springframework.security.web.access.ExceptionTranslationFilter@64547a83, org.springframework.security.web.access.intercept.AuthorizationFilter@470fc16c]] (1/1)
2024-07-09 23:09:05,862 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Securing POST /error
2024-07-09 23:09:05,862 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:09:05,863 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:09:05,863 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:09:05,863 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:09:05,863 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:09:05,863 TRACE [http-nio-8081-exec-3] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:09:05,863 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:09:05,863 TRACE [http-nio-8081-exec-3] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:09:05,863 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:09:05,863 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:09:05,863 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:09:05,863 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:09:05,863 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /error
2024-07-09 23:09:05,863 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /error using org.springframework.security.authorization.AuthenticatedAuthorizationManager@2db7b1ad
2024-07-09 23:09:05,863 TRACE [http-nio-8081-exec-3] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-09 23:09:05,863 TRACE [http-nio-8081-exec-3] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-09 23:09:05,863 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Secured POST /error
2024-07-09 23:11:55,146 INFO [background-preinit] Version: HV000001: Hibernate Validator 8.0.1.Final
2024-07-09 23:11:55,176 INFO [main] EmergencyApplication: Starting EmergencyApplication using Java 17.0.10 with PID 20984 (D:\programming\java\emergency-ms\emergency\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-09 23:11:55,177 DEBUG [main] EmergencyApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-09 23:11:55,177 INFO [main] EmergencyApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-09 23:11:55,748 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-09 23:11:55,798 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 41 ms. Found 3 JPA repository interfaces.
2024-07-09 23:11:56,292 INFO [main] TomcatWebServer: Tomcat initialized with port 8081 (http)
2024-07-09 23:11:56,297 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8081"]
2024-07-09 23:11:56,300 INFO [main] StandardService: Starting service [Tomcat]
2024-07-09 23:11:56,301 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-09 23:11:56,345 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-09 23:11:56,346 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1138 ms
2024-07-09 23:11:56,533 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-09 23:11:56,671 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@14457a95
2024-07-09 23:11:56,672 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-09 23:11:56,698 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_notifications_db (PostgreSQL 16.3)
2024-07-09 23:11:56,721 INFO [main] JdbcTableSchemaHistory: Schema history table "public"."flyway_schema_history" does not exist yet
2024-07-09 23:11:56,724 INFO [main] DbValidate: Successfully validated 2 migrations (execution time 00:00.013s)
2024-07-09 23:11:56,735 INFO [main] JdbcTableSchemaHistory: Creating Schema History table "public"."flyway_schema_history" ...
2024-07-09 23:11:56,911 INFO [main] DbMigrate: Current version of schema "public": << Empty Schema >>
2024-07-09 23:11:56,920 INFO [main] DbMigrate: Migrating schema "public" to version "1.0 - Create schema"
2024-07-09 23:11:56,959 ERROR [main] DbMigrate: Migration of schema "public" to version "1.0 - Create schema" failed! Changes successfully rolled back.
2024-07-09 23:11:56,963 WARN [main] AnnotationConfigServletWebServerApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Failed to initialize dependency 'flywayInitializer' of LoadTimeWeaverAware bean 'entityManagerFactory': Error creating bean with name 'flywayInitializer' defined in class path resource [org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class]: Script V1_0__Create_schema.sql failed
-------------------------------------
SQL State  : 42P01
Error Code : 0
Message    : ERROR: relation "telegram_user" does not exist
Location   : db/migration/V1_0__Create_schema.sql (D:\programming\java\emergency-ms\emergency\build\resources\main\db\migration\V1_0__Create_schema.sql)
Line       : 30
Statement  : Run Flyway with -X option to see the actual statement causing the problem

2024-07-09 23:11:56,963 INFO [main] HikariDataSource: HikariPool-1 - Shutdown initiated...
2024-07-09 23:11:56,996 INFO [main] HikariDataSource: HikariPool-1 - Shutdown completed.
2024-07-09 23:11:56,998 INFO [main] StandardService: Stopping service [Tomcat]
2024-07-09 23:11:57,005 INFO [main] ConditionEvaluationReportLogger: 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-07-09 23:11:57,021 ERROR [main] SpringApplication: Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Failed to initialize dependency 'flywayInitializer' of LoadTimeWeaverAware bean 'entityManagerFactory': Error creating bean with name 'flywayInitializer' defined in class path resource [org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class]: Script V1_0__Create_schema.sql failed
-------------------------------------
SQL State  : 42P01
Error Code : 0
Message    : ERROR: relation "telegram_user" does not exist
Location   : db/migration/V1_0__Create_schema.sql (D:\programming\java\emergency-ms\emergency\build\resources\main\db\migration\V1_0__Create_schema.sql)
Line       : 30
Statement  : Run Flyway with -X option to see the actual statement causing the problem

	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:326)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:952)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at org.example.emergency.EmergencyApplication.main(EmergencyApplication.java:9)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'flywayInitializer' defined in class path resource [org/springframework/boot/autoconfigure/flyway/FlywayAutoConfiguration$FlywayConfiguration.class]: Script V1_0__Create_schema.sql failed
-------------------------------------
SQL State  : 42P01
Error Code : 0
Message    : ERROR: relation "telegram_user" does not exist
Location   : db/migration/V1_0__Create_schema.sql (D:\programming\java\emergency-ms\emergency\build\resources\main\db\migration\V1_0__Create_schema.sql)
Line       : 30
Statement  : Run Flyway with -X option to see the actual statement causing the problem

	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1788)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:313)
	... 10 common frames omitted
Caused by: org.flywaydb.core.internal.command.DbMigrate$FlywayMigrateException: Script V1_0__Create_schema.sql failed
-------------------------------------
SQL State  : 42P01
Error Code : 0
Message    : ERROR: relation "telegram_user" does not exist
Location   : db/migration/V1_0__Create_schema.sql (D:\programming\java\emergency-ms\emergency\build\resources\main\db\migration\V1_0__Create_schema.sql)
Line       : 30
Statement  : Run Flyway with -X option to see the actual statement causing the problem

	at org.flywaydb.core.internal.command.DbMigrate.doMigrateGroup(DbMigrate.java:392)
	at org.flywaydb.core.internal.command.DbMigrate.lambda$applyMigrations$1(DbMigrate.java:280)
	at org.flywaydb.core.internal.jdbc.TransactionalExecutionTemplate.execute(TransactionalExecutionTemplate.java:59)
	at org.flywaydb.core.internal.command.DbMigrate.applyMigrations(DbMigrate.java:279)
	at org.flywaydb.core.internal.command.DbMigrate.migrateGroup(DbMigrate.java:252)
	at org.flywaydb.core.internal.command.DbMigrate.lambda$migrateAll$0(DbMigrate.java:146)
	at org.flywaydb.database.postgresql.PostgreSQLAdvisoryLockTemplate.execute(PostgreSQLAdvisoryLockTemplate.java:77)
	at org.flywaydb.database.postgresql.PostgreSQLAdvisoryLockTemplate.lambda$execute$0(PostgreSQLAdvisoryLockTemplate.java:60)
	at org.flywaydb.core.internal.jdbc.TransactionalExecutionTemplate.execute(TransactionalExecutionTemplate.java:59)
	at org.flywaydb.database.postgresql.PostgreSQLAdvisoryLockTemplate.execute(PostgreSQLAdvisoryLockTemplate.java:60)
	at org.flywaydb.database.postgresql.PostgreSQLConnection.lock(PostgreSQLConnection.java:100)
	at org.flywaydb.core.internal.schemahistory.JdbcTableSchemaHistory.lock(JdbcTableSchemaHistory.java:149)
	at org.flywaydb.core.internal.command.DbMigrate.migrateAll(DbMigrate.java:146)
	at org.flywaydb.core.internal.command.DbMigrate.migrate(DbMigrate.java:104)
	at org.flywaydb.core.Flyway.lambda$migrate$0(Flyway.java:222)
	at org.flywaydb.core.FlywayExecutor.execute(FlywayExecutor.java:210)
	at org.flywaydb.core.Flyway.migrate(Flyway.java:164)
	at org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializer.afterPropertiesSet(FlywayMigrationInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1835)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1784)
	... 17 common frames omitted
Caused by: org.flywaydb.core.internal.sqlscript.FlywaySqlScriptException: Script V1_0__Create_schema.sql failed
-------------------------------------
SQL State  : 42P01
Error Code : 0
Message    : ERROR: relation "telegram_user" does not exist
Location   : db/migration/V1_0__Create_schema.sql (D:\programming\java\emergency-ms\emergency\build\resources\main\db\migration\V1_0__Create_schema.sql)
Line       : 30
Statement  : Run Flyway with -X option to see the actual statement causing the problem

	at org.flywaydb.core.internal.sqlscript.DefaultSqlScriptExecutor.handleException(DefaultSqlScriptExecutor.java:252)
	at org.flywaydb.core.internal.sqlscript.DefaultSqlScriptExecutor.executeStatement(DefaultSqlScriptExecutor.java:214)
	at org.flywaydb.core.internal.sqlscript.DefaultSqlScriptExecutor.execute(DefaultSqlScriptExecutor.java:136)
	at org.flywaydb.core.internal.resolver.sql.SqlMigrationExecutor.executeOnce(SqlMigrationExecutor.java:69)
	at org.flywaydb.core.internal.resolver.sql.SqlMigrationExecutor.lambda$execute$0(SqlMigrationExecutor.java:61)
	at org.flywaydb.core.internal.database.DefaultExecutionStrategy.execute(DefaultExecutionStrategy.java:31)
	at org.flywaydb.core.internal.resolver.sql.SqlMigrationExecutor.execute(SqlMigrationExecutor.java:60)
	at org.flywaydb.core.internal.command.DbMigrate.doMigrateGroup(DbMigrate.java:384)
	... 36 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: relation "telegram_user" does not exist
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2725)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2412)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:371)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:502)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:419)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:341)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:326)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:302)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:297)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.flywaydb.core.internal.jdbc.JdbcTemplate.executeStatement(JdbcTemplate.java:210)
	at org.flywaydb.core.internal.sqlscript.ParsedSqlStatement.execute(ParsedSqlStatement.java:88)
	at org.flywaydb.core.internal.sqlscript.DefaultSqlScriptExecutor.executeStatement(DefaultSqlScriptExecutor.java:209)
	... 42 common frames omitted
2024-07-09 23:12:31,861 INFO [background-preinit] Version: HV000001: Hibernate Validator 8.0.1.Final
2024-07-09 23:12:31,891 INFO [main] EmergencyApplication: Starting EmergencyApplication using Java 17.0.10 with PID 21724 (D:\programming\java\emergency-ms\emergency\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-09 23:12:31,891 DEBUG [main] EmergencyApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-09 23:12:31,892 INFO [main] EmergencyApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-09 23:12:32,480 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-09 23:12:32,534 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 40 ms. Found 3 JPA repository interfaces.
2024-07-09 23:12:33,015 INFO [main] TomcatWebServer: Tomcat initialized with port 8081 (http)
2024-07-09 23:12:33,022 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8081"]
2024-07-09 23:12:33,024 INFO [main] StandardService: Starting service [Tomcat]
2024-07-09 23:12:33,025 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-09 23:12:33,070 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-09 23:12:33,071 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1147 ms
2024-07-09 23:12:33,258 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-09 23:12:33,383 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@478967eb
2024-07-09 23:12:33,384 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-09 23:12:33,407 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_notifications_db (PostgreSQL 16.3)
2024-07-09 23:12:33,437 INFO [main] DbValidate: Successfully validated 2 migrations (execution time 00:00.017s)
2024-07-09 23:12:33,480 INFO [main] DbMigrate: Current version of schema "public": << Empty Schema >>
2024-07-09 23:12:33,493 INFO [main] DbMigrate: Migrating schema "public" to version "1.0 - Create schema"
2024-07-09 23:12:33,541 INFO [main] DbMigrate: Migrating schema "public" to version "1.1 - Data Insert"
2024-07-09 23:12:33,545 INFO [main] DefaultSqlScriptExecutor: +---------+
| nextval |
+---------+
| 1       |
+---------+

2024-07-09 23:12:33,545 INFO [main] DefaultSqlScriptExecutor: +---------+
| nextval |
+---------+
| 1       |
+---------+

2024-07-09 23:12:33,545 INFO [main] DefaultSqlScriptExecutor: +---------+
| nextval |
+---------+
| 1       |
+---------+

2024-07-09 23:12:33,554 INFO [main] DbMigrate: Successfully applied 2 migrations to schema "public", now at version v1.1 (execution time 00:00.037s)
2024-07-09 23:12:33,609 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-09 23:12:33,651 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-09 23:12:33,680 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-09 23:12:33,907 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-09 23:12:34,417 INFO [main] EntityInstantiatorPojoStandard: HHH000182: No default (no-argument) constructor for class: org.example.emergency.entity.EmergencyCall (class must be instantiated by Interceptor)
2024-07-09 23:12:34,595 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-09 23:12:34,596 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-09 23:12:34,837 TRACE [main] AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer: Eagerly initializing {securityConfig=org.example.emergency.config.SecurityConfig$$SpringCGLIB$$0@67201002}
2024-07-09 23:12:34,849 INFO [main] InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer: Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-07-09 23:12:34,850 WARN [main] InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer: Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-07-09 23:12:34,913 INFO [main] QueryEnhancerFactory: Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-09 23:12:34,941 WARN [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-09 23:12:35,121 DEBUG [main] DefaultSecurityFilterChain: Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-09 23:12:35,325 INFO [main] AdminClientConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-07-09 23:12:35,401 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-09 23:12:35,401 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-09 23:12:35,401 INFO [main] AppInfoParser: Kafka startTimeMs: 1720555955400
2024-07-09 23:12:35,612 INFO [kafka-admin-client-thread | emergency-admin-0] AppInfoParser: App info kafka.admin.client for emergency-admin-0 unregistered
2024-07-09 23:12:35,615 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics scheduler closed
2024-07-09 23:12:35,615 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-09 23:12:35,615 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics reporters closed
2024-07-09 23:12:35,620 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8081"]
2024-07-09 23:12:35,627 INFO [main] TomcatWebServer: Tomcat started on port 8081 (http) with context path '/'
2024-07-09 23:12:35,634 INFO [main] EmergencyApplication: Started EmergencyApplication in 4.016 seconds (process running for 4.382)
2024-07-09 23:12:47,744 INFO [http-nio-8081-exec-1] [/]: Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-09 23:12:47,744 INFO [http-nio-8081-exec-1] DispatcherServlet: Initializing Servlet 'dispatcherServlet'
2024-07-09 23:12:47,745 INFO [http-nio-8081-exec-1] DispatcherServlet: Completed initialization in 1 ms
2024-07-09 23:12:47,758 TRACE [http-nio-8081-exec-1] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@2378d620, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@50b43d34, org.springframework.security.web.context.SecurityContextHolderFilter@7510824, org.springframework.security.web.header.HeaderWriterFilter@4be6531a, org.springframework.security.web.authentication.logout.LogoutFilter@372c428, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@766ab25b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7c424dfe, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@559a145b, org.springframework.security.web.access.ExceptionTranslationFilter@5dc218e2, org.springframework.security.web.access.intercept.AuthorizationFilter@5a0b925a]] (1/1)
2024-07-09 23:12:47,758 DEBUG [http-nio-8081-exec-1] FilterChainProxy: Securing POST /authentication/register/
2024-07-09 23:12:47,758 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:12:47,758 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:12:47,760 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:12:47,761 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:12:47,761 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:12:47,761 TRACE [http-nio-8081-exec-1] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:12:47,761 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:12:47,761 TRACE [http-nio-8081-exec-1] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:12:47,762 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:12:47,762 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:12:47,762 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:12:47,763 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:12:47,763 TRACE [http-nio-8081-exec-1] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /authentication/register/
2024-07-09 23:12:47,763 TRACE [http-nio-8081-exec-1] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /authentication/register/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@3ba2c139
2024-07-09 23:12:47,763 TRACE [http-nio-8081-exec-1] HttpSessionSecurityContextRepository: No HttpSession currently exists
2024-07-09 23:12:47,764 TRACE [http-nio-8081-exec-1] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-09 23:12:47,764 TRACE [http-nio-8081-exec-1] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-09 23:12:47,764 TRACE [http-nio-8081-exec-1] AnonymousAuthenticationFilter: Set SecurityContextHolder to AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]]
2024-07-09 23:12:47,765 DEBUG [http-nio-8081-exec-1] FilterChainProxy: Secured POST /authentication/register/
2024-07-09 23:12:47,974 TRACE [http-nio-8081-exec-1] ProviderManager: Authenticating request with DaoAuthenticationProvider (1/1)
2024-07-09 23:12:48,178 DEBUG [http-nio-8081-exec-1] DaoAuthenticationProvider: Authenticated user
2024-07-09 23:12:48,197 DEBUG [http-nio-8081-exec-1] HttpSessionSecurityContextRepository: Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@3c291450]
2024-07-09 23:12:48,206 TRACE [http-nio-8081-exec-1] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-09 23:13:11,103 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node -1 disconnected.
2024-07-09 23:13:11,105 INFO [kafka-coordinator-heartbeat-thread | telegram-notification-created-topic] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node -2 disconnected.
2024-07-09 23:15:36,725 INFO [background-preinit] Version: HV000001: Hibernate Validator 8.0.1.Final
2024-07-09 23:15:36,751 INFO [main] EmergencyApplication: Starting EmergencyApplication using Java 17.0.10 with PID 21608 (D:\programming\java\emergency-ms\emergency\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-09 23:15:36,751 DEBUG [main] EmergencyApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-09 23:15:36,752 INFO [main] EmergencyApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-09 23:15:37,295 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-09 23:15:37,347 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 41 ms. Found 3 JPA repository interfaces.
2024-07-09 23:15:37,840 INFO [main] TomcatWebServer: Tomcat initialized with port 8081 (http)
2024-07-09 23:15:37,850 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8081"]
2024-07-09 23:15:37,852 INFO [main] StandardService: Starting service [Tomcat]
2024-07-09 23:15:37,852 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-09 23:15:37,908 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-09 23:15:37,909 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1127 ms
2024-07-09 23:15:38,091 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-09 23:15:38,218 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@17fbfb02
2024-07-09 23:15:38,220 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-09 23:15:38,243 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_notifications_db (PostgreSQL 16.3)
2024-07-09 23:15:38,275 INFO [main] DbValidate: Successfully validated 2 migrations (execution time 00:00.020s)
2024-07-09 23:15:38,321 INFO [main] DbMigrate: Current version of schema "public": 1.1
2024-07-09 23:15:38,323 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-09 23:15:38,382 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-09 23:15:38,433 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-09 23:15:38,460 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-09 23:15:38,686 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-09 23:15:39,255 INFO [main] EntityInstantiatorPojoStandard: HHH000182: No default (no-argument) constructor for class: org.example.emergency.entity.EmergencyCall (class must be instantiated by Interceptor)
2024-07-09 23:15:39,451 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-09 23:15:39,453 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-09 23:15:39,679 TRACE [main] AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer: Eagerly initializing {securityConfig=org.example.emergency.config.SecurityConfig$$SpringCGLIB$$0@130ad58d}
2024-07-09 23:15:39,692 INFO [main] InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer: Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-07-09 23:15:39,692 WARN [main] InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer: Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-07-09 23:15:39,751 INFO [main] QueryEnhancerFactory: Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-09 23:15:39,786 WARN [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-09 23:15:39,960 DEBUG [main] DefaultSecurityFilterChain: Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-09 23:15:40,157 INFO [main] AdminClientConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-07-09 23:15:40,230 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-09 23:15:40,230 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-09 23:15:40,230 INFO [main] AppInfoParser: Kafka startTimeMs: 1720556140229
2024-07-09 23:15:40,454 INFO [kafka-admin-client-thread | emergency-admin-0] AppInfoParser: App info kafka.admin.client for emergency-admin-0 unregistered
2024-07-09 23:15:40,457 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics scheduler closed
2024-07-09 23:15:40,457 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-09 23:15:40,457 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics reporters closed
2024-07-09 23:15:40,461 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8081"]
2024-07-09 23:15:40,470 INFO [main] TomcatWebServer: Tomcat started on port 8081 (http) with context path '/'
2024-07-09 23:15:40,477 INFO [main] EmergencyApplication: Started EmergencyApplication in 3.987 seconds (process running for 4.338)
2024-07-09 23:16:09,414 INFO [http-nio-8081-exec-2] [/]: Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-09 23:16:09,414 INFO [http-nio-8081-exec-2] DispatcherServlet: Initializing Servlet 'dispatcherServlet'
2024-07-09 23:16:09,415 INFO [http-nio-8081-exec-2] DispatcherServlet: Completed initialization in 1 ms
2024-07-09 23:16:09,428 TRACE [http-nio-8081-exec-2] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6eec84, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@54e970c7, org.springframework.security.web.context.SecurityContextHolderFilter@64547a83, org.springframework.security.web.header.HeaderWriterFilter@30fffb53, org.springframework.security.web.authentication.logout.LogoutFilter@3e866323, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@487f025, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@39329d81, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@36cabad, org.springframework.security.web.access.ExceptionTranslationFilter@51179fad, org.springframework.security.web.access.intercept.AuthorizationFilter@5d00241b]] (1/1)
2024-07-09 23:16:09,429 DEBUG [http-nio-8081-exec-2] FilterChainProxy: Securing POST /authentication/login/
2024-07-09 23:16:09,429 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:16:09,429 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:16:09,431 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:16:09,432 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:16:09,432 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:16:09,432 TRACE [http-nio-8081-exec-2] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:16:09,433 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:16:09,433 TRACE [http-nio-8081-exec-2] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:16:09,433 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:16:09,433 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:16:09,433 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:16:09,433 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:16:09,433 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /authentication/login/
2024-07-09 23:16:09,434 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /authentication/login/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@402012fd
2024-07-09 23:16:09,434 TRACE [http-nio-8081-exec-2] HttpSessionSecurityContextRepository: No HttpSession currently exists
2024-07-09 23:16:09,434 TRACE [http-nio-8081-exec-2] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-09 23:16:09,434 TRACE [http-nio-8081-exec-2] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-09 23:16:09,434 TRACE [http-nio-8081-exec-2] AnonymousAuthenticationFilter: Set SecurityContextHolder to AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]]
2024-07-09 23:16:09,434 DEBUG [http-nio-8081-exec-2] FilterChainProxy: Secured POST /authentication/login/
2024-07-09 23:16:09,499 TRACE [http-nio-8081-exec-2] ProviderManager: Authenticating request with DaoAuthenticationProvider (1/1)
2024-07-09 23:16:09,757 DEBUG [http-nio-8081-exec-2] DaoAuthenticationProvider: Authenticated user
2024-07-09 23:16:09,779 DEBUG [http-nio-8081-exec-2] HttpSessionSecurityContextRepository: Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@27a51dd]
2024-07-09 23:16:09,797 TRACE [http-nio-8081-exec-2] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-09 23:16:14,507 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node -1 disconnected.
2024-07-09 23:16:27,280 TRACE [http-nio-8081-exec-4] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6eec84, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@54e970c7, org.springframework.security.web.context.SecurityContextHolderFilter@64547a83, org.springframework.security.web.header.HeaderWriterFilter@30fffb53, org.springframework.security.web.authentication.logout.LogoutFilter@3e866323, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@487f025, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@39329d81, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@36cabad, org.springframework.security.web.access.ExceptionTranslationFilter@51179fad, org.springframework.security.web.access.intercept.AuthorizationFilter@5d00241b]] (1/1)
2024-07-09 23:16:27,280 DEBUG [http-nio-8081-exec-4] FilterChainProxy: Securing POST /receivers/create/
2024-07-09 23:16:27,280 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:16:27,280 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:16:27,280 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:16:27,280 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:16:27,280 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:16:27,280 TRACE [http-nio-8081-exec-4] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:16:27,280 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:16:27,281 TRACE [http-nio-8081-exec-4] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:16:27,281 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:16:27,281 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:16:27,281 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:16:27,281 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:16:27,281 TRACE [http-nio-8081-exec-4] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /receivers/create/
2024-07-09 23:16:27,281 TRACE [http-nio-8081-exec-4] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /receivers/create/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@5be3e583
2024-07-09 23:16:27,281 TRACE [http-nio-8081-exec-4] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-09 23:16:27,282 TRACE [http-nio-8081-exec-4] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-09 23:16:27,282 DEBUG [http-nio-8081-exec-4] FilterChainProxy: Secured POST /receivers/create/
2024-07-09 23:16:27,339 INFO [http-nio-8081-exec-4] ProducerConfig: ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092, localhost:9094]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 10000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 5000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2024-07-09 23:16:27,355 INFO [http-nio-8081-exec-4] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-09 23:16:27,362 INFO [http-nio-8081-exec-4] KafkaProducer: [Producer clientId=emergency-producer-1] Instantiated an idempotent producer.
2024-07-09 23:16:27,376 INFO [http-nio-8081-exec-4] AppInfoParser: Kafka version: 3.7.0
2024-07-09 23:16:27,376 INFO [http-nio-8081-exec-4] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-09 23:16:27,377 INFO [http-nio-8081-exec-4] AppInfoParser: Kafka startTimeMs: 1720556187376
2024-07-09 23:16:27,384 INFO [kafka-producer-network-thread | emergency-producer-1] Metadata: [Producer clientId=emergency-producer-1] Cluster ID: z6enREWhQpW0SJQoB6P-dw
2024-07-09 23:16:27,412 TRACE [http-nio-8081-exec-4] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-09 23:16:27,497 INFO [kafka-producer-network-thread | emergency-producer-1] TransactionManager: [Producer clientId=emergency-producer-1] ProducerId set to 2000 with epoch 0
2024-07-09 23:19:59,885 INFO [background-preinit] Version: HV000001: Hibernate Validator 8.0.1.Final
2024-07-09 23:19:59,913 INFO [main] EmergencyApplication: Starting EmergencyApplication using Java 17.0.10 with PID 13672 (D:\programming\java\emergency-ms\emergency\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-09 23:19:59,914 DEBUG [main] EmergencyApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-09 23:19:59,914 INFO [main] EmergencyApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-09 23:20:00,480 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-09 23:20:00,534 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 47 ms. Found 3 JPA repository interfaces.
2024-07-09 23:20:01,032 INFO [main] TomcatWebServer: Tomcat initialized with port 8081 (http)
2024-07-09 23:20:01,041 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8081"]
2024-07-09 23:20:01,043 INFO [main] StandardService: Starting service [Tomcat]
2024-07-09 23:20:01,043 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-09 23:20:01,096 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-09 23:20:01,097 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1150 ms
2024-07-09 23:20:01,283 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-09 23:20:01,421 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5ac044ef
2024-07-09 23:20:01,422 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-09 23:20:01,448 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_notifications_db (PostgreSQL 16.3)
2024-07-09 23:20:01,482 INFO [main] DbValidate: Successfully validated 2 migrations (execution time 00:00.021s)
2024-07-09 23:20:01,518 INFO [main] DbMigrate: Current version of schema "public": 1.1
2024-07-09 23:20:01,521 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-09 23:20:01,575 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-09 23:20:01,617 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-09 23:20:01,646 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-09 23:20:01,870 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-09 23:20:02,390 INFO [main] EntityInstantiatorPojoStandard: HHH000182: No default (no-argument) constructor for class: org.example.emergency.entity.EmergencyCall (class must be instantiated by Interceptor)
2024-07-09 23:20:02,572 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-09 23:20:02,574 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-09 23:20:02,797 TRACE [main] AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer: Eagerly initializing {securityConfig=org.example.emergency.config.SecurityConfig$$SpringCGLIB$$0@1da5635e}
2024-07-09 23:20:02,808 INFO [main] InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer: Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-07-09 23:20:02,809 WARN [main] InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer: Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-07-09 23:20:02,875 INFO [main] QueryEnhancerFactory: Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-09 23:20:02,904 WARN [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-09 23:20:03,090 DEBUG [main] DefaultSecurityFilterChain: Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-09 23:20:03,283 INFO [main] AdminClientConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-07-09 23:20:03,366 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-09 23:20:03,366 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-09 23:20:03,366 INFO [main] AppInfoParser: Kafka startTimeMs: 1720556403365
2024-07-09 23:20:03,569 INFO [kafka-admin-client-thread | emergency-admin-0] AppInfoParser: App info kafka.admin.client for emergency-admin-0 unregistered
2024-07-09 23:20:03,572 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics scheduler closed
2024-07-09 23:20:03,572 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-09 23:20:03,572 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics reporters closed
2024-07-09 23:20:03,575 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8081"]
2024-07-09 23:20:03,584 INFO [main] TomcatWebServer: Tomcat started on port 8081 (http) with context path '/'
2024-07-09 23:20:03,591 INFO [main] EmergencyApplication: Started EmergencyApplication in 3.946 seconds (process running for 4.313)
2024-07-09 23:21:06,334 INFO [http-nio-8081-exec-2] [/]: Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-09 23:21:06,334 INFO [http-nio-8081-exec-2] DispatcherServlet: Initializing Servlet 'dispatcherServlet'
2024-07-09 23:21:06,335 INFO [http-nio-8081-exec-2] DispatcherServlet: Completed initialization in 1 ms
2024-07-09 23:21:06,347 TRACE [http-nio-8081-exec-2] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@5685184b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@667391ab, org.springframework.security.web.context.SecurityContextHolderFilter@27558dee, org.springframework.security.web.header.HeaderWriterFilter@5702232d, org.springframework.security.web.authentication.logout.LogoutFilter@20bc3e7f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@41c05747, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6f749a1f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@708c69de, org.springframework.security.web.access.ExceptionTranslationFilter@149fab7f, org.springframework.security.web.access.intercept.AuthorizationFilter@4f0381cd]] (1/1)
2024-07-09 23:21:06,347 DEBUG [http-nio-8081-exec-2] FilterChainProxy: Securing POST /receivers/create/
2024-07-09 23:21:06,348 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:21:06,348 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:21:06,349 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:21:06,350 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:21:06,351 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:21:06,351 TRACE [http-nio-8081-exec-2] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:21:06,351 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:21:06,351 TRACE [http-nio-8081-exec-2] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:21:06,351 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:21:06,351 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:21:06,353 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:21:06,353 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:21:06,353 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /receivers/create/
2024-07-09 23:21:06,354 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /receivers/create/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@5ce6e517
2024-07-09 23:21:06,354 TRACE [http-nio-8081-exec-2] HttpSessionSecurityContextRepository: No HttpSession currently exists
2024-07-09 23:21:06,354 TRACE [http-nio-8081-exec-2] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-09 23:21:06,354 TRACE [http-nio-8081-exec-2] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-09 23:21:06,354 TRACE [http-nio-8081-exec-2] AnonymousAuthenticationFilter: Set SecurityContextHolder to AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]]
2024-07-09 23:21:06,355 TRACE [http-nio-8081-exec-2] ExceptionTranslationFilter: Sending AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]] to authentication entry point since access is denied
org.springframework.security.access.AccessDeniedException: Access Denied
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:98)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2024-07-09 23:21:06,378 DEBUG [http-nio-8081-exec-2] HttpSessionRequestCache: Saved request http://localhost:8081/receivers/create/?continue to session
2024-07-09 23:21:06,378 DEBUG [http-nio-8081-exec-2] Http403ForbiddenEntryPoint: Pre-authenticated entry point called. Rejecting access
2024-07-09 23:21:06,378 TRACE [http-nio-8081-exec-2] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-09 23:21:06,384 TRACE [http-nio-8081-exec-2] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@5685184b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@667391ab, org.springframework.security.web.context.SecurityContextHolderFilter@27558dee, org.springframework.security.web.header.HeaderWriterFilter@5702232d, org.springframework.security.web.authentication.logout.LogoutFilter@20bc3e7f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@41c05747, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6f749a1f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@708c69de, org.springframework.security.web.access.ExceptionTranslationFilter@149fab7f, org.springframework.security.web.access.intercept.AuthorizationFilter@4f0381cd]] (1/1)
2024-07-09 23:21:06,384 DEBUG [http-nio-8081-exec-2] FilterChainProxy: Securing POST /error
2024-07-09 23:21:06,384 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:21:06,384 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:21:06,384 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:21:06,384 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:21:06,384 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:21:06,384 TRACE [http-nio-8081-exec-2] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:21:06,384 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:21:06,384 TRACE [http-nio-8081-exec-2] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:21:06,384 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:21:06,385 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:21:06,385 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:21:06,385 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:21:06,385 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /error
2024-07-09 23:21:06,385 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /error using org.springframework.security.authorization.AuthenticatedAuthorizationManager@5ce6e517
2024-07-09 23:21:06,385 TRACE [http-nio-8081-exec-2] HttpSessionSecurityContextRepository: Did not find SecurityContext in HttpSession DDCBD1F82FEF6755DB9C9D433529D8D1 using the SPRING_SECURITY_CONTEXT session attribute
2024-07-09 23:21:06,385 TRACE [http-nio-8081-exec-2] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-09 23:21:06,385 TRACE [http-nio-8081-exec-2] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-09 23:21:06,385 TRACE [http-nio-8081-exec-2] AnonymousAuthenticationFilter: Set SecurityContextHolder to AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=DDCBD1F82FEF6755DB9C9D433529D8D1], Granted Authorities=[ROLE_ANONYMOUS]]
2024-07-09 23:21:06,385 TRACE [http-nio-8081-exec-2] ExceptionTranslationFilter: Sending AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=DDCBD1F82FEF6755DB9C9D433529D8D1], Granted Authorities=[ROLE_ANONYMOUS]] to authentication entry point since access is denied
org.springframework.security.access.AccessDeniedException: Access Denied
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:98)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:632)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:410)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:330)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:267)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:362)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:222)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2024-07-09 23:21:06,386 DEBUG [http-nio-8081-exec-2] HttpSessionRequestCache: Saved request http://localhost:8081/error?continue to session
2024-07-09 23:21:06,386 DEBUG [http-nio-8081-exec-2] Http403ForbiddenEntryPoint: Pre-authenticated entry point called. Rejecting access
2024-07-09 23:21:19,844 TRACE [http-nio-8081-exec-4] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@5685184b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@667391ab, org.springframework.security.web.context.SecurityContextHolderFilter@27558dee, org.springframework.security.web.header.HeaderWriterFilter@5702232d, org.springframework.security.web.authentication.logout.LogoutFilter@20bc3e7f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@41c05747, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6f749a1f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@708c69de, org.springframework.security.web.access.ExceptionTranslationFilter@149fab7f, org.springframework.security.web.access.intercept.AuthorizationFilter@4f0381cd]] (1/1)
2024-07-09 23:21:19,844 DEBUG [http-nio-8081-exec-4] FilterChainProxy: Securing POST /authentication/login/
2024-07-09 23:21:19,844 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:21:19,844 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:21:19,844 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:21:19,844 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:21:19,844 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:21:19,844 TRACE [http-nio-8081-exec-4] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:21:19,844 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:21:19,844 TRACE [http-nio-8081-exec-4] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:21:19,845 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:21:19,845 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:21:19,845 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:21:19,845 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:21:19,845 TRACE [http-nio-8081-exec-4] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /authentication/login/
2024-07-09 23:21:19,845 TRACE [http-nio-8081-exec-4] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /authentication/login/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@8e8bcac
2024-07-09 23:21:19,845 TRACE [http-nio-8081-exec-4] HttpSessionSecurityContextRepository: Did not find SecurityContext in HttpSession DDCBD1F82FEF6755DB9C9D433529D8D1 using the SPRING_SECURITY_CONTEXT session attribute
2024-07-09 23:21:19,845 TRACE [http-nio-8081-exec-4] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-09 23:21:19,845 TRACE [http-nio-8081-exec-4] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-09 23:21:19,845 TRACE [http-nio-8081-exec-4] AnonymousAuthenticationFilter: Set SecurityContextHolder to AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=DDCBD1F82FEF6755DB9C9D433529D8D1], Granted Authorities=[ROLE_ANONYMOUS]]
2024-07-09 23:21:19,845 DEBUG [http-nio-8081-exec-4] FilterChainProxy: Secured POST /authentication/login/
2024-07-09 23:21:19,904 TRACE [http-nio-8081-exec-4] ProviderManager: Authenticating request with DaoAuthenticationProvider (1/1)
2024-07-09 23:21:20,131 DEBUG [http-nio-8081-exec-4] DaoAuthenticationProvider: Authenticated user
2024-07-09 23:21:20,133 DEBUG [http-nio-8081-exec-4] HttpSessionSecurityContextRepository: Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@3e40e652]
2024-07-09 23:21:20,150 TRACE [http-nio-8081-exec-4] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-09 23:21:23,089 TRACE [http-nio-8081-exec-3] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@5685184b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@667391ab, org.springframework.security.web.context.SecurityContextHolderFilter@27558dee, org.springframework.security.web.header.HeaderWriterFilter@5702232d, org.springframework.security.web.authentication.logout.LogoutFilter@20bc3e7f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@41c05747, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6f749a1f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@708c69de, org.springframework.security.web.access.ExceptionTranslationFilter@149fab7f, org.springframework.security.web.access.intercept.AuthorizationFilter@4f0381cd]] (1/1)
2024-07-09 23:21:23,090 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Securing POST /receivers/create/
2024-07-09 23:21:23,090 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:21:23,090 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:21:23,090 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:21:23,090 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:21:23,090 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:21:23,090 TRACE [http-nio-8081-exec-3] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:21:23,090 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:21:23,090 TRACE [http-nio-8081-exec-3] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:21:23,090 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:21:23,090 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:21:23,090 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:21:23,090 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:21:23,090 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /receivers/create/
2024-07-09 23:21:23,091 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /receivers/create/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@5ce6e517
2024-07-09 23:21:23,091 TRACE [http-nio-8081-exec-3] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-09 23:21:23,091 TRACE [http-nio-8081-exec-3] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-09 23:21:23,091 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Secured POST /receivers/create/
2024-07-09 23:21:23,107 TRACE [http-nio-8081-exec-3] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-09 23:21:23,107 ERROR [http-nio-8081-exec-3] [dispatcherServlet]: Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: To create binding, you need to specify person email or/and telegram username.] with root cause
java.lang.IllegalArgumentException: To create binding, you need to specify person email or/and telegram username.
	at org.example.emergency.service.impls.ReceiverServiceImpl.checkIfReceiverDoesNotExist(ReceiverServiceImpl.java:103)
	at org.example.emergency.service.impls.ReceiverServiceImpl.create(ReceiverServiceImpl.java:38)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.emergency.service.impls.ReceiverServiceImpl$$SpringCGLIB$$0.create(<generated>)
	at org.example.emergency.controller.ReceiverController.create(ReceiverController.java:23)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2024-07-09 23:21:23,109 TRACE [http-nio-8081-exec-3] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@5685184b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@667391ab, org.springframework.security.web.context.SecurityContextHolderFilter@27558dee, org.springframework.security.web.header.HeaderWriterFilter@5702232d, org.springframework.security.web.authentication.logout.LogoutFilter@20bc3e7f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@41c05747, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6f749a1f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@708c69de, org.springframework.security.web.access.ExceptionTranslationFilter@149fab7f, org.springframework.security.web.access.intercept.AuthorizationFilter@4f0381cd]] (1/1)
2024-07-09 23:21:23,109 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Securing POST /error
2024-07-09 23:21:23,109 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:21:23,109 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:21:23,109 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:21:23,109 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:21:23,109 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:21:23,109 TRACE [http-nio-8081-exec-3] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:21:23,109 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:21:23,109 TRACE [http-nio-8081-exec-3] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:21:23,109 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:21:23,109 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:21:23,109 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:21:23,110 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:21:23,110 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /error
2024-07-09 23:21:23,110 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /error using org.springframework.security.authorization.AuthenticatedAuthorizationManager@5ce6e517
2024-07-09 23:21:23,110 TRACE [http-nio-8081-exec-3] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-09 23:21:23,110 TRACE [http-nio-8081-exec-3] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-09 23:21:23,110 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Secured POST /error
2024-07-09 23:21:36,286 TRACE [http-nio-8081-exec-6] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@5685184b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@667391ab, org.springframework.security.web.context.SecurityContextHolderFilter@27558dee, org.springframework.security.web.header.HeaderWriterFilter@5702232d, org.springframework.security.web.authentication.logout.LogoutFilter@20bc3e7f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@41c05747, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6f749a1f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@708c69de, org.springframework.security.web.access.ExceptionTranslationFilter@149fab7f, org.springframework.security.web.access.intercept.AuthorizationFilter@4f0381cd]] (1/1)
2024-07-09 23:21:36,287 DEBUG [http-nio-8081-exec-6] FilterChainProxy: Securing POST /receivers/create/
2024-07-09 23:21:36,287 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:21:36,287 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:21:36,287 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:21:36,287 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:21:36,287 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:21:36,287 TRACE [http-nio-8081-exec-6] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:21:36,287 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:21:36,287 TRACE [http-nio-8081-exec-6] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:21:36,287 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:21:36,287 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:21:36,287 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:21:36,287 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:21:36,287 TRACE [http-nio-8081-exec-6] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /receivers/create/
2024-07-09 23:21:36,287 TRACE [http-nio-8081-exec-6] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /receivers/create/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@5ce6e517
2024-07-09 23:21:36,288 TRACE [http-nio-8081-exec-6] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-09 23:21:36,288 TRACE [http-nio-8081-exec-6] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-09 23:21:36,288 DEBUG [http-nio-8081-exec-6] FilterChainProxy: Secured POST /receivers/create/
2024-07-09 23:21:36,293 TRACE [http-nio-8081-exec-6] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-09 23:21:36,293 ERROR [http-nio-8081-exec-6] [dispatcherServlet]: Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.IllegalArgumentException: To create binding, you need to specify person email or/and telegram username.] with root cause
java.lang.IllegalArgumentException: To create binding, you need to specify person email or/and telegram username.
	at org.example.emergency.service.impls.ReceiverServiceImpl.checkIfReceiverDoesNotExist(ReceiverServiceImpl.java:103)
	at org.example.emergency.service.impls.ReceiverServiceImpl.create(ReceiverServiceImpl.java:38)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.emergency.service.impls.ReceiverServiceImpl$$SpringCGLIB$$0.create(<generated>)
	at org.example.emergency.controller.ReceiverController.create(ReceiverController.java:23)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2024-07-09 23:21:36,294 TRACE [http-nio-8081-exec-6] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@5685184b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@667391ab, org.springframework.security.web.context.SecurityContextHolderFilter@27558dee, org.springframework.security.web.header.HeaderWriterFilter@5702232d, org.springframework.security.web.authentication.logout.LogoutFilter@20bc3e7f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@41c05747, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6f749a1f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@708c69de, org.springframework.security.web.access.ExceptionTranslationFilter@149fab7f, org.springframework.security.web.access.intercept.AuthorizationFilter@4f0381cd]] (1/1)
2024-07-09 23:21:36,294 DEBUG [http-nio-8081-exec-6] FilterChainProxy: Securing POST /error
2024-07-09 23:21:36,294 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:21:36,294 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:21:36,294 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:21:36,294 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:21:36,295 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:21:36,295 TRACE [http-nio-8081-exec-6] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:21:36,295 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:21:36,295 TRACE [http-nio-8081-exec-6] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:21:36,295 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:21:36,295 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:21:36,295 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:21:36,295 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:21:36,295 TRACE [http-nio-8081-exec-6] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /error
2024-07-09 23:21:36,295 TRACE [http-nio-8081-exec-6] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /error using org.springframework.security.authorization.AuthenticatedAuthorizationManager@5ce6e517
2024-07-09 23:21:36,295 TRACE [http-nio-8081-exec-6] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-09 23:21:36,296 TRACE [http-nio-8081-exec-6] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-09 23:21:36,296 DEBUG [http-nio-8081-exec-6] FilterChainProxy: Secured POST /error
2024-07-09 23:25:55,885 INFO [background-preinit] Version: HV000001: Hibernate Validator 8.0.1.Final
2024-07-09 23:25:55,911 INFO [main] EmergencyApplication: Starting EmergencyApplication using Java 17.0.10 with PID 17964 (D:\programming\java\emergency-ms\emergency\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-09 23:25:55,912 DEBUG [main] EmergencyApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-09 23:25:55,912 INFO [main] EmergencyApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-09 23:25:56,502 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-09 23:25:56,550 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 40 ms. Found 3 JPA repository interfaces.
2024-07-09 23:25:57,033 INFO [main] TomcatWebServer: Tomcat initialized with port 8081 (http)
2024-07-09 23:25:57,040 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8081"]
2024-07-09 23:25:57,042 INFO [main] StandardService: Starting service [Tomcat]
2024-07-09 23:25:57,042 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-09 23:25:57,090 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-09 23:25:57,092 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1147 ms
2024-07-09 23:25:57,284 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-09 23:25:57,397 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@18c880ea
2024-07-09 23:25:57,398 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-09 23:25:57,420 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_notifications_db (PostgreSQL 16.3)
2024-07-09 23:25:57,462 INFO [main] DbValidate: Successfully validated 2 migrations (execution time 00:00.023s)
2024-07-09 23:25:57,496 INFO [main] DbMigrate: Current version of schema "public": 1.1
2024-07-09 23:25:57,498 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-09 23:25:57,553 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-09 23:25:57,597 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-09 23:25:57,626 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-09 23:25:57,841 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-09 23:25:58,353 INFO [main] EntityInstantiatorPojoStandard: HHH000182: No default (no-argument) constructor for class: org.example.emergency.entity.EmergencyCall (class must be instantiated by Interceptor)
2024-07-09 23:25:58,535 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-09 23:25:58,536 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-09 23:25:58,776 TRACE [main] AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer: Eagerly initializing {securityConfig=org.example.emergency.config.SecurityConfig$$SpringCGLIB$$0@60493524}
2024-07-09 23:25:58,786 INFO [main] InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer: Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-07-09 23:25:58,787 WARN [main] InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer: Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-07-09 23:25:58,848 INFO [main] QueryEnhancerFactory: Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-09 23:25:58,883 WARN [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-09 23:25:59,064 DEBUG [main] DefaultSecurityFilterChain: Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-09 23:25:59,265 INFO [main] AdminClientConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-07-09 23:25:59,345 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-09 23:25:59,345 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-09 23:25:59,345 INFO [main] AppInfoParser: Kafka startTimeMs: 1720556759344
2024-07-09 23:25:59,587 INFO [kafka-admin-client-thread | emergency-admin-0] AppInfoParser: App info kafka.admin.client for emergency-admin-0 unregistered
2024-07-09 23:25:59,591 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics scheduler closed
2024-07-09 23:25:59,591 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-09 23:25:59,591 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics reporters closed
2024-07-09 23:25:59,594 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8081"]
2024-07-09 23:25:59,601 INFO [main] TomcatWebServer: Tomcat started on port 8081 (http) with context path '/'
2024-07-09 23:25:59,610 INFO [main] EmergencyApplication: Started EmergencyApplication in 3.974 seconds (process running for 4.335)
2024-07-09 23:26:04,575 INFO [http-nio-8081-exec-1] [/]: Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-09 23:26:04,575 INFO [http-nio-8081-exec-1] DispatcherServlet: Initializing Servlet 'dispatcherServlet'
2024-07-09 23:26:04,577 INFO [http-nio-8081-exec-1] DispatcherServlet: Completed initialization in 2 ms
2024-07-09 23:26:04,590 TRACE [http-nio-8081-exec-1] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@3531d51b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@42d7eeb6, org.springframework.security.web.context.SecurityContextHolderFilter@35920655, org.springframework.security.web.header.HeaderWriterFilter@28d74041, org.springframework.security.web.authentication.logout.LogoutFilter@dcf64d2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6108c962, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64455184, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@90810f4, org.springframework.security.web.access.ExceptionTranslationFilter@721f3526, org.springframework.security.web.access.intercept.AuthorizationFilter@3393aa46]] (1/1)
2024-07-09 23:26:04,590 DEBUG [http-nio-8081-exec-1] FilterChainProxy: Securing POST /authentication/login/
2024-07-09 23:26:04,590 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:26:04,590 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:26:04,592 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:26:04,593 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:26:04,594 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:26:04,594 TRACE [http-nio-8081-exec-1] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:26:04,594 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:26:04,594 TRACE [http-nio-8081-exec-1] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:26:04,594 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:26:04,595 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:26:04,595 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:26:04,595 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:26:04,595 TRACE [http-nio-8081-exec-1] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /authentication/login/
2024-07-09 23:26:04,596 TRACE [http-nio-8081-exec-1] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /authentication/login/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@13664b5d
2024-07-09 23:26:04,596 TRACE [http-nio-8081-exec-1] HttpSessionSecurityContextRepository: No HttpSession currently exists
2024-07-09 23:26:04,596 TRACE [http-nio-8081-exec-1] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-09 23:26:04,596 TRACE [http-nio-8081-exec-1] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-09 23:26:04,597 TRACE [http-nio-8081-exec-1] AnonymousAuthenticationFilter: Set SecurityContextHolder to AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]]
2024-07-09 23:26:04,597 DEBUG [http-nio-8081-exec-1] FilterChainProxy: Secured POST /authentication/login/
2024-07-09 23:26:04,672 TRACE [http-nio-8081-exec-1] ProviderManager: Authenticating request with DaoAuthenticationProvider (1/1)
2024-07-09 23:26:04,897 DEBUG [http-nio-8081-exec-1] DaoAuthenticationProvider: Authenticated user
2024-07-09 23:26:04,916 DEBUG [http-nio-8081-exec-1] HttpSessionSecurityContextRepository: Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@7ea5c53]
2024-07-09 23:26:04,933 TRACE [http-nio-8081-exec-1] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-09 23:26:10,345 TRACE [http-nio-8081-exec-3] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@3531d51b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@42d7eeb6, org.springframework.security.web.context.SecurityContextHolderFilter@35920655, org.springframework.security.web.header.HeaderWriterFilter@28d74041, org.springframework.security.web.authentication.logout.LogoutFilter@dcf64d2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6108c962, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64455184, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@90810f4, org.springframework.security.web.access.ExceptionTranslationFilter@721f3526, org.springframework.security.web.access.intercept.AuthorizationFilter@3393aa46]] (1/1)
2024-07-09 23:26:10,346 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Securing POST /receivers/create/
2024-07-09 23:26:10,346 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:26:10,346 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:26:10,346 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:26:10,346 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:26:10,346 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:26:10,346 TRACE [http-nio-8081-exec-3] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:26:10,346 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:26:10,346 TRACE [http-nio-8081-exec-3] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:26:10,346 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:26:10,346 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:26:10,346 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:26:10,346 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:26:10,346 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /receivers/create/
2024-07-09 23:26:10,347 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /receivers/create/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@59a89711
2024-07-09 23:26:10,347 TRACE [http-nio-8081-exec-3] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-09 23:26:10,347 TRACE [http-nio-8081-exec-3] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-09 23:26:10,347 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Secured POST /receivers/create/
2024-07-09 23:26:10,376 INFO [http-nio-8081-exec-3] ProducerConfig: ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092, localhost:9094]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 10000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 5000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2024-07-09 23:26:10,392 INFO [http-nio-8081-exec-3] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-09 23:26:10,399 INFO [http-nio-8081-exec-3] KafkaProducer: [Producer clientId=emergency-producer-1] Instantiated an idempotent producer.
2024-07-09 23:26:10,412 INFO [http-nio-8081-exec-3] AppInfoParser: Kafka version: 3.7.0
2024-07-09 23:26:10,412 INFO [http-nio-8081-exec-3] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-09 23:26:10,412 INFO [http-nio-8081-exec-3] AppInfoParser: Kafka startTimeMs: 1720556770412
2024-07-09 23:26:10,419 INFO [kafka-producer-network-thread | emergency-producer-1] Metadata: [Producer clientId=emergency-producer-1] Cluster ID: z6enREWhQpW0SJQoB6P-dw
2024-07-09 23:26:10,421 INFO [kafka-producer-network-thread | emergency-producer-1] TransactionManager: [Producer clientId=emergency-producer-1] ProducerId set to 2001 with epoch 0
2024-07-09 23:26:10,444 TRACE [http-nio-8081-exec-3] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-09 23:31:07,431 INFO [background-preinit] Version: HV000001: Hibernate Validator 8.0.1.Final
2024-07-09 23:31:07,461 INFO [main] EmergencyApplication: Starting EmergencyApplication using Java 17.0.10 with PID 14460 (D:\programming\java\emergency-ms\emergency\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-09 23:31:07,462 DEBUG [main] EmergencyApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-09 23:31:07,462 INFO [main] EmergencyApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-09 23:31:08,012 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-09 23:31:08,068 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 48 ms. Found 3 JPA repository interfaces.
2024-07-09 23:31:08,564 INFO [main] TomcatWebServer: Tomcat initialized with port 8081 (http)
2024-07-09 23:31:08,572 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8081"]
2024-07-09 23:31:08,574 INFO [main] StandardService: Starting service [Tomcat]
2024-07-09 23:31:08,574 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-09 23:31:08,628 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-09 23:31:08,629 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1137 ms
2024-07-09 23:31:08,816 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-09 23:31:08,945 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5ac044ef
2024-07-09 23:31:08,947 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-09 23:31:08,980 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_notifications_db (PostgreSQL 16.3)
2024-07-09 23:31:09,013 INFO [main] DbValidate: Successfully validated 2 migrations (execution time 00:00.021s)
2024-07-09 23:31:09,048 INFO [main] DbMigrate: Current version of schema "public": 1.1
2024-07-09 23:31:09,049 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-09 23:31:09,105 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-09 23:31:09,150 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-09 23:31:09,175 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-09 23:31:09,412 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-09 23:31:09,974 INFO [main] EntityInstantiatorPojoStandard: HHH000182: No default (no-argument) constructor for class: org.example.emergency.entity.EmergencyCall (class must be instantiated by Interceptor)
2024-07-09 23:31:10,158 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-09 23:31:10,160 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-09 23:31:10,390 TRACE [main] AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer: Eagerly initializing {securityConfig=org.example.emergency.config.SecurityConfig$$SpringCGLIB$$0@1da5635e}
2024-07-09 23:31:10,405 INFO [main] InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer: Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-07-09 23:31:10,405 WARN [main] InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer: Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-07-09 23:31:10,478 INFO [main] QueryEnhancerFactory: Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-09 23:31:10,487 WARN [main] AnnotationConfigServletWebServerApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'receiverController' defined in file [D:\programming\java\emergency-ms\emergency\build\classes\java\main\org\example\emergency\controller\ReceiverController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'receiverServiceImpl' defined in file [D:\programming\java\emergency-ms\emergency\build\classes\java\main\org\example\emergency\service\impls\ReceiverServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 5: No qualifying bean of type 'java.lang.String' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2024-07-09 23:31:10,488 INFO [main] LocalContainerEntityManagerFactoryBean: Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-09 23:31:10,490 INFO [main] HikariDataSource: HikariPool-1 - Shutdown initiated...
2024-07-09 23:31:10,493 INFO [main] HikariDataSource: HikariPool-1 - Shutdown completed.
2024-07-09 23:31:10,494 INFO [main] StandardService: Stopping service [Tomcat]
2024-07-09 23:31:10,504 INFO [main] ConditionEvaluationReportLogger: 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-07-09 23:31:10,516 ERROR [main] LoggingFailureAnalysisReporter: 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 5 of constructor in org.example.emergency.service.impls.ReceiverServiceImpl required a bean of type 'java.lang.String' that could not be found.


Action:

Consider defining a bean of type 'java.lang.String' in your configuration.

2024-07-09 23:32:32,124 INFO [background-preinit] Version: HV000001: Hibernate Validator 8.0.1.Final
2024-07-09 23:32:32,154 INFO [main] EmergencyApplication: Starting EmergencyApplication using Java 17.0.10 with PID 17540 (D:\programming\java\emergency-ms\emergency\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-09 23:32:32,154 DEBUG [main] EmergencyApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-09 23:32:32,156 INFO [main] EmergencyApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-09 23:32:32,738 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-09 23:32:32,786 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 42 ms. Found 3 JPA repository interfaces.
2024-07-09 23:32:33,271 INFO [main] TomcatWebServer: Tomcat initialized with port 8081 (http)
2024-07-09 23:32:33,278 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8081"]
2024-07-09 23:32:33,280 INFO [main] StandardService: Starting service [Tomcat]
2024-07-09 23:32:33,280 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-09 23:32:33,330 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-09 23:32:33,331 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1142 ms
2024-07-09 23:32:33,519 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-09 23:32:33,646 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@18c880ea
2024-07-09 23:32:33,648 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-09 23:32:33,671 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_notifications_db (PostgreSQL 16.3)
2024-07-09 23:32:33,709 INFO [main] DbValidate: Successfully validated 2 migrations (execution time 00:00.025s)
2024-07-09 23:32:33,748 INFO [main] DbMigrate: Current version of schema "public": 1.1
2024-07-09 23:32:33,750 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-09 23:32:33,810 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-09 23:32:33,851 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-09 23:32:33,880 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-09 23:32:34,113 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-09 23:32:34,613 INFO [main] EntityInstantiatorPojoStandard: HHH000182: No default (no-argument) constructor for class: org.example.emergency.entity.EmergencyCall (class must be instantiated by Interceptor)
2024-07-09 23:32:34,806 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-09 23:32:34,807 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-09 23:32:35,045 TRACE [main] AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer: Eagerly initializing {securityConfig=org.example.emergency.config.SecurityConfig$$SpringCGLIB$$0@60493524}
2024-07-09 23:32:35,056 INFO [main] InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer: Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-07-09 23:32:35,057 WARN [main] InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer: Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-07-09 23:32:35,132 INFO [main] QueryEnhancerFactory: Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-09 23:32:35,165 WARN [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-09 23:32:35,345 DEBUG [main] DefaultSecurityFilterChain: Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-09 23:32:35,543 INFO [main] AdminClientConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-07-09 23:32:35,623 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-09 23:32:35,624 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-09 23:32:35,624 INFO [main] AppInfoParser: Kafka startTimeMs: 1720557155622
2024-07-09 23:32:35,823 INFO [kafka-admin-client-thread | emergency-admin-0] AppInfoParser: App info kafka.admin.client for emergency-admin-0 unregistered
2024-07-09 23:32:35,825 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics scheduler closed
2024-07-09 23:32:35,825 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-09 23:32:35,825 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics reporters closed
2024-07-09 23:32:35,828 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8081"]
2024-07-09 23:32:35,836 INFO [main] TomcatWebServer: Tomcat started on port 8081 (http) with context path '/'
2024-07-09 23:32:35,843 INFO [main] EmergencyApplication: Started EmergencyApplication in 3.965 seconds (process running for 4.335)
2024-07-09 23:32:41,825 INFO [http-nio-8081-exec-2] [/]: Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-09 23:32:41,825 INFO [http-nio-8081-exec-2] DispatcherServlet: Initializing Servlet 'dispatcherServlet'
2024-07-09 23:32:41,826 INFO [http-nio-8081-exec-2] DispatcherServlet: Completed initialization in 1 ms
2024-07-09 23:32:41,839 TRACE [http-nio-8081-exec-2] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@67657a67, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@73d6b018, org.springframework.security.web.context.SecurityContextHolderFilter@27558dee, org.springframework.security.web.header.HeaderWriterFilter@5702232d, org.springframework.security.web.authentication.logout.LogoutFilter@20bc3e7f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@41c05747, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6f749a1f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@697fa973, org.springframework.security.web.access.ExceptionTranslationFilter@149fab7f, org.springframework.security.web.access.intercept.AuthorizationFilter@4f0381cd]] (1/1)
2024-07-09 23:32:41,840 DEBUG [http-nio-8081-exec-2] FilterChainProxy: Securing POST /receivers/create/
2024-07-09 23:32:41,840 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:32:41,841 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:32:41,842 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:32:41,843 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:32:41,843 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:32:41,844 TRACE [http-nio-8081-exec-2] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:32:41,844 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:32:41,844 TRACE [http-nio-8081-exec-2] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:32:41,844 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:32:41,844 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:32:41,845 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:32:41,845 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:32:41,845 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /receivers/create/
2024-07-09 23:32:41,846 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /receivers/create/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@3d10c10c
2024-07-09 23:32:41,846 TRACE [http-nio-8081-exec-2] HttpSessionSecurityContextRepository: No HttpSession currently exists
2024-07-09 23:32:41,846 TRACE [http-nio-8081-exec-2] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-09 23:32:41,846 TRACE [http-nio-8081-exec-2] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-09 23:32:41,847 TRACE [http-nio-8081-exec-2] AnonymousAuthenticationFilter: Set SecurityContextHolder to AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]]
2024-07-09 23:32:41,847 TRACE [http-nio-8081-exec-2] ExceptionTranslationFilter: Sending AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]] to authentication entry point since access is denied
org.springframework.security.access.AccessDeniedException: Access Denied
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:98)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2024-07-09 23:32:41,870 DEBUG [http-nio-8081-exec-2] HttpSessionRequestCache: Saved request http://localhost:8081/receivers/create/?continue to session
2024-07-09 23:32:41,870 DEBUG [http-nio-8081-exec-2] Http403ForbiddenEntryPoint: Pre-authenticated entry point called. Rejecting access
2024-07-09 23:32:41,870 TRACE [http-nio-8081-exec-2] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-09 23:32:41,875 TRACE [http-nio-8081-exec-2] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@67657a67, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@73d6b018, org.springframework.security.web.context.SecurityContextHolderFilter@27558dee, org.springframework.security.web.header.HeaderWriterFilter@5702232d, org.springframework.security.web.authentication.logout.LogoutFilter@20bc3e7f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@41c05747, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6f749a1f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@697fa973, org.springframework.security.web.access.ExceptionTranslationFilter@149fab7f, org.springframework.security.web.access.intercept.AuthorizationFilter@4f0381cd]] (1/1)
2024-07-09 23:32:41,876 DEBUG [http-nio-8081-exec-2] FilterChainProxy: Securing POST /error
2024-07-09 23:32:41,876 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:32:41,876 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:32:41,876 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:32:41,876 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:32:41,876 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:32:41,876 TRACE [http-nio-8081-exec-2] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:32:41,876 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:32:41,876 TRACE [http-nio-8081-exec-2] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:32:41,876 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:32:41,876 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:32:41,876 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:32:41,876 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:32:41,876 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /error
2024-07-09 23:32:41,876 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /error using org.springframework.security.authorization.AuthenticatedAuthorizationManager@3d10c10c
2024-07-09 23:32:41,876 TRACE [http-nio-8081-exec-2] HttpSessionSecurityContextRepository: Did not find SecurityContext in HttpSession 3E8915DBC11B690B05693870979398C2 using the SPRING_SECURITY_CONTEXT session attribute
2024-07-09 23:32:41,876 TRACE [http-nio-8081-exec-2] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-09 23:32:41,877 TRACE [http-nio-8081-exec-2] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-09 23:32:41,877 TRACE [http-nio-8081-exec-2] AnonymousAuthenticationFilter: Set SecurityContextHolder to AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=3E8915DBC11B690B05693870979398C2], Granted Authorities=[ROLE_ANONYMOUS]]
2024-07-09 23:32:41,877 TRACE [http-nio-8081-exec-2] ExceptionTranslationFilter: Sending AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=3E8915DBC11B690B05693870979398C2], Granted Authorities=[ROLE_ANONYMOUS]] to authentication entry point since access is denied
org.springframework.security.access.AccessDeniedException: Access Denied
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:98)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:632)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:410)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:330)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:267)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:362)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:222)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2024-07-09 23:32:41,877 DEBUG [http-nio-8081-exec-2] HttpSessionRequestCache: Saved request http://localhost:8081/error?continue to session
2024-07-09 23:32:41,877 DEBUG [http-nio-8081-exec-2] Http403ForbiddenEntryPoint: Pre-authenticated entry point called. Rejecting access
2024-07-09 23:32:48,257 TRACE [http-nio-8081-exec-3] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@67657a67, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@73d6b018, org.springframework.security.web.context.SecurityContextHolderFilter@27558dee, org.springframework.security.web.header.HeaderWriterFilter@5702232d, org.springframework.security.web.authentication.logout.LogoutFilter@20bc3e7f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@41c05747, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6f749a1f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@697fa973, org.springframework.security.web.access.ExceptionTranslationFilter@149fab7f, org.springframework.security.web.access.intercept.AuthorizationFilter@4f0381cd]] (1/1)
2024-07-09 23:32:48,257 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Securing POST /authentication/login/
2024-07-09 23:32:48,257 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:32:48,257 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:32:48,257 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:32:48,257 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:32:48,257 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:32:48,257 TRACE [http-nio-8081-exec-3] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:32:48,257 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:32:48,257 TRACE [http-nio-8081-exec-3] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:32:48,257 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:32:48,257 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:32:48,257 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:32:48,258 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:32:48,258 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /authentication/login/
2024-07-09 23:32:48,258 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /authentication/login/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@234d700b
2024-07-09 23:32:48,258 TRACE [http-nio-8081-exec-3] HttpSessionSecurityContextRepository: Did not find SecurityContext in HttpSession 3E8915DBC11B690B05693870979398C2 using the SPRING_SECURITY_CONTEXT session attribute
2024-07-09 23:32:48,258 TRACE [http-nio-8081-exec-3] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-09 23:32:48,258 TRACE [http-nio-8081-exec-3] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-09 23:32:48,258 TRACE [http-nio-8081-exec-3] AnonymousAuthenticationFilter: Set SecurityContextHolder to AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=3E8915DBC11B690B05693870979398C2], Granted Authorities=[ROLE_ANONYMOUS]]
2024-07-09 23:32:48,258 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Secured POST /authentication/login/
2024-07-09 23:32:48,311 TRACE [http-nio-8081-exec-3] ProviderManager: Authenticating request with DaoAuthenticationProvider (1/1)
2024-07-09 23:32:48,535 DEBUG [http-nio-8081-exec-3] DaoAuthenticationProvider: Authenticated user
2024-07-09 23:32:48,536 DEBUG [http-nio-8081-exec-3] HttpSessionSecurityContextRepository: Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@4423fbec]
2024-07-09 23:32:48,552 TRACE [http-nio-8081-exec-3] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-09 23:32:52,017 TRACE [http-nio-8081-exec-4] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@67657a67, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@73d6b018, org.springframework.security.web.context.SecurityContextHolderFilter@27558dee, org.springframework.security.web.header.HeaderWriterFilter@5702232d, org.springframework.security.web.authentication.logout.LogoutFilter@20bc3e7f, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@41c05747, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6f749a1f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@697fa973, org.springframework.security.web.access.ExceptionTranslationFilter@149fab7f, org.springframework.security.web.access.intercept.AuthorizationFilter@4f0381cd]] (1/1)
2024-07-09 23:32:52,017 DEBUG [http-nio-8081-exec-4] FilterChainProxy: Securing POST /receivers/create/
2024-07-09 23:32:52,017 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:32:52,017 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:32:52,017 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:32:52,017 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:32:52,017 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:32:52,017 TRACE [http-nio-8081-exec-4] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:32:52,018 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:32:52,018 TRACE [http-nio-8081-exec-4] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:32:52,018 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:32:52,018 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:32:52,018 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:32:52,018 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:32:52,018 TRACE [http-nio-8081-exec-4] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /receivers/create/
2024-07-09 23:32:52,018 TRACE [http-nio-8081-exec-4] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /receivers/create/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@3d10c10c
2024-07-09 23:32:52,018 TRACE [http-nio-8081-exec-4] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-09 23:32:52,019 TRACE [http-nio-8081-exec-4] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-09 23:32:52,019 DEBUG [http-nio-8081-exec-4] FilterChainProxy: Secured POST /receivers/create/
2024-07-09 23:32:52,051 INFO [http-nio-8081-exec-4] ProducerConfig: ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092, localhost:9094]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 10000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 5000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2024-07-09 23:32:52,067 INFO [http-nio-8081-exec-4] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-09 23:32:52,074 INFO [http-nio-8081-exec-4] KafkaProducer: [Producer clientId=emergency-producer-1] Instantiated an idempotent producer.
2024-07-09 23:32:52,087 INFO [http-nio-8081-exec-4] AppInfoParser: Kafka version: 3.7.0
2024-07-09 23:32:52,087 INFO [http-nio-8081-exec-4] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-09 23:32:52,087 INFO [http-nio-8081-exec-4] AppInfoParser: Kafka startTimeMs: 1720557172087
2024-07-09 23:32:52,094 INFO [kafka-producer-network-thread | emergency-producer-1] Metadata: [Producer clientId=emergency-producer-1] Cluster ID: z6enREWhQpW0SJQoB6P-dw
2024-07-09 23:32:52,117 TRACE [http-nio-8081-exec-4] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-09 23:32:52,201 INFO [kafka-producer-network-thread | emergency-producer-1] TransactionManager: [Producer clientId=emergency-producer-1] ProducerId set to 3000 with epoch 0
2024-07-09 23:32:52,227 INFO [kafka-producer-network-thread | emergency-producer-1] ReceiverServiceImpl: Message send successfully: telegram-receiver-user-request-topic-2@0
2024-07-09 23:34:24,861 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-09 23:34:24,861 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node -1 disconnected.
2024-07-09 23:34:24,861 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-09 23:34:24,861 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Cancelled in-flight FETCH request with correlation id 25163 due to node 1 being disconnected (elapsed time since creation: 3ms, elapsed time since send: 3ms, request timeout: 30000ms)
2024-07-09 23:34:24,861 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Cancelled in-flight FETCH request with correlation id 31516 due to node 1 being disconnected (elapsed time since creation: 3ms, elapsed time since send: 3ms, request timeout: 30000ms)
2024-07-09 23:34:24,862 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=374865739, epoch=20961) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:24,863 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-09 23:34:24,862 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=805244395, epoch=21970) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:25,025 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-09 23:34:25,025 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:25,026 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=374865739, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:25,289 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-09 23:34:25,290 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:25,290 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=805244395, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:25,305 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-09 23:34:25,306 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:25,306 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=374865739, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:25,632 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-09 23:34:25,633 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:25,633 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=805244395, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:25,819 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-09 23:34:25,819 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:25,819 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=374865739, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:26,304 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-09 23:34:26,304 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:26,304 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=805244395, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:26,319 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-09 23:34:26,319 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:26,319 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=374865739, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:26,726 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-09 23:34:26,726 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:26,727 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=805244395, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:27,350 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-09 23:34:27,350 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:27,350 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=374865739, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:27,567 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-09 23:34:27,568 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:27,568 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=805244395, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:28,367 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-09 23:34:28,367 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:28,367 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=374865739, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:28,853 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-09 23:34:28,853 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:28,853 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=805244395, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:29,370 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-09 23:34:29,371 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:29,371 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=374865739, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:29,859 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-09 23:34:29,860 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:29,860 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=805244395, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:30,345 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-09 23:34:30,346 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:30,346 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=374865739, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:30,876 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-09 23:34:30,876 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:30,876 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=805244395, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:31,390 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-09 23:34:31,390 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:31,390 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=374865739, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:31,889 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-09 23:34:31,890 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:31,890 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=805244395, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:32,409 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-09 23:34:32,409 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:32,409 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=374865739, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:32,910 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-09 23:34:32,911 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:32,911 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=805244395, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:33,071 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:33,071 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Cancelled in-flight FETCH request with correlation id 31569 due to node 2 being disconnected (elapsed time since creation: 145ms, elapsed time since send: 145ms, request timeout: 30000ms)
2024-07-09 23:34:33,071 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=1009925070, epoch=4401) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:33,071 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 2 disconnected.
2024-07-09 23:34:33,071 INFO [kafka-coordinator-heartbeat-thread | email-notification-created-topic] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2147483645 disconnected.
2024-07-09 23:34:33,071 INFO [kafka-coordinator-heartbeat-thread | email-notification-created-topic] ConsumerCoordinator: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Group coordinator localhost:9094 (id: 2147483645 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: true. Rediscovery will be attempted.
2024-07-09 23:34:33,072 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2147483644 disconnected.
2024-07-09 23:34:33,072 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:33,072 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Cancelled in-flight FETCH request with correlation id 31567 due to node 3 being disconnected (elapsed time since creation: 162ms, elapsed time since send: 162ms, request timeout: 30000ms)
2024-07-09 23:34:33,072 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Cancelled in-flight FIND_COORDINATOR request with correlation id 31570 due to node 3 being disconnected (elapsed time since creation: 1ms, elapsed time since send: 1ms, request timeout: 30000ms)
2024-07-09 23:34:33,072 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=1034510666, epoch=4402) to node 3:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:33,072 INFO [kafka-coordinator-heartbeat-thread | telegram-notification-created-topic] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:33,072 INFO [kafka-coordinator-heartbeat-thread | telegram-notification-created-topic] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Cancelled in-flight FETCH request with correlation id 25200 due to node 3 being disconnected (elapsed time since creation: 146ms, elapsed time since send: 146ms, request timeout: 30000ms)
2024-07-09 23:34:33,072 INFO [kafka-coordinator-heartbeat-thread | telegram-notification-created-topic] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=1752352849, epoch=3586) to node 3:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:33,073 INFO [kafka-coordinator-heartbeat-thread | telegram-notification-created-topic] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Group coordinator localhost:9096 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: true. Rediscovery will be attempted.
2024-07-09 23:34:33,073 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 3 disconnected.
2024-07-09 23:34:33,074 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:33,074 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node -2 disconnected.
2024-07-09 23:34:33,075 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:33,075 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:33,177 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-09 23:34:33,178 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:33,178 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 2 disconnected.
2024-07-09 23:34:33,178 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:33,424 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:33,424 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:33,429 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 3 disconnected.
2024-07-09 23:34:33,431 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:33,525 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:33,525 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:33,727 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:33,727 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:33,806 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-09 23:34:33,806 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:33,806 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=374865739, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:33,871 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-09 23:34:33,871 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:33,902 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:33,903 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:33,918 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:33,918 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:34,011 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:34,011 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:34,126 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:34,126 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:34,150 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:34,150 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:34,215 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:34,215 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:34,637 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 2 disconnected.
2024-07-09 23:34:34,637 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:34,638 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 3 disconnected.
2024-07-09 23:34:34,638 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:34,653 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:34,653 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:34,792 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-09 23:34:34,794 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:34,855 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 2 disconnected.
2024-07-09 23:34:34,855 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:34,870 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:34,870 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:34,979 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:34,979 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:35,228 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:35,228 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:35,416 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:35,416 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:35,417 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:35,417 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:35,775 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:35,775 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:35,870 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 3 disconnected.
2024-07-09 23:34:35,871 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:36,106 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:36,106 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:36,784 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:36,784 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:36,878 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-09 23:34:36,879 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:37,115 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:37,115 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:37,581 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-09 23:34:37,582 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:37,582 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:37,582 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:37,582 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=1034510666, epoch=INITIAL) to node 3:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:37,582 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=805244395, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:37,787 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:37,787 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:37,882 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 2 disconnected.
2024-07-09 23:34:37,883 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:37,993 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:37,993 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:38,119 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:38,120 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:38,796 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:38,796 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:38,812 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-09 23:34:38,812 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:38,813 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=374865739, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:38,891 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 3 disconnected.
2024-07-09 23:34:38,891 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:39,127 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:39,127 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:39,783 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:39,783 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:39,799 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:39,799 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:39,893 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-09 23:34:39,893 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:40,003 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:40,003 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:40,129 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:40,129 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:40,803 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:40,803 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:40,897 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 2 disconnected.
2024-07-09 23:34:40,897 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:41,133 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:41,133 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:41,680 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:41,681 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:41,805 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:41,805 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:41,899 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 3 disconnected.
2024-07-09 23:34:41,899 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:42,136 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:42,137 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:42,591 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-09 23:34:42,591 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:42,592 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=805244395, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:42,703 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:42,703 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:42,906 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-09 23:34:42,906 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:43,141 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:43,141 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:43,709 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:43,709 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:43,821 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-09 23:34:43,822 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:43,822 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:43,822 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:43,822 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=1752352849, epoch=INITIAL) to node 3:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:43,822 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=374865739, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:43,916 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 2 disconnected.
2024-07-09 23:34:43,916 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:44,151 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:44,151 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:44,657 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:44,657 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:44,719 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:44,719 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:44,925 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 3 disconnected.
2024-07-09 23:34:44,925 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:45,034 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:45,034 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:45,161 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:45,161 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:45,599 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:45,599 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:45,931 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-09 23:34:45,932 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:46,167 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:46,167 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:46,480 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:46,480 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:46,607 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:46,607 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:46,936 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 2 disconnected.
2024-07-09 23:34:46,937 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:47,046 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:47,046 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:47,171 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:47,172 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:47,596 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-09 23:34:47,597 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:47,597 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:47,597 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:47,597 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=1009925070, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:47,597 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=805244395, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:47,686 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:47,686 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:47,944 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 3 disconnected.
2024-07-09 23:34:47,945 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:48,179 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:48,179 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:48,701 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:48,701 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:48,827 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=1752352849, epoch=INITIAL) to node 3:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:48,827 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-09 23:34:48,827 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:48,827 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=374865739, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:48,828 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:48,828 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:48,951 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-09 23:34:48,951 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:49,205 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:49,205 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:49,707 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:49,707 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:49,962 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 2 disconnected.
2024-07-09 23:34:49,962 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:50,071 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:50,071 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:50,684 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:50,684 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:50,968 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 3 disconnected.
2024-07-09 23:34:50,969 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:51,080 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:51,080 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:51,695 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:51,695 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:51,980 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-09 23:34:51,980 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:52,091 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:52,091 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:52,612 INFO [kafka-coordinator-heartbeat-thread | email-notification-created-topic] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=1009925070, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:52,612 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=805244395, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:52,613 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:52,613 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:52,712 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:52,712 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:52,993 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 2 disconnected.
2024-07-09 23:34:52,994 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:53,103 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:53,103 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:53,700 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:53,700 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:53,843 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-09 23:34:53,844 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:53,844 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:53,844 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:53,844 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=1752352849, epoch=INITIAL) to node 3:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:53,844 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=374865739, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:53,858 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 3 disconnected.
2024-07-09 23:34:53,858 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:53,998 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-09 23:34:53,999 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:54,138 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:54,138 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:54,707 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:54,707 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:55,003 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 2 disconnected.
2024-07-09 23:34:55,003 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:55,114 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:55,114 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:55,114 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:55,114 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:55,583 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:55,584 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:55,754 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:55,754 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:56,006 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 3 disconnected.
2024-07-09 23:34:56,006 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:56,118 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:56,118 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:56,654 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:56,654 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:56,763 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:56,763 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:57,015 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-09 23:34:57,016 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:57,128 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:57,128 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:57,619 INFO [kafka-coordinator-heartbeat-thread | email-notification-created-topic] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=805244395, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:57,763 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:57,764 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:58,030 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 2 disconnected.
2024-07-09 23:34:58,031 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:58,139 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:58,139 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:58,725 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:58,726 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:58,852 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-09 23:34:58,853 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:34:58,853 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-09 23:34:58,853 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:58,853 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=1752352849, epoch=INITIAL) to node 3:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:58,853 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=374865739, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:34:58,961 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 3 disconnected.
2024-07-09 23:34:58,961 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:34:59,104 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:59,104 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:59,733 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-09 23:34:59,733 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:34:59,967 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-09 23:34:59,968 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:35:00,107 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-09 23:35:00,107 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:35:00,721 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-09 23:35:00,721 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:35:00,722 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-09 23:35:00,722 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:35:00,974 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 2 disconnected.
2024-07-09 23:35:00,974 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:35:01,116 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-09 23:35:01,116 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:35:01,555 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-09 23:35:01,555 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:35:01,965 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 3 disconnected.
2024-07-09 23:35:01,965 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:35:02,058 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-09 23:35:02,059 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:35:02,121 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-09 23:35:02,121 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:35:02,560 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-09 23:35:02,560 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:35:02,624 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-09 23:35:02,624 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:35:02,624 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-09 23:35:02,624 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:35:02,625 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=1009925070, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:35:02,625 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=805244395, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:35:02,971 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-09 23:35:02,972 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:35:03,127 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-09 23:35:03,128 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:35:03,565 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-09 23:35:03,565 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:35:03,863 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-09 23:35:03,863 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:35:03,864 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=374865739, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-09 23:35:03,973 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 2 disconnected.
2024-07-09 23:35:03,973 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:35:04,035 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-09 23:35:04,035 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:35:04,445 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-09 23:35:04,445 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:35:04,569 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-09 23:35:04,569 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:35:04,912 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-09 23:35:04,912 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:35:04,975 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 3 disconnected.
2024-07-09 23:35:04,975 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:35:05,038 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-09 23:35:05,038 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:35:05,511 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-09 23:35:05,511 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-09 23:35:05,981 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-09 23:35:05,981 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-09 23:35:06,043 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-09 23:35:06,043 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:35:06,390 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-09 23:35:06,390 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-09 23:41:12,059 INFO [background-preinit] Version: HV000001: Hibernate Validator 8.0.1.Final
2024-07-09 23:41:12,087 INFO [main] EmergencyApplication: Starting EmergencyApplication using Java 17.0.10 with PID 13276 (D:\programming\java\emergency-ms\emergency\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-09 23:41:12,087 DEBUG [main] EmergencyApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-09 23:41:12,088 INFO [main] EmergencyApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-09 23:41:12,641 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-09 23:41:12,697 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 50 ms. Found 3 JPA repository interfaces.
2024-07-09 23:41:13,182 INFO [main] TomcatWebServer: Tomcat initialized with port 8081 (http)
2024-07-09 23:41:13,191 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8081"]
2024-07-09 23:41:13,193 INFO [main] StandardService: Starting service [Tomcat]
2024-07-09 23:41:13,193 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-09 23:41:13,240 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-09 23:41:13,241 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1124 ms
2024-07-09 23:41:13,429 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-09 23:41:13,673 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@167a21b
2024-07-09 23:41:13,675 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-09 23:41:13,701 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_notifications_db (PostgreSQL 16.3)
2024-07-09 23:41:13,744 INFO [main] DbValidate: Successfully validated 2 migrations (execution time 00:00.026s)
2024-07-09 23:41:13,787 INFO [main] DbMigrate: Current version of schema "public": 1.1
2024-07-09 23:41:13,789 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-09 23:41:13,848 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-09 23:41:13,895 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-09 23:41:13,923 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-09 23:41:14,160 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-09 23:41:14,719 INFO [main] EntityInstantiatorPojoStandard: HHH000182: No default (no-argument) constructor for class: org.example.emergency.entity.EmergencyCall (class must be instantiated by Interceptor)
2024-07-09 23:41:14,913 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-09 23:41:14,915 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-09 23:41:15,161 TRACE [main] AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer: Eagerly initializing {securityConfig=org.example.emergency.config.SecurityConfig$$SpringCGLIB$$0@7ec729be}
2024-07-09 23:41:15,173 INFO [main] InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer: Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-07-09 23:41:15,174 WARN [main] InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer: Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-07-09 23:41:15,235 INFO [main] QueryEnhancerFactory: Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-09 23:41:15,269 WARN [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-09 23:41:15,463 DEBUG [main] DefaultSecurityFilterChain: Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-09 23:41:15,668 INFO [main] AdminClientConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-07-09 23:41:15,745 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-09 23:41:15,745 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-09 23:41:15,745 INFO [main] AppInfoParser: Kafka startTimeMs: 1720557675743
2024-07-09 23:41:15,996 INFO [kafka-admin-client-thread | emergency-admin-0] AppInfoParser: App info kafka.admin.client for emergency-admin-0 unregistered
2024-07-09 23:41:16,000 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics scheduler closed
2024-07-09 23:41:16,000 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-09 23:41:16,000 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics reporters closed
2024-07-09 23:41:16,003 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8081"]
2024-07-09 23:41:16,012 INFO [main] TomcatWebServer: Tomcat started on port 8081 (http) with context path '/'
2024-07-09 23:41:16,018 INFO [main] EmergencyApplication: Started EmergencyApplication in 4.225 seconds (process running for 4.593)
2024-07-09 23:41:20,948 INFO [background-preinit] Version: HV000001: Hibernate Validator 8.0.1.Final
2024-07-09 23:41:20,982 INFO [main] EmailNotificationsApplication: Starting EmailNotificationsApplication using Java 17.0.10 with PID 8324 (D:\programming\java\emergency-ms\email-notifications\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-09 23:41:20,983 DEBUG [main] EmailNotificationsApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-09 23:41:20,983 INFO [main] EmailNotificationsApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-09 23:41:21,763 INFO [main] TomcatWebServer: Tomcat initialized with port 8082 (http)
2024-07-09 23:41:21,769 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8082"]
2024-07-09 23:41:21,771 INFO [main] StandardService: Starting service [Tomcat]
2024-07-09 23:41:21,771 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-09 23:41:21,816 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-09 23:41:21,817 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 806 ms
2024-07-09 23:41:22,487 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8082"]
2024-07-09 23:41:22,498 INFO [main] TomcatWebServer: Tomcat started on port 8082 (http) with context path '/'
2024-07-09 23:41:22,540 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092, localhost:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-email-notification-created-topic-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = email-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-09 23:41:22,573 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-09 23:41:22,687 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-09 23:41:22,688 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-09 23:41:22,688 INFO [main] AppInfoParser: Kafka startTimeMs: 1720557682687
2024-07-09 23:41:22,690 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Subscribed to topic(s): email-notification-created-topic
2024-07-09 23:41:22,700 INFO [main] EmailNotificationsApplication: Started EmailNotificationsApplication in 1.973 seconds (process running for 2.322)
2024-07-09 23:41:22,935 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metadata: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-09 23:41:23,318 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Discovered group coordinator localhost:9096 (id: 2147483644 rack: null)
2024-07-09 23:41:23,321 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] (Re-)joining group
2024-07-09 23:41:23,343 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-email-notification-created-topic-1-323de68d-77fd-41fb-af02-d8b3a9d009f7
2024-07-09 23:41:23,343 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] (Re-)joining group
2024-07-09 23:41:26,369 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Successfully joined group with generation Generation{generationId=1, memberId='consumer-email-notification-created-topic-1-323de68d-77fd-41fb-af02-d8b3a9d009f7', protocol='range'}
2024-07-09 23:41:26,372 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Finished assignment for group at generation 1: {consumer-email-notification-created-topic-1-323de68d-77fd-41fb-af02-d8b3a9d009f7=Assignment(partitions=[email-notification-created-topic-0, email-notification-created-topic-1, email-notification-created-topic-2])}
2024-07-09 23:41:26,392 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Successfully synced group in generation Generation{generationId=1, memberId='consumer-email-notification-created-topic-1-323de68d-77fd-41fb-af02-d8b3a9d009f7', protocol='range'}
2024-07-09 23:41:26,392 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Notifying assignor about the new Assignment(partitions=[email-notification-created-topic-0, email-notification-created-topic-1, email-notification-created-topic-2])
2024-07-09 23:41:26,394 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Adding newly assigned partitions: email-notification-created-topic-0, email-notification-created-topic-1, email-notification-created-topic-2
2024-07-09 23:41:26,402 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Found no committed offset for partition email-notification-created-topic-1
2024-07-09 23:41:26,402 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Found no committed offset for partition email-notification-created-topic-2
2024-07-09 23:41:26,402 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Found no committed offset for partition email-notification-created-topic-0
2024-07-09 23:41:26,404 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Found no committed offset for partition email-notification-created-topic-1
2024-07-09 23:41:26,405 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Found no committed offset for partition email-notification-created-topic-2
2024-07-09 23:41:26,405 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Found no committed offset for partition email-notification-created-topic-0
2024-07-09 23:41:26,414 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] SubscriptionState: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Resetting offset for partition email-notification-created-topic-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=0}}.
2024-07-09 23:41:26,415 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] SubscriptionState: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Resetting offset for partition email-notification-created-topic-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2024-07-09 23:41:26,415 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] SubscriptionState: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Resetting offset for partition email-notification-created-topic-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=0}}.
2024-07-09 23:41:26,431 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: email-notification-created-topic: partitions assigned: [email-notification-created-topic-0, email-notification-created-topic-1, email-notification-created-topic-2]
2024-07-09 23:41:36,538 INFO [main] TelegramNotificationsApplication: Starting TelegramNotificationsApplication using Java 17.0.10 with PID 2496 (D:\programming\java\emergency-ms\telegram-notifications\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-09 23:41:36,539 DEBUG [main] TelegramNotificationsApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-09 23:41:36,539 INFO [main] TelegramNotificationsApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-09 23:41:37,028 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-09 23:41:37,077 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 41 ms. Found 1 JPA repository interface.
2024-07-09 23:41:37,540 INFO [main] TomcatWebServer: Tomcat initialized with port 8083 (http)
2024-07-09 23:41:37,552 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8083"]
2024-07-09 23:41:37,553 INFO [main] StandardService: Starting service [Tomcat]
2024-07-09 23:41:37,554 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-09 23:41:37,604 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-09 23:41:37,606 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1026 ms
2024-07-09 23:41:37,799 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-09 23:41:37,928 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1ecf0ac6
2024-07-09 23:41:37,928 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-09 23:41:37,953 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_telegram_db (PostgreSQL 16.3)
2024-07-09 23:41:37,987 INFO [main] DbValidate: Successfully validated 1 migration (execution time 00:00.020s)
2024-07-09 23:41:38,020 INFO [main] DbMigrate: Current version of schema "public": 1.0
2024-07-09 23:41:38,022 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-09 23:41:38,083 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-09 23:41:38,123 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-09 23:41:38,152 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-09 23:41:38,391 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-09 23:41:38,988 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-09 23:41:38,990 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-09 23:41:39,404 WARN [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-09 23:41:39,698 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8083"]
2024-07-09 23:41:39,711 INFO [main] TomcatWebServer: Tomcat started on port 8083 (http) with context path '/'
2024-07-09 23:41:39,743 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092, localhost:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-telegram-notification-created-topic-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = telegram-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-09 23:41:39,781 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-09 23:41:39,858 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-09 23:41:39,858 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-09 23:41:39,858 INFO [main] AppInfoParser: Kafka startTimeMs: 1720557699857
2024-07-09 23:41:39,860 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Subscribed to topic(s): telegram-notification-created-topic
2024-07-09 23:41:40,148 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metadata: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-09 23:41:40,148 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-09 23:41:40,151 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-09 23:41:40,170 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-telegram-notification-created-topic-1-be0bd617-51aa-470b-afa4-38e7a2925787
2024-07-09 23:41:40,170 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-09 23:41:40,187 INFO [main] TelegramNotificationsApplication: Started TelegramNotificationsApplication in 3.927 seconds (process running for 4.317)
2024-07-09 23:41:43,188 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=1, memberId='consumer-telegram-notification-created-topic-1-be0bd617-51aa-470b-afa4-38e7a2925787', protocol='range'}
2024-07-09 23:41:43,193 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Finished assignment for group at generation 1: {consumer-telegram-notification-created-topic-1-be0bd617-51aa-470b-afa4-38e7a2925787=Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2])}
2024-07-09 23:41:43,211 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=1, memberId='consumer-telegram-notification-created-topic-1-be0bd617-51aa-470b-afa4-38e7a2925787', protocol='range'}
2024-07-09 23:41:43,211 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2])
2024-07-09 23:41:43,213 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2
2024-07-09 23:41:43,219 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Found no committed offset for partition telegram-notification-created-topic-2
2024-07-09 23:41:43,220 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Found no committed offset for partition telegram-notification-created-topic-1
2024-07-09 23:41:43,220 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Found no committed offset for partition telegram-notification-created-topic-0
2024-07-09 23:41:43,222 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Found no committed offset for partition telegram-notification-created-topic-2
2024-07-09 23:41:43,222 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Found no committed offset for partition telegram-notification-created-topic-1
2024-07-09 23:41:43,222 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Found no committed offset for partition telegram-notification-created-topic-0
2024-07-09 23:41:43,231 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] SubscriptionState: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Resetting offset for partition telegram-notification-created-topic-2 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2024-07-09 23:41:43,232 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] SubscriptionState: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Resetting offset for partition telegram-notification-created-topic-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=0}}.
2024-07-09 23:41:43,232 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] SubscriptionState: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Resetting offset for partition telegram-notification-created-topic-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=0}}.
2024-07-09 23:41:43,249 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]
2024-07-09 23:41:48,636 INFO [http-nio-8081-exec-3] [/]: Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-09 23:41:48,636 INFO [http-nio-8081-exec-3] DispatcherServlet: Initializing Servlet 'dispatcherServlet'
2024-07-09 23:41:48,637 INFO [http-nio-8081-exec-3] DispatcherServlet: Completed initialization in 1 ms
2024-07-09 23:41:48,651 TRACE [http-nio-8081-exec-3] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6e95995d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a629e67, org.springframework.security.web.context.SecurityContextHolderFilter@2afa1b1a, org.springframework.security.web.header.HeaderWriterFilter@7a4c1a6c, org.springframework.security.web.authentication.logout.LogoutFilter@49a0fe14, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@738b93a8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64547a83, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@9696762, org.springframework.security.web.access.ExceptionTranslationFilter@30be6a05, org.springframework.security.web.access.intercept.AuthorizationFilter@5c168f98]] (1/1)
2024-07-09 23:41:48,652 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Securing POST /authentication/login/
2024-07-09 23:41:48,652 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:41:48,652 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:41:48,654 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:41:48,655 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:41:48,656 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:41:48,656 TRACE [http-nio-8081-exec-3] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:41:48,656 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:41:48,656 TRACE [http-nio-8081-exec-3] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:41:48,656 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:41:48,657 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:41:48,657 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:41:48,657 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:41:48,657 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /authentication/login/
2024-07-09 23:41:48,658 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /authentication/login/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@4920bd7
2024-07-09 23:41:48,658 TRACE [http-nio-8081-exec-3] HttpSessionSecurityContextRepository: No HttpSession currently exists
2024-07-09 23:41:48,658 TRACE [http-nio-8081-exec-3] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-09 23:41:48,658 TRACE [http-nio-8081-exec-3] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-09 23:41:48,660 TRACE [http-nio-8081-exec-3] AnonymousAuthenticationFilter: Set SecurityContextHolder to AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]]
2024-07-09 23:41:48,660 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Secured POST /authentication/login/
2024-07-09 23:41:48,718 TRACE [http-nio-8081-exec-3] ProviderManager: Authenticating request with DaoAuthenticationProvider (1/1)
2024-07-09 23:41:48,955 DEBUG [http-nio-8081-exec-3] DaoAuthenticationProvider: Authenticated user
2024-07-09 23:41:48,974 DEBUG [http-nio-8081-exec-3] HttpSessionSecurityContextRepository: Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@30011762]
2024-07-09 23:41:48,991 TRACE [http-nio-8081-exec-3] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-09 23:41:55,831 TRACE [http-nio-8081-exec-2] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6e95995d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a629e67, org.springframework.security.web.context.SecurityContextHolderFilter@2afa1b1a, org.springframework.security.web.header.HeaderWriterFilter@7a4c1a6c, org.springframework.security.web.authentication.logout.LogoutFilter@49a0fe14, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@738b93a8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64547a83, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@9696762, org.springframework.security.web.access.ExceptionTranslationFilter@30be6a05, org.springframework.security.web.access.intercept.AuthorizationFilter@5c168f98]] (1/1)
2024-07-09 23:41:55,831 DEBUG [http-nio-8081-exec-2] FilterChainProxy: Securing POST /receivers/create/
2024-07-09 23:41:55,832 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:41:55,832 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:41:55,832 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:41:55,832 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:41:55,832 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:41:55,832 TRACE [http-nio-8081-exec-2] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:41:55,832 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:41:55,832 TRACE [http-nio-8081-exec-2] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:41:55,832 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:41:55,832 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:41:55,832 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:41:55,832 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:41:55,832 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /receivers/create/
2024-07-09 23:41:55,833 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /receivers/create/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@660dd1ef
2024-07-09 23:41:55,833 TRACE [http-nio-8081-exec-2] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-09 23:41:55,833 TRACE [http-nio-8081-exec-2] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-09 23:41:55,833 DEBUG [http-nio-8081-exec-2] FilterChainProxy: Secured POST /receivers/create/
2024-07-09 23:41:55,864 INFO [http-nio-8081-exec-2] ProducerConfig: ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092, localhost:9094]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 10000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 5000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2024-07-09 23:41:55,880 INFO [http-nio-8081-exec-2] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-09 23:41:55,887 INFO [http-nio-8081-exec-2] KafkaProducer: [Producer clientId=emergency-producer-1] Instantiated an idempotent producer.
2024-07-09 23:41:55,900 INFO [http-nio-8081-exec-2] AppInfoParser: Kafka version: 3.7.0
2024-07-09 23:41:55,900 INFO [http-nio-8081-exec-2] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-09 23:41:55,900 INFO [http-nio-8081-exec-2] AppInfoParser: Kafka startTimeMs: 1720557715900
2024-07-09 23:41:55,910 INFO [kafka-producer-network-thread | emergency-producer-1] Metadata: [Producer clientId=emergency-producer-1] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-09 23:41:55,933 TRACE [http-nio-8081-exec-2] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-09 23:41:56,136 INFO [kafka-producer-network-thread | emergency-producer-1] TransactionManager: [Producer clientId=emergency-producer-1] ProducerId set to 1000 with epoch 0
2024-07-09 23:41:56,169 INFO [kafka-producer-network-thread | emergency-producer-1] ReceiverServiceImpl: Message send successfully: telegram-receiver-user-request-topic-2@0
2024-07-09 23:45:14,745 INFO [main] TelegramNotificationsApplication: Starting TelegramNotificationsApplication using Java 17.0.10 with PID 17972 (D:\programming\java\emergency-ms\telegram-notifications\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-09 23:45:14,746 DEBUG [main] TelegramNotificationsApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-09 23:45:14,747 INFO [main] TelegramNotificationsApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-09 23:45:15,274 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-09 23:45:15,325 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 46 ms. Found 1 JPA repository interface.
2024-07-09 23:45:15,830 INFO [main] TomcatWebServer: Tomcat initialized with port 8083 (http)
2024-07-09 23:45:15,838 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8083"]
2024-07-09 23:45:15,840 INFO [main] StandardService: Starting service [Tomcat]
2024-07-09 23:45:15,840 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-09 23:45:15,898 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-09 23:45:15,899 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1111 ms
2024-07-09 23:45:16,120 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-09 23:45:16,262 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@20cff21e
2024-07-09 23:45:16,264 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-09 23:45:16,287 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_telegram_db (PostgreSQL 16.3)
2024-07-09 23:45:16,324 INFO [main] DbValidate: Successfully validated 1 migration (execution time 00:00.024s)
2024-07-09 23:45:16,355 INFO [main] DbMigrate: Current version of schema "public": 1.0
2024-07-09 23:45:16,357 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-09 23:45:16,425 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-09 23:45:16,477 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-09 23:45:16,515 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-09 23:45:16,797 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-09 23:45:17,469 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-09 23:45:17,472 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-09 23:45:17,933 WARN [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-09 23:45:18,300 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8083"]
2024-07-09 23:45:18,317 INFO [main] TomcatWebServer: Tomcat started on port 8083 (http) with context path '/'
2024-07-09 23:45:18,351 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092, localhost:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-telegram-notification-created-topic-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = telegram-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-09 23:45:18,395 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-09 23:45:18,505 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-09 23:45:18,506 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-09 23:45:18,506 INFO [main] AppInfoParser: Kafka startTimeMs: 1720557918504
2024-07-09 23:45:18,508 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Subscribed to topic(s): telegram-notification-created-topic
2024-07-09 23:45:18,789 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metadata: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-09 23:45:18,790 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-09 23:45:18,792 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-09 23:45:18,802 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-telegram-notification-created-topic-1-095b0913-9a80-471a-834f-4762004638d1
2024-07-09 23:45:18,803 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-09 23:45:18,838 INFO [main] TelegramNotificationsApplication: Started TelegramNotificationsApplication in 4.391 seconds (process running for 4.943)
2024-07-09 23:45:21,486 TRACE [http-nio-8081-exec-6] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6e95995d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a629e67, org.springframework.security.web.context.SecurityContextHolderFilter@2afa1b1a, org.springframework.security.web.header.HeaderWriterFilter@7a4c1a6c, org.springframework.security.web.authentication.logout.LogoutFilter@49a0fe14, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@738b93a8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64547a83, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@9696762, org.springframework.security.web.access.ExceptionTranslationFilter@30be6a05, org.springframework.security.web.access.intercept.AuthorizationFilter@5c168f98]] (1/1)
2024-07-09 23:45:21,486 DEBUG [http-nio-8081-exec-6] FilterChainProxy: Securing POST /receivers/create/
2024-07-09 23:45:21,486 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:45:21,486 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:45:21,486 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:45:21,486 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:45:21,487 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:45:21,487 TRACE [http-nio-8081-exec-6] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:45:21,487 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:45:21,487 TRACE [http-nio-8081-exec-6] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:45:21,487 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:45:21,487 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:45:21,487 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:45:21,487 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:45:21,487 TRACE [http-nio-8081-exec-6] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /receivers/create/
2024-07-09 23:45:21,487 TRACE [http-nio-8081-exec-6] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /receivers/create/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@660dd1ef
2024-07-09 23:45:21,487 TRACE [http-nio-8081-exec-6] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-09 23:45:21,487 TRACE [http-nio-8081-exec-6] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-09 23:45:21,487 DEBUG [http-nio-8081-exec-6] FilterChainProxy: Secured POST /receivers/create/
2024-07-09 23:45:21,496 TRACE [http-nio-8081-exec-6] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-09 23:45:21,497 INFO [kafka-producer-network-thread | emergency-producer-1] ReceiverServiceImpl: Message send successfully: telegram-receiver-user-request-topic-2@1
2024-07-09 23:45:52,714 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=2, memberId='consumer-telegram-notification-created-topic-1-095b0913-9a80-471a-834f-4762004638d1', protocol='range'}
2024-07-09 23:45:52,718 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Finished assignment for group at generation 2: {consumer-telegram-notification-created-topic-1-095b0913-9a80-471a-834f-4762004638d1=Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2])}
2024-07-09 23:45:52,722 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=2, memberId='consumer-telegram-notification-created-topic-1-095b0913-9a80-471a-834f-4762004638d1', protocol='range'}
2024-07-09 23:45:52,722 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2])
2024-07-09 23:45:52,723 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2
2024-07-09 23:45:52,730 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=0}}
2024-07-09 23:45:52,731 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=0}}
2024-07-09 23:45:52,731 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2024-07-09 23:45:52,732 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]
2024-07-09 23:46:06,967 TRACE [http-nio-8081-exec-7] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6e95995d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a629e67, org.springframework.security.web.context.SecurityContextHolderFilter@2afa1b1a, org.springframework.security.web.header.HeaderWriterFilter@7a4c1a6c, org.springframework.security.web.authentication.logout.LogoutFilter@49a0fe14, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@738b93a8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64547a83, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@9696762, org.springframework.security.web.access.ExceptionTranslationFilter@30be6a05, org.springframework.security.web.access.intercept.AuthorizationFilter@5c168f98]] (1/1)
2024-07-09 23:46:06,967 DEBUG [http-nio-8081-exec-7] FilterChainProxy: Securing POST /receivers/create/
2024-07-09 23:46:06,967 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:46:06,967 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:46:06,967 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:46:06,967 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:46:06,967 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:46:06,967 TRACE [http-nio-8081-exec-7] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:46:06,968 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:46:06,968 TRACE [http-nio-8081-exec-7] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:46:06,968 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:46:06,968 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:46:06,968 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:46:06,968 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:46:06,968 TRACE [http-nio-8081-exec-7] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /receivers/create/
2024-07-09 23:46:06,968 TRACE [http-nio-8081-exec-7] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /receivers/create/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@660dd1ef
2024-07-09 23:46:06,968 TRACE [http-nio-8081-exec-7] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-09 23:46:06,968 TRACE [http-nio-8081-exec-7] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-09 23:46:06,968 DEBUG [http-nio-8081-exec-7] FilterChainProxy: Secured POST /receivers/create/
2024-07-09 23:46:06,974 TRACE [http-nio-8081-exec-7] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-09 23:46:06,976 INFO [kafka-producer-network-thread | emergency-producer-1] ReceiverServiceImpl: Message send successfully: telegram-receiver-user-request-topic-2@2
2024-07-09 23:48:55,451 TRACE [http-nio-8081-exec-10] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6e95995d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a629e67, org.springframework.security.web.context.SecurityContextHolderFilter@2afa1b1a, org.springframework.security.web.header.HeaderWriterFilter@7a4c1a6c, org.springframework.security.web.authentication.logout.LogoutFilter@49a0fe14, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@738b93a8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64547a83, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@9696762, org.springframework.security.web.access.ExceptionTranslationFilter@30be6a05, org.springframework.security.web.access.intercept.AuthorizationFilter@5c168f98]] (1/1)
2024-07-09 23:48:55,451 DEBUG [http-nio-8081-exec-10] FilterChainProxy: Securing POST /authentication/login/
2024-07-09 23:48:55,451 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:48:55,451 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:48:55,451 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:48:55,451 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:48:55,451 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:48:55,451 TRACE [http-nio-8081-exec-10] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:48:55,451 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:48:55,451 TRACE [http-nio-8081-exec-10] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:48:55,451 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:48:55,451 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:48:55,452 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:48:55,452 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:48:55,452 TRACE [http-nio-8081-exec-10] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /authentication/login/
2024-07-09 23:48:55,452 TRACE [http-nio-8081-exec-10] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /authentication/login/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@4920bd7
2024-07-09 23:48:55,452 TRACE [http-nio-8081-exec-10] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-09 23:48:55,452 TRACE [http-nio-8081-exec-10] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-09 23:48:55,452 TRACE [http-nio-8081-exec-10] ExceptionTranslationFilter: Sending UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]] to access denied handler since access is denied
org.springframework.security.access.AccessDeniedException: Access Denied
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:98)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2024-07-09 23:48:55,454 DEBUG [http-nio-8081-exec-10] AccessDeniedHandlerImpl: Responding with 403 status code
2024-07-09 23:48:55,454 TRACE [http-nio-8081-exec-10] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-09 23:48:55,458 TRACE [http-nio-8081-exec-10] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6e95995d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a629e67, org.springframework.security.web.context.SecurityContextHolderFilter@2afa1b1a, org.springframework.security.web.header.HeaderWriterFilter@7a4c1a6c, org.springframework.security.web.authentication.logout.LogoutFilter@49a0fe14, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@738b93a8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64547a83, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@9696762, org.springframework.security.web.access.ExceptionTranslationFilter@30be6a05, org.springframework.security.web.access.intercept.AuthorizationFilter@5c168f98]] (1/1)
2024-07-09 23:48:55,458 DEBUG [http-nio-8081-exec-10] FilterChainProxy: Securing POST /error
2024-07-09 23:48:55,458 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:48:55,458 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:48:55,458 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:48:55,458 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:48:55,458 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:48:55,458 TRACE [http-nio-8081-exec-10] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:48:55,458 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:48:55,458 TRACE [http-nio-8081-exec-10] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:48:55,459 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:48:55,459 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:48:55,459 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:48:55,459 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:48:55,459 TRACE [http-nio-8081-exec-10] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /error
2024-07-09 23:48:55,459 TRACE [http-nio-8081-exec-10] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /error using org.springframework.security.authorization.AuthenticatedAuthorizationManager@660dd1ef
2024-07-09 23:48:55,459 TRACE [http-nio-8081-exec-10] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-09 23:48:55,459 TRACE [http-nio-8081-exec-10] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-09 23:48:55,459 DEBUG [http-nio-8081-exec-10] FilterChainProxy: Secured POST /error
2024-07-09 23:49:03,203 TRACE [http-nio-8081-exec-1] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6e95995d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a629e67, org.springframework.security.web.context.SecurityContextHolderFilter@2afa1b1a, org.springframework.security.web.header.HeaderWriterFilter@7a4c1a6c, org.springframework.security.web.authentication.logout.LogoutFilter@49a0fe14, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@738b93a8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64547a83, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@9696762, org.springframework.security.web.access.ExceptionTranslationFilter@30be6a05, org.springframework.security.web.access.intercept.AuthorizationFilter@5c168f98]] (1/1)
2024-07-09 23:49:03,203 DEBUG [http-nio-8081-exec-1] FilterChainProxy: Securing GET /authentication/logout/
2024-07-09 23:49:03,203 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:49:03,205 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:49:03,205 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:49:03,205 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:49:03,205 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:49:03,205 TRACE [http-nio-8081-exec-1] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:49:03,205 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:49:03,205 TRACE [http-nio-8081-exec-1] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:49:03,205 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:49:03,205 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:49:03,205 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:49:03,205 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:49:03,205 TRACE [http-nio-8081-exec-1] RequestMatcherDelegatingAuthorizationManager: Authorizing GET /authentication/logout/
2024-07-09 23:49:03,206 TRACE [http-nio-8081-exec-1] RequestMatcherDelegatingAuthorizationManager: Checking authorization on GET /authentication/logout/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@660dd1ef
2024-07-09 23:49:03,206 TRACE [http-nio-8081-exec-1] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-09 23:49:03,206 TRACE [http-nio-8081-exec-1] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-09 23:49:03,206 DEBUG [http-nio-8081-exec-1] FilterChainProxy: Secured GET /authentication/logout/
2024-07-09 23:49:03,207 DEBUG [http-nio-8081-exec-1] HttpSessionSecurityContextRepository: Removed SecurityContextImpl [Null authentication] from HttpSession [org.apache.catalina.session.StandardSessionFacade@30011762]
2024-07-09 23:49:03,207 TRACE [http-nio-8081-exec-1] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-09 23:49:06,555 TRACE [http-nio-8081-exec-3] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6e95995d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a629e67, org.springframework.security.web.context.SecurityContextHolderFilter@2afa1b1a, org.springframework.security.web.header.HeaderWriterFilter@7a4c1a6c, org.springframework.security.web.authentication.logout.LogoutFilter@49a0fe14, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@738b93a8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64547a83, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@9696762, org.springframework.security.web.access.ExceptionTranslationFilter@30be6a05, org.springframework.security.web.access.intercept.AuthorizationFilter@5c168f98]] (1/1)
2024-07-09 23:49:06,556 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Securing POST /authentication/login/
2024-07-09 23:49:06,556 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:49:06,556 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:49:06,556 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:49:06,556 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:49:06,556 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:49:06,556 TRACE [http-nio-8081-exec-3] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:49:06,556 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:49:06,556 TRACE [http-nio-8081-exec-3] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:49:06,556 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:49:06,556 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:49:06,556 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:49:06,556 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:49:06,556 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /authentication/login/
2024-07-09 23:49:06,556 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /authentication/login/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@4920bd7
2024-07-09 23:49:06,556 TRACE [http-nio-8081-exec-3] HttpSessionSecurityContextRepository: Did not find SecurityContext in HttpSession 1BF553B0FCFC5CBC7FE7ADC7AE1F3D03 using the SPRING_SECURITY_CONTEXT session attribute
2024-07-09 23:49:06,556 TRACE [http-nio-8081-exec-3] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-09 23:49:06,556 TRACE [http-nio-8081-exec-3] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-09 23:49:06,556 TRACE [http-nio-8081-exec-3] AnonymousAuthenticationFilter: Set SecurityContextHolder to AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=1BF553B0FCFC5CBC7FE7ADC7AE1F3D03], Granted Authorities=[ROLE_ANONYMOUS]]
2024-07-09 23:49:06,556 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Secured POST /authentication/login/
2024-07-09 23:49:06,558 TRACE [http-nio-8081-exec-3] ProviderManager: Authenticating request with DaoAuthenticationProvider (1/1)
2024-07-09 23:49:06,613 DEBUG [http-nio-8081-exec-3] DaoAuthenticationProvider: Authenticated user
2024-07-09 23:49:06,615 DEBUG [http-nio-8081-exec-3] HttpSessionSecurityContextRepository: Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@30011762]
2024-07-09 23:49:06,618 TRACE [http-nio-8081-exec-3] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-09 23:49:19,212 TRACE [http-nio-8081-exec-2] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6e95995d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a629e67, org.springframework.security.web.context.SecurityContextHolderFilter@2afa1b1a, org.springframework.security.web.header.HeaderWriterFilter@7a4c1a6c, org.springframework.security.web.authentication.logout.LogoutFilter@49a0fe14, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@738b93a8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64547a83, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@9696762, org.springframework.security.web.access.ExceptionTranslationFilter@30be6a05, org.springframework.security.web.access.intercept.AuthorizationFilter@5c168f98]] (1/1)
2024-07-09 23:49:19,212 DEBUG [http-nio-8081-exec-2] FilterChainProxy: Securing POST /emergency-calls/call/
2024-07-09 23:49:19,212 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:49:19,213 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:49:19,213 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:49:19,213 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:49:19,213 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:49:19,213 TRACE [http-nio-8081-exec-2] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:49:19,213 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:49:19,213 TRACE [http-nio-8081-exec-2] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:49:19,213 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:49:19,213 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:49:19,213 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:49:19,213 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:49:19,213 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /emergency-calls/call/
2024-07-09 23:49:19,213 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /emergency-calls/call/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@660dd1ef
2024-07-09 23:49:19,213 TRACE [http-nio-8081-exec-2] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]] from SPRING_SECURITY_CONTEXT
2024-07-09 23:49:19,213 TRACE [http-nio-8081-exec-2] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]
2024-07-09 23:49:19,213 DEBUG [http-nio-8081-exec-2] FilterChainProxy: Secured POST /emergency-calls/call/
2024-07-09 23:49:19,220 INFO [http-nio-8081-exec-2] ProducerConfig: ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092, localhost:9094]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 10000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 5000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2024-07-09 23:49:19,221 INFO [http-nio-8081-exec-2] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-09 23:49:19,221 INFO [http-nio-8081-exec-2] KafkaProducer: [Producer clientId=emergency-producer-1] Instantiated an idempotent producer.
2024-07-09 23:49:19,226 INFO [http-nio-8081-exec-2] AppInfoParser: The mbean of App info: [kafka.producer], id: [emergency-producer-1] already exists, so skipping a new mbean creation.
2024-07-09 23:49:19,229 INFO [kafka-producer-network-thread | emergency-producer-1] Metadata: [Producer clientId=emergency-producer-1] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-09 23:49:19,230 INFO [kafka-producer-network-thread | emergency-producer-1] TransactionManager: [Producer clientId=emergency-producer-1] ProducerId set to 0 with epoch 0
2024-07-09 23:49:19,238 INFO [http-nio-8081-exec-2] ProducerConfig: ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092, localhost:9094]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 10000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 5000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2024-07-09 23:49:19,239 INFO [http-nio-8081-exec-2] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-09 23:49:19,239 INFO [http-nio-8081-exec-2] KafkaProducer: [Producer clientId=emergency-producer-1] Instantiated an idempotent producer.
2024-07-09 23:49:19,243 INFO [http-nio-8081-exec-2] AppInfoParser: The mbean of App info: [kafka.producer], id: [emergency-producer-1] already exists, so skipping a new mbean creation.
2024-07-09 23:49:19,247 INFO [kafka-producer-network-thread | emergency-producer-1] TransactionManager: [Producer clientId=emergency-producer-1] ProducerId set to 1 with epoch 0
2024-07-09 23:49:19,248 INFO [kafka-producer-network-thread | emergency-producer-1] Metadata: [Producer clientId=emergency-producer-1] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-09 23:49:19,249 INFO [kafka-producer-network-thread | emergency-producer-1] EmergencyCallServiceImpl: Message send successfully: email-notification-created-topic-0@0
2024-07-09 23:49:19,258 INFO [kafka-producer-network-thread | emergency-producer-1] EmergencyCallServiceImpl: Message send successfully: telegram-notification-created-topic-0@0
2024-07-09 23:49:19,261 TRACE [http-nio-8081-exec-2] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-09 23:49:19,270 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] EmailNotificationCreatedEventHandler: Received event from bladeattheneck
2024-07-09 23:49:19,283 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] TelegramNotificationCreatedEventHandler: Received event from bladeattheneck
2024-07-09 23:49:19,367 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Seeking to offset 0 for partition telegram-notification-created-topic-0
2024-07-09 23:49:19,367 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramNotificationCreatedEventHandler.handle(org.example.telegram_notifications.events.TelegramNotificationCreatedEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: org.example.telegram_notifications.exception.TelegramUserRejection: User with chatId '612161235' rejected notifications.
	at org.example.telegram_notifications.handler.TelegramNotificationCreatedEventHandler.handle(TelegramNotificationCreatedEventHandler.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.invoke(DelegatingInvocableHandler.java:187)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:80)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: org.example.telegram_notifications.exception.TelegramUserRejection: User with chatId '612161235' rejected notifications.
	at org.example.telegram_notifications.service.impls.TelegramNotificationServiceImpl.sendMessage(TelegramNotificationServiceImpl.java:39)
	at org.example.telegram_notifications.handler.TelegramNotificationCreatedEventHandler.handle(TelegramNotificationCreatedEventHandler.java:26)
	... 26 common frames omitted
2024-07-09 23:49:19,789 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] TelegramNotificationCreatedEventHandler: Received event from bladeattheneck
2024-07-09 23:49:19,803 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Seeking to offset 0 for partition telegram-notification-created-topic-0
2024-07-09 23:49:19,803 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramNotificationCreatedEventHandler.handle(org.example.telegram_notifications.events.TelegramNotificationCreatedEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: org.example.telegram_notifications.exception.TelegramUserRejection: User with chatId '612161235' rejected notifications.
	at org.example.telegram_notifications.handler.TelegramNotificationCreatedEventHandler.handle(TelegramNotificationCreatedEventHandler.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.invoke(DelegatingInvocableHandler.java:187)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:80)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: org.example.telegram_notifications.exception.TelegramUserRejection: User with chatId '612161235' rejected notifications.
	at org.example.telegram_notifications.service.impls.TelegramNotificationServiceImpl.sendMessage(TelegramNotificationServiceImpl.java:39)
	at org.example.telegram_notifications.handler.TelegramNotificationCreatedEventHandler.handle(TelegramNotificationCreatedEventHandler.java:26)
	... 26 common frames omitted
2024-07-09 23:49:20,293 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] TelegramNotificationCreatedEventHandler: Received event from bladeattheneck
2024-07-09 23:49:20,307 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Seeking to offset 0 for partition telegram-notification-created-topic-0
2024-07-09 23:49:20,307 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramNotificationCreatedEventHandler.handle(org.example.telegram_notifications.events.TelegramNotificationCreatedEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: org.example.telegram_notifications.exception.TelegramUserRejection: User with chatId '612161235' rejected notifications.
	at org.example.telegram_notifications.handler.TelegramNotificationCreatedEventHandler.handle(TelegramNotificationCreatedEventHandler.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.invoke(DelegatingInvocableHandler.java:187)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:80)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: org.example.telegram_notifications.exception.TelegramUserRejection: User with chatId '612161235' rejected notifications.
	at org.example.telegram_notifications.service.impls.TelegramNotificationServiceImpl.sendMessage(TelegramNotificationServiceImpl.java:39)
	at org.example.telegram_notifications.handler.TelegramNotificationCreatedEventHandler.handle(TelegramNotificationCreatedEventHandler.java:26)
	... 26 common frames omitted
2024-07-09 23:49:20,796 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] TelegramNotificationCreatedEventHandler: Received event from bladeattheneck
2024-07-09 23:49:20,811 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Seeking to offset 0 for partition telegram-notification-created-topic-0
2024-07-09 23:49:20,811 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramNotificationCreatedEventHandler.handle(org.example.telegram_notifications.events.TelegramNotificationCreatedEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: org.example.telegram_notifications.exception.TelegramUserRejection: User with chatId '612161235' rejected notifications.
	at org.example.telegram_notifications.handler.TelegramNotificationCreatedEventHandler.handle(TelegramNotificationCreatedEventHandler.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.invoke(DelegatingInvocableHandler.java:187)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:80)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: org.example.telegram_notifications.exception.TelegramUserRejection: User with chatId '612161235' rejected notifications.
	at org.example.telegram_notifications.service.impls.TelegramNotificationServiceImpl.sendMessage(TelegramNotificationServiceImpl.java:39)
	at org.example.telegram_notifications.handler.TelegramNotificationCreatedEventHandler.handle(TelegramNotificationCreatedEventHandler.java:26)
	... 26 common frames omitted
2024-07-09 23:49:21,299 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] TelegramNotificationCreatedEventHandler: Received event from bladeattheneck
2024-07-09 23:49:21,313 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Seeking to offset 0 for partition telegram-notification-created-topic-0
2024-07-09 23:49:21,315 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramNotificationCreatedEventHandler.handle(org.example.telegram_notifications.events.TelegramNotificationCreatedEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: org.example.telegram_notifications.exception.TelegramUserRejection: User with chatId '612161235' rejected notifications.
	at org.example.telegram_notifications.handler.TelegramNotificationCreatedEventHandler.handle(TelegramNotificationCreatedEventHandler.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.invoke(DelegatingInvocableHandler.java:187)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:80)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: org.example.telegram_notifications.exception.TelegramUserRejection: User with chatId '612161235' rejected notifications.
	at org.example.telegram_notifications.service.impls.TelegramNotificationServiceImpl.sendMessage(TelegramNotificationServiceImpl.java:39)
	at org.example.telegram_notifications.handler.TelegramNotificationCreatedEventHandler.handle(TelegramNotificationCreatedEventHandler.java:26)
	... 26 common frames omitted
2024-07-09 23:49:21,816 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] TelegramNotificationCreatedEventHandler: Received event from bladeattheneck
2024-07-09 23:49:21,830 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Seeking to offset 0 for partition telegram-notification-created-topic-0
2024-07-09 23:49:21,830 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramNotificationCreatedEventHandler.handle(org.example.telegram_notifications.events.TelegramNotificationCreatedEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: org.example.telegram_notifications.exception.TelegramUserRejection: User with chatId '612161235' rejected notifications.
	at org.example.telegram_notifications.handler.TelegramNotificationCreatedEventHandler.handle(TelegramNotificationCreatedEventHandler.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.invoke(DelegatingInvocableHandler.java:187)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:80)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: org.example.telegram_notifications.exception.TelegramUserRejection: User with chatId '612161235' rejected notifications.
	at org.example.telegram_notifications.service.impls.TelegramNotificationServiceImpl.sendMessage(TelegramNotificationServiceImpl.java:39)
	at org.example.telegram_notifications.handler.TelegramNotificationCreatedEventHandler.handle(TelegramNotificationCreatedEventHandler.java:26)
	... 26 common frames omitted
2024-07-09 23:49:22,333 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] TelegramNotificationCreatedEventHandler: Received event from bladeattheneck
2024-07-09 23:49:22,348 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Seeking to offset 0 for partition telegram-notification-created-topic-0
2024-07-09 23:49:22,348 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramNotificationCreatedEventHandler.handle(org.example.telegram_notifications.events.TelegramNotificationCreatedEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: org.example.telegram_notifications.exception.TelegramUserRejection: User with chatId '612161235' rejected notifications.
	at org.example.telegram_notifications.handler.TelegramNotificationCreatedEventHandler.handle(TelegramNotificationCreatedEventHandler.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.invoke(DelegatingInvocableHandler.java:187)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:80)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: org.example.telegram_notifications.exception.TelegramUserRejection: User with chatId '612161235' rejected notifications.
	at org.example.telegram_notifications.service.impls.TelegramNotificationServiceImpl.sendMessage(TelegramNotificationServiceImpl.java:39)
	at org.example.telegram_notifications.handler.TelegramNotificationCreatedEventHandler.handle(TelegramNotificationCreatedEventHandler.java:26)
	... 26 common frames omitted
2024-07-09 23:49:22,849 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] TelegramNotificationCreatedEventHandler: Received event from bladeattheneck
2024-07-09 23:49:22,864 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Seeking to offset 0 for partition telegram-notification-created-topic-0
2024-07-09 23:49:22,864 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramNotificationCreatedEventHandler.handle(org.example.telegram_notifications.events.TelegramNotificationCreatedEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: org.example.telegram_notifications.exception.TelegramUserRejection: User with chatId '612161235' rejected notifications.
	at org.example.telegram_notifications.handler.TelegramNotificationCreatedEventHandler.handle(TelegramNotificationCreatedEventHandler.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.invoke(DelegatingInvocableHandler.java:187)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:80)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: org.example.telegram_notifications.exception.TelegramUserRejection: User with chatId '612161235' rejected notifications.
	at org.example.telegram_notifications.service.impls.TelegramNotificationServiceImpl.sendMessage(TelegramNotificationServiceImpl.java:39)
	at org.example.telegram_notifications.handler.TelegramNotificationCreatedEventHandler.handle(TelegramNotificationCreatedEventHandler.java:26)
	... 26 common frames omitted
2024-07-09 23:49:23,363 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] TelegramNotificationCreatedEventHandler: Received event from bladeattheneck
2024-07-09 23:49:23,377 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Seeking to offset 0 for partition telegram-notification-created-topic-0
2024-07-09 23:49:23,377 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramNotificationCreatedEventHandler.handle(org.example.telegram_notifications.events.TelegramNotificationCreatedEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: org.example.telegram_notifications.exception.TelegramUserRejection: User with chatId '612161235' rejected notifications.
	at org.example.telegram_notifications.handler.TelegramNotificationCreatedEventHandler.handle(TelegramNotificationCreatedEventHandler.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.invoke(DelegatingInvocableHandler.java:187)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:80)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: org.example.telegram_notifications.exception.TelegramUserRejection: User with chatId '612161235' rejected notifications.
	at org.example.telegram_notifications.service.impls.TelegramNotificationServiceImpl.sendMessage(TelegramNotificationServiceImpl.java:39)
	at org.example.telegram_notifications.handler.TelegramNotificationCreatedEventHandler.handle(TelegramNotificationCreatedEventHandler.java:26)
	... 26 common frames omitted
2024-07-09 23:49:23,878 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] TelegramNotificationCreatedEventHandler: Received event from bladeattheneck
2024-07-09 23:49:23,883 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DefaultErrorHandler: Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for telegram-notification-created-topic-0@0
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramNotificationCreatedEventHandler.handle(org.example.telegram_notifications.events.TelegramNotificationCreatedEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: org.example.telegram_notifications.exception.TelegramUserRejection: User with chatId '612161235' rejected notifications.
	at org.example.telegram_notifications.handler.TelegramNotificationCreatedEventHandler.handle(TelegramNotificationCreatedEventHandler.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.invoke(DelegatingInvocableHandler.java:187)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:80)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: org.example.telegram_notifications.exception.TelegramUserRejection: User with chatId '612161235' rejected notifications.
	at org.example.telegram_notifications.service.impls.TelegramNotificationServiceImpl.sendMessage(TelegramNotificationServiceImpl.java:39)
	at org.example.telegram_notifications.handler.TelegramNotificationCreatedEventHandler.handle(TelegramNotificationCreatedEventHandler.java:26)
	... 26 common frames omitted
2024-07-09 23:50:00,592 TRACE [http-nio-8081-exec-4] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6e95995d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a629e67, org.springframework.security.web.context.SecurityContextHolderFilter@2afa1b1a, org.springframework.security.web.header.HeaderWriterFilter@7a4c1a6c, org.springframework.security.web.authentication.logout.LogoutFilter@49a0fe14, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@738b93a8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64547a83, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@9696762, org.springframework.security.web.access.ExceptionTranslationFilter@30be6a05, org.springframework.security.web.access.intercept.AuthorizationFilter@5c168f98]] (1/1)
2024-07-09 23:50:00,592 DEBUG [http-nio-8081-exec-4] FilterChainProxy: Securing POST /emergency-calls/call/
2024-07-09 23:50:00,592 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:50:00,592 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:50:00,592 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:50:00,592 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:50:00,592 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:50:00,592 TRACE [http-nio-8081-exec-4] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:50:00,592 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:50:00,592 TRACE [http-nio-8081-exec-4] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:50:00,592 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:50:00,592 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:50:00,592 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:50:00,593 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:50:00,593 TRACE [http-nio-8081-exec-4] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /emergency-calls/call/
2024-07-09 23:50:00,593 TRACE [http-nio-8081-exec-4] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /emergency-calls/call/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@660dd1ef
2024-07-09 23:50:00,593 TRACE [http-nio-8081-exec-4] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]] from SPRING_SECURITY_CONTEXT
2024-07-09 23:50:00,593 TRACE [http-nio-8081-exec-4] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]
2024-07-09 23:50:00,593 DEBUG [http-nio-8081-exec-4] FilterChainProxy: Secured POST /emergency-calls/call/
2024-07-09 23:50:00,603 TRACE [http-nio-8081-exec-4] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-09 23:50:00,604 INFO [kafka-producer-network-thread | emergency-producer-1] EmergencyCallServiceImpl: Message send successfully: email-notification-created-topic-0@1
2024-07-09 23:50:00,604 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] EmailNotificationCreatedEventHandler: Received event from bladeattheneck
2024-07-09 23:50:00,605 INFO [kafka-producer-network-thread | emergency-producer-1] EmergencyCallServiceImpl: Message send successfully: telegram-notification-created-topic-0@1
2024-07-09 23:50:00,605 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] TelegramNotificationCreatedEventHandler: Received event from bladeattheneck
2024-07-09 23:50:23,179 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node -2 disconnected.
2024-07-09 23:50:23,181 INFO [kafka-coordinator-heartbeat-thread | email-notification-created-topic] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node -1 disconnected.
2024-07-09 23:50:56,307 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node -2 disconnected.
2024-07-09 23:50:56,309 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node -1 disconnected.
2024-07-09 23:50:56,310 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 3 disconnected.
2024-07-09 23:51:22,793 INFO [main] TelegramNotificationsApplication: Starting TelegramNotificationsApplication using Java 17.0.10 with PID 14516 (D:\programming\java\emergency-ms\telegram-notifications\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-09 23:51:22,795 DEBUG [main] TelegramNotificationsApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-09 23:51:22,795 INFO [main] TelegramNotificationsApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-09 23:51:23,282 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-09 23:51:23,330 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 42 ms. Found 1 JPA repository interface.
2024-07-09 23:51:23,818 INFO [main] TomcatWebServer: Tomcat initialized with port 8083 (http)
2024-07-09 23:51:23,826 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8083"]
2024-07-09 23:51:23,828 INFO [main] StandardService: Starting service [Tomcat]
2024-07-09 23:51:23,828 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-09 23:51:23,889 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-09 23:51:23,890 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1054 ms
2024-07-09 23:51:24,092 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-09 23:51:24,227 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@22a4ca4a
2024-07-09 23:51:24,228 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-09 23:51:24,252 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_telegram_db (PostgreSQL 16.3)
2024-07-09 23:51:24,284 INFO [main] DbValidate: Successfully validated 1 migration (execution time 00:00.020s)
2024-07-09 23:51:24,329 INFO [main] DbMigrate: Current version of schema "public": 1.0
2024-07-09 23:51:24,332 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-09 23:51:24,396 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-09 23:51:24,440 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-09 23:51:24,468 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-09 23:51:24,711 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-09 23:51:25,356 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-09 23:51:25,359 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-09 23:51:25,827 WARN [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-09 23:51:26,150 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8083"]
2024-07-09 23:51:26,165 INFO [main] TomcatWebServer: Tomcat started on port 8083 (http) with context path '/'
2024-07-09 23:51:26,195 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092, localhost:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-telegram-notification-created-topic-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = telegram-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-09 23:51:26,231 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-09 23:51:26,327 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-09 23:51:26,327 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-09 23:51:26,328 INFO [main] AppInfoParser: Kafka startTimeMs: 1720558286326
2024-07-09 23:51:26,331 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Subscribed to topic(s): telegram-notification-created-topic
2024-07-09 23:51:26,339 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092, localhost:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-telegram-notification-created-topic-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = telegram-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-09 23:51:26,339 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-09 23:51:26,348 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-09 23:51:26,348 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-09 23:51:26,348 INFO [main] AppInfoParser: Kafka startTimeMs: 1720558286348
2024-07-09 23:51:26,348 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Subscribed to topic(s): telegram-receiver-user-request-topic
2024-07-09 23:51:26,631 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metadata: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-09 23:51:26,631 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] Metadata: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-09 23:51:26,633 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-09 23:51:26,633 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-09 23:51:26,635 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-09 23:51:26,635 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-09 23:51:26,648 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-telegram-notification-created-topic-2-6a83996a-b8de-4441-b46c-d95abde1e614
2024-07-09 23:51:26,648 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-telegram-notification-created-topic-1-a34b64e2-d603-4eb4-923a-0b93bf8d149a
2024-07-09 23:51:26,648 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-09 23:51:26,648 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-09 23:51:26,664 INFO [main] TelegramNotificationsApplication: Started TelegramNotificationsApplication in 4.174 seconds (process running for 4.588)
2024-07-09 23:51:42,395 TRACE [http-nio-8081-exec-7] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6e95995d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a629e67, org.springframework.security.web.context.SecurityContextHolderFilter@2afa1b1a, org.springframework.security.web.header.HeaderWriterFilter@7a4c1a6c, org.springframework.security.web.authentication.logout.LogoutFilter@49a0fe14, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@738b93a8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64547a83, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@9696762, org.springframework.security.web.access.ExceptionTranslationFilter@30be6a05, org.springframework.security.web.access.intercept.AuthorizationFilter@5c168f98]] (1/1)
2024-07-09 23:51:42,395 DEBUG [http-nio-8081-exec-7] FilterChainProxy: Securing POST /authentication/login/
2024-07-09 23:51:42,395 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:51:42,395 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:51:42,395 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:51:42,395 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:51:42,395 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:51:42,395 TRACE [http-nio-8081-exec-7] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:51:42,395 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:51:42,395 TRACE [http-nio-8081-exec-7] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:51:42,395 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:51:42,396 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:51:42,396 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:51:42,396 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:51:42,396 TRACE [http-nio-8081-exec-7] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /authentication/login/
2024-07-09 23:51:42,396 TRACE [http-nio-8081-exec-7] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /authentication/login/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@4920bd7
2024-07-09 23:51:42,396 TRACE [http-nio-8081-exec-7] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]] from SPRING_SECURITY_CONTEXT
2024-07-09 23:51:42,396 TRACE [http-nio-8081-exec-7] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]
2024-07-09 23:51:42,396 TRACE [http-nio-8081-exec-7] ExceptionTranslationFilter: Sending UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]] to access denied handler since access is denied
org.springframework.security.access.AccessDeniedException: Access Denied
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:98)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2024-07-09 23:51:42,396 DEBUG [http-nio-8081-exec-7] AccessDeniedHandlerImpl: Responding with 403 status code
2024-07-09 23:51:42,396 TRACE [http-nio-8081-exec-7] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-09 23:51:42,397 TRACE [http-nio-8081-exec-7] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6e95995d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a629e67, org.springframework.security.web.context.SecurityContextHolderFilter@2afa1b1a, org.springframework.security.web.header.HeaderWriterFilter@7a4c1a6c, org.springframework.security.web.authentication.logout.LogoutFilter@49a0fe14, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@738b93a8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64547a83, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@9696762, org.springframework.security.web.access.ExceptionTranslationFilter@30be6a05, org.springframework.security.web.access.intercept.AuthorizationFilter@5c168f98]] (1/1)
2024-07-09 23:51:42,397 DEBUG [http-nio-8081-exec-7] FilterChainProxy: Securing POST /error
2024-07-09 23:51:42,397 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:51:42,397 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:51:42,397 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:51:42,397 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:51:42,397 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:51:42,397 TRACE [http-nio-8081-exec-7] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:51:42,397 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:51:42,397 TRACE [http-nio-8081-exec-7] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:51:42,397 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:51:42,397 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:51:42,397 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:51:42,397 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:51:42,397 TRACE [http-nio-8081-exec-7] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /error
2024-07-09 23:51:42,397 TRACE [http-nio-8081-exec-7] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /error using org.springframework.security.authorization.AuthenticatedAuthorizationManager@660dd1ef
2024-07-09 23:51:42,397 TRACE [http-nio-8081-exec-7] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]] from SPRING_SECURITY_CONTEXT
2024-07-09 23:51:42,397 TRACE [http-nio-8081-exec-7] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]
2024-07-09 23:51:42,397 DEBUG [http-nio-8081-exec-7] FilterChainProxy: Secured POST /error
2024-07-09 23:51:45,572 TRACE [http-nio-8081-exec-8] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6e95995d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a629e67, org.springframework.security.web.context.SecurityContextHolderFilter@2afa1b1a, org.springframework.security.web.header.HeaderWriterFilter@7a4c1a6c, org.springframework.security.web.authentication.logout.LogoutFilter@49a0fe14, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@738b93a8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64547a83, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@9696762, org.springframework.security.web.access.ExceptionTranslationFilter@30be6a05, org.springframework.security.web.access.intercept.AuthorizationFilter@5c168f98]] (1/1)
2024-07-09 23:51:45,572 DEBUG [http-nio-8081-exec-8] FilterChainProxy: Securing GET /authentication/logout/
2024-07-09 23:51:45,572 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:51:45,572 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:51:45,572 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:51:45,572 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:51:45,572 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:51:45,572 TRACE [http-nio-8081-exec-8] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:51:45,572 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:51:45,572 TRACE [http-nio-8081-exec-8] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:51:45,572 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:51:45,572 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:51:45,572 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:51:45,572 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:51:45,572 TRACE [http-nio-8081-exec-8] RequestMatcherDelegatingAuthorizationManager: Authorizing GET /authentication/logout/
2024-07-09 23:51:45,573 TRACE [http-nio-8081-exec-8] RequestMatcherDelegatingAuthorizationManager: Checking authorization on GET /authentication/logout/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@660dd1ef
2024-07-09 23:51:45,573 TRACE [http-nio-8081-exec-8] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]] from SPRING_SECURITY_CONTEXT
2024-07-09 23:51:45,573 TRACE [http-nio-8081-exec-8] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]
2024-07-09 23:51:45,573 DEBUG [http-nio-8081-exec-8] FilterChainProxy: Secured GET /authentication/logout/
2024-07-09 23:51:45,573 DEBUG [http-nio-8081-exec-8] HttpSessionSecurityContextRepository: Removed SecurityContextImpl [Null authentication] from HttpSession [org.apache.catalina.session.StandardSessionFacade@30011762]
2024-07-09 23:51:45,573 TRACE [http-nio-8081-exec-8] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-09 23:51:47,381 TRACE [http-nio-8081-exec-9] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6e95995d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a629e67, org.springframework.security.web.context.SecurityContextHolderFilter@2afa1b1a, org.springframework.security.web.header.HeaderWriterFilter@7a4c1a6c, org.springframework.security.web.authentication.logout.LogoutFilter@49a0fe14, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@738b93a8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64547a83, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@9696762, org.springframework.security.web.access.ExceptionTranslationFilter@30be6a05, org.springframework.security.web.access.intercept.AuthorizationFilter@5c168f98]] (1/1)
2024-07-09 23:51:47,382 DEBUG [http-nio-8081-exec-9] FilterChainProxy: Securing POST /authentication/login/
2024-07-09 23:51:47,382 TRACE [http-nio-8081-exec-9] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:51:47,382 TRACE [http-nio-8081-exec-9] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:51:47,382 TRACE [http-nio-8081-exec-9] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:51:47,382 TRACE [http-nio-8081-exec-9] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:51:47,382 TRACE [http-nio-8081-exec-9] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:51:47,382 TRACE [http-nio-8081-exec-9] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:51:47,382 TRACE [http-nio-8081-exec-9] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:51:47,382 TRACE [http-nio-8081-exec-9] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:51:47,382 TRACE [http-nio-8081-exec-9] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:51:47,382 TRACE [http-nio-8081-exec-9] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:51:47,382 TRACE [http-nio-8081-exec-9] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:51:47,382 TRACE [http-nio-8081-exec-9] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:51:47,382 TRACE [http-nio-8081-exec-9] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /authentication/login/
2024-07-09 23:51:47,382 TRACE [http-nio-8081-exec-9] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /authentication/login/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@4920bd7
2024-07-09 23:51:47,382 TRACE [http-nio-8081-exec-9] HttpSessionSecurityContextRepository: Did not find SecurityContext in HttpSession 1BF553B0FCFC5CBC7FE7ADC7AE1F3D03 using the SPRING_SECURITY_CONTEXT session attribute
2024-07-09 23:51:47,382 TRACE [http-nio-8081-exec-9] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-09 23:51:47,382 TRACE [http-nio-8081-exec-9] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-09 23:51:47,382 TRACE [http-nio-8081-exec-9] AnonymousAuthenticationFilter: Set SecurityContextHolder to AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=1BF553B0FCFC5CBC7FE7ADC7AE1F3D03], Granted Authorities=[ROLE_ANONYMOUS]]
2024-07-09 23:51:47,382 DEBUG [http-nio-8081-exec-9] FilterChainProxy: Secured POST /authentication/login/
2024-07-09 23:51:47,383 TRACE [http-nio-8081-exec-9] ProviderManager: Authenticating request with DaoAuthenticationProvider (1/1)
2024-07-09 23:51:47,439 DEBUG [http-nio-8081-exec-9] DaoAuthenticationProvider: Authenticated user
2024-07-09 23:51:47,440 DEBUG [http-nio-8081-exec-9] HttpSessionSecurityContextRepository: Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@30011762]
2024-07-09 23:51:47,444 TRACE [http-nio-8081-exec-9] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-09 23:51:59,503 TRACE [http-nio-8081-exec-10] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6e95995d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a629e67, org.springframework.security.web.context.SecurityContextHolderFilter@2afa1b1a, org.springframework.security.web.header.HeaderWriterFilter@7a4c1a6c, org.springframework.security.web.authentication.logout.LogoutFilter@49a0fe14, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@738b93a8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64547a83, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@9696762, org.springframework.security.web.access.ExceptionTranslationFilter@30be6a05, org.springframework.security.web.access.intercept.AuthorizationFilter@5c168f98]] (1/1)
2024-07-09 23:51:59,504 DEBUG [http-nio-8081-exec-10] FilterChainProxy: Securing POST /receivers/create/
2024-07-09 23:51:59,504 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:51:59,504 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:51:59,504 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:51:59,504 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:51:59,504 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:51:59,504 TRACE [http-nio-8081-exec-10] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:51:59,504 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:51:59,504 TRACE [http-nio-8081-exec-10] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:51:59,504 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:51:59,504 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:51:59,504 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:51:59,504 TRACE [http-nio-8081-exec-10] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:51:59,504 TRACE [http-nio-8081-exec-10] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /receivers/create/
2024-07-09 23:51:59,504 TRACE [http-nio-8081-exec-10] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /receivers/create/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@660dd1ef
2024-07-09 23:51:59,504 TRACE [http-nio-8081-exec-10] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-09 23:51:59,504 TRACE [http-nio-8081-exec-10] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-09 23:51:59,504 DEBUG [http-nio-8081-exec-10] FilterChainProxy: Secured POST /receivers/create/
2024-07-09 23:51:59,512 TRACE [http-nio-8081-exec-10] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-09 23:51:59,513 INFO [kafka-producer-network-thread | emergency-producer-1] ReceiverServiceImpl: Message send successfully: telegram-receiver-user-request-topic-2@3
2024-07-09 23:52:02,545 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=3, memberId='consumer-telegram-notification-created-topic-1-a34b64e2-d603-4eb4-923a-0b93bf8d149a', protocol='range'}
2024-07-09 23:52:02,545 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=3, memberId='consumer-telegram-notification-created-topic-2-6a83996a-b8de-4441-b46c-d95abde1e614', protocol='range'}
2024-07-09 23:52:02,553 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Finished assignment for group at generation 3: {consumer-telegram-notification-created-topic-2-6a83996a-b8de-4441-b46c-d95abde1e614=Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]), consumer-telegram-notification-created-topic-1-a34b64e2-d603-4eb4-923a-0b93bf8d149a=Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2])}
2024-07-09 23:52:02,556 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=3, memberId='consumer-telegram-notification-created-topic-2-6a83996a-b8de-4441-b46c-d95abde1e614', protocol='range'}
2024-07-09 23:52:02,556 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=3, memberId='consumer-telegram-notification-created-topic-1-a34b64e2-d603-4eb4-923a-0b93bf8d149a', protocol='range'}
2024-07-09 23:52:02,556 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2])
2024-07-09 23:52:02,556 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2])
2024-07-09 23:52:02,558 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2
2024-07-09 23:52:02,558 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2
2024-07-09 23:52:02,560 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Found no committed offset for partition telegram-receiver-user-request-topic-0
2024-07-09 23:52:02,560 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Found no committed offset for partition telegram-receiver-user-request-topic-2
2024-07-09 23:52:02,560 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Found no committed offset for partition telegram-receiver-user-request-topic-1
2024-07-09 23:52:02,562 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Found no committed offset for partition telegram-receiver-user-request-topic-0
2024-07-09 23:52:02,562 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Found no committed offset for partition telegram-receiver-user-request-topic-2
2024-07-09 23:52:02,562 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Found no committed offset for partition telegram-receiver-user-request-topic-1
2024-07-09 23:52:02,564 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=0}}
2024-07-09 23:52:02,564 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=0}}
2024-07-09 23:52:02,564 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2024-07-09 23:52:02,565 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]
2024-07-09 23:52:02,570 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] SubscriptionState: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Resetting offset for partition telegram-receiver-user-request-topic-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=0}}.
2024-07-09 23:52:02,570 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] SubscriptionState: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Resetting offset for partition telegram-receiver-user-request-topic-1 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}.
2024-07-09 23:52:02,570 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] SubscriptionState: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Resetting offset for partition telegram-receiver-user-request-topic-2 to position FetchPosition{offset=4, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=0}}.
2024-07-09 23:52:02,573 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]
2024-07-09 23:54:20,942 INFO [main] TelegramNotificationsApplication: Starting TelegramNotificationsApplication using Java 17.0.10 with PID 19668 (D:\programming\java\emergency-ms\telegram-notifications\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-09 23:54:20,944 DEBUG [main] TelegramNotificationsApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-09 23:54:20,945 INFO [main] TelegramNotificationsApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-09 23:54:21,451 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-09 23:54:21,497 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 39 ms. Found 1 JPA repository interface.
2024-07-09 23:54:21,966 INFO [main] TomcatWebServer: Tomcat initialized with port 8083 (http)
2024-07-09 23:54:21,974 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8083"]
2024-07-09 23:54:21,976 INFO [main] StandardService: Starting service [Tomcat]
2024-07-09 23:54:21,976 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-09 23:54:22,033 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-09 23:54:22,034 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1045 ms
2024-07-09 23:54:22,218 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-09 23:54:22,352 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3344d163
2024-07-09 23:54:22,353 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-09 23:54:22,377 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_telegram_db (PostgreSQL 16.3)
2024-07-09 23:54:22,410 INFO [main] DbValidate: Successfully validated 1 migration (execution time 00:00.019s)
2024-07-09 23:54:22,448 INFO [main] DbMigrate: Current version of schema "public": 1.0
2024-07-09 23:54:22,451 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-09 23:54:22,508 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-09 23:54:22,549 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-09 23:54:22,578 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-09 23:54:22,800 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-09 23:54:23,386 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-09 23:54:23,390 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-09 23:54:23,809 WARN [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-09 23:54:24,109 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8083"]
2024-07-09 23:54:24,121 INFO [main] TomcatWebServer: Tomcat started on port 8083 (http) with context path '/'
2024-07-09 23:54:24,157 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092, localhost:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-telegram-notification-created-topic-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = telegram-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-09 23:54:24,196 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-09 23:54:24,284 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-09 23:54:24,284 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-09 23:54:24,284 INFO [main] AppInfoParser: Kafka startTimeMs: 1720558464283
2024-07-09 23:54:24,286 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Subscribed to topic(s): telegram-notification-created-topic
2024-07-09 23:54:24,292 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092, localhost:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-telegram-notification-created-topic-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = telegram-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-09 23:54:24,292 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-09 23:54:24,300 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-09 23:54:24,300 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-09 23:54:24,300 INFO [main] AppInfoParser: Kafka startTimeMs: 1720558464300
2024-07-09 23:54:24,300 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Subscribed to topic(s): telegram-receiver-user-request-topic
2024-07-09 23:54:24,571 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] Metadata: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-09 23:54:24,571 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metadata: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-09 23:54:24,577 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-09 23:54:24,577 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-09 23:54:24,579 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-09 23:54:24,579 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-09 23:54:24,592 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-telegram-notification-created-topic-1-2251a6d2-ff46-4ff6-88cb-29680b710a88
2024-07-09 23:54:24,592 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-telegram-notification-created-topic-2-e8bb19c4-1e2a-4aa6-9728-fbc30404d700
2024-07-09 23:54:24,592 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-09 23:54:24,592 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-09 23:54:24,609 INFO [main] TelegramNotificationsApplication: Started TelegramNotificationsApplication in 3.959 seconds (process running for 4.359)
2024-07-09 23:54:31,585 TRACE [http-nio-8081-exec-2] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6e95995d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a629e67, org.springframework.security.web.context.SecurityContextHolderFilter@2afa1b1a, org.springframework.security.web.header.HeaderWriterFilter@7a4c1a6c, org.springframework.security.web.authentication.logout.LogoutFilter@49a0fe14, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@738b93a8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64547a83, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@9696762, org.springframework.security.web.access.ExceptionTranslationFilter@30be6a05, org.springframework.security.web.access.intercept.AuthorizationFilter@5c168f98]] (1/1)
2024-07-09 23:54:31,585 DEBUG [http-nio-8081-exec-2] FilterChainProxy: Securing POST /receivers/create/
2024-07-09 23:54:31,585 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:54:31,585 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:54:31,585 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:54:31,586 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:54:31,586 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:54:31,586 TRACE [http-nio-8081-exec-2] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:54:31,586 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:54:31,586 TRACE [http-nio-8081-exec-2] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:54:31,586 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:54:31,586 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:54:31,586 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:54:31,586 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:54:31,586 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /receivers/create/
2024-07-09 23:54:31,586 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /receivers/create/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@660dd1ef
2024-07-09 23:54:31,586 TRACE [http-nio-8081-exec-2] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-09 23:54:31,586 TRACE [http-nio-8081-exec-2] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-09 23:54:31,586 DEBUG [http-nio-8081-exec-2] FilterChainProxy: Secured POST /receivers/create/
2024-07-09 23:54:31,593 INFO [kafka-producer-network-thread | emergency-producer-1] ReceiverServiceImpl: Message send successfully: telegram-receiver-user-request-topic-2@4
2024-07-09 23:54:31,594 TRACE [http-nio-8081-exec-2] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-09 23:54:59,900 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=4, memberId='consumer-telegram-notification-created-topic-1-2251a6d2-ff46-4ff6-88cb-29680b710a88', protocol='range'}
2024-07-09 23:54:59,900 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=4, memberId='consumer-telegram-notification-created-topic-2-e8bb19c4-1e2a-4aa6-9728-fbc30404d700', protocol='range'}
2024-07-09 23:54:59,906 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Finished assignment for group at generation 4: {consumer-telegram-notification-created-topic-1-2251a6d2-ff46-4ff6-88cb-29680b710a88=Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]), consumer-telegram-notification-created-topic-2-e8bb19c4-1e2a-4aa6-9728-fbc30404d700=Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2])}
2024-07-09 23:54:59,909 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=4, memberId='consumer-telegram-notification-created-topic-1-2251a6d2-ff46-4ff6-88cb-29680b710a88', protocol='range'}
2024-07-09 23:54:59,909 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=4, memberId='consumer-telegram-notification-created-topic-2-e8bb19c4-1e2a-4aa6-9728-fbc30404d700', protocol='range'}
2024-07-09 23:54:59,909 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2])
2024-07-09 23:54:59,909 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2])
2024-07-09 23:54:59,910 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2
2024-07-09 23:54:59,910 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2
2024-07-09 23:54:59,916 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=0}}
2024-07-09 23:54:59,916 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=0}}
2024-07-09 23:54:59,916 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=0}}
2024-07-09 23:54:59,917 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-2 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=0}}
2024-07-09 23:54:59,917 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2024-07-09 23:54:59,917 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2024-07-09 23:54:59,917 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]
2024-07-09 23:54:59,917 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]
2024-07-09 23:54:59,980 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 4 for partition telegram-receiver-user-request-topic-2
2024-07-09 23:54:59,981 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-09 23:55:00,474 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 4 for partition telegram-receiver-user-request-topic-2
2024-07-09 23:55:00,474 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-09 23:55:00,975 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 4 for partition telegram-receiver-user-request-topic-2
2024-07-09 23:55:00,975 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-09 23:55:01,478 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 4 for partition telegram-receiver-user-request-topic-2
2024-07-09 23:55:01,478 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-09 23:55:01,991 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 4 for partition telegram-receiver-user-request-topic-2
2024-07-09 23:55:01,991 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-09 23:55:02,505 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 4 for partition telegram-receiver-user-request-topic-2
2024-07-09 23:55:02,505 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-09 23:55:03,007 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 4 for partition telegram-receiver-user-request-topic-2
2024-07-09 23:55:03,007 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-09 23:55:03,522 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 4 for partition telegram-receiver-user-request-topic-2
2024-07-09 23:55:03,522 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-09 23:55:04,024 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 4 for partition telegram-receiver-user-request-topic-2
2024-07-09 23:55:04,024 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-09 23:55:04,528 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DefaultErrorHandler: Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for telegram-receiver-user-request-topic-2@4
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-09 23:57:36,928 TRACE [http-nio-8081-exec-6] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6e95995d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a629e67, org.springframework.security.web.context.SecurityContextHolderFilter@2afa1b1a, org.springframework.security.web.header.HeaderWriterFilter@7a4c1a6c, org.springframework.security.web.authentication.logout.LogoutFilter@49a0fe14, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@738b93a8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64547a83, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@9696762, org.springframework.security.web.access.ExceptionTranslationFilter@30be6a05, org.springframework.security.web.access.intercept.AuthorizationFilter@5c168f98]] (1/1)
2024-07-09 23:57:36,928 DEBUG [http-nio-8081-exec-6] FilterChainProxy: Securing POST /receivers/create/
2024-07-09 23:57:36,928 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:57:36,928 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:57:36,928 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:57:36,928 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:57:36,928 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:57:36,929 TRACE [http-nio-8081-exec-6] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:57:36,929 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:57:36,929 TRACE [http-nio-8081-exec-6] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:57:36,929 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:57:36,929 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:57:36,929 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:57:36,929 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:57:36,929 TRACE [http-nio-8081-exec-6] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /receivers/create/
2024-07-09 23:57:36,930 TRACE [http-nio-8081-exec-6] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /receivers/create/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@660dd1ef
2024-07-09 23:57:36,930 TRACE [http-nio-8081-exec-6] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-09 23:57:36,930 TRACE [http-nio-8081-exec-6] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-09 23:57:36,930 DEBUG [http-nio-8081-exec-6] FilterChainProxy: Secured POST /receivers/create/
2024-07-09 23:57:36,939 INFO [kafka-producer-network-thread | emergency-producer-1] ReceiverServiceImpl: Message send successfully: telegram-receiver-user-request-topic-2@5
2024-07-09 23:57:36,939 TRACE [http-nio-8081-exec-6] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-09 23:57:36,961 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 5 for partition telegram-receiver-user-request-topic-2
2024-07-09 23:57:36,961 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-09 23:57:37,464 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 5 for partition telegram-receiver-user-request-topic-2
2024-07-09 23:57:37,464 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-09 23:57:37,979 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 5 for partition telegram-receiver-user-request-topic-2
2024-07-09 23:57:37,979 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-09 23:57:38,492 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 5 for partition telegram-receiver-user-request-topic-2
2024-07-09 23:57:38,492 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-09 23:57:38,993 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 5 for partition telegram-receiver-user-request-topic-2
2024-07-09 23:57:38,993 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-09 23:57:39,509 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 5 for partition telegram-receiver-user-request-topic-2
2024-07-09 23:57:39,509 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-09 23:57:40,025 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 5 for partition telegram-receiver-user-request-topic-2
2024-07-09 23:57:40,025 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-09 23:57:40,526 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 5 for partition telegram-receiver-user-request-topic-2
2024-07-09 23:57:40,526 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-09 23:57:41,030 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 5 for partition telegram-receiver-user-request-topic-2
2024-07-09 23:57:41,030 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-09 23:57:41,517 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DefaultErrorHandler: Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for telegram-receiver-user-request-topic-2@5
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-09 23:58:19,556 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node -2 disconnected.
2024-07-09 23:58:19,557 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node -1 disconnected.
2024-07-09 23:58:19,587 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node -1 disconnected.
2024-07-09 23:58:19,587 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node -2 disconnected.
2024-07-09 23:59:29,308 INFO [background-preinit] Version: HV000001: Hibernate Validator 8.0.1.Final
2024-07-09 23:59:29,337 INFO [main] EmergencyApplication: Starting EmergencyApplication using Java 17.0.10 with PID 1680 (D:\programming\java\emergency-ms\emergency\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-09 23:59:29,337 DEBUG [main] EmergencyApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-09 23:59:29,338 INFO [main] EmergencyApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-09 23:59:29,893 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-09 23:59:29,950 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 50 ms. Found 3 JPA repository interfaces.
2024-07-09 23:59:30,434 INFO [main] TomcatWebServer: Tomcat initialized with port 8081 (http)
2024-07-09 23:59:30,441 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8081"]
2024-07-09 23:59:30,442 INFO [main] StandardService: Starting service [Tomcat]
2024-07-09 23:59:30,442 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-09 23:59:30,490 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-09 23:59:30,492 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1125 ms
2024-07-09 23:59:30,692 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-09 23:59:30,829 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1abcd059
2024-07-09 23:59:30,830 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-09 23:59:30,855 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_notifications_db (PostgreSQL 16.3)
2024-07-09 23:59:30,889 INFO [main] DbValidate: Successfully validated 2 migrations (execution time 00:00.020s)
2024-07-09 23:59:30,923 INFO [main] DbMigrate: Current version of schema "public": 1.1
2024-07-09 23:59:30,925 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-09 23:59:30,982 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-09 23:59:31,029 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-09 23:59:31,057 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-09 23:59:31,291 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-09 23:59:31,817 INFO [main] EntityInstantiatorPojoStandard: HHH000182: No default (no-argument) constructor for class: org.example.emergency.entity.EmergencyCall (class must be instantiated by Interceptor)
2024-07-09 23:59:32,014 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-09 23:59:32,016 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-09 23:59:32,286 TRACE [main] AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer: Eagerly initializing {securityConfig=org.example.emergency.config.SecurityConfig$$SpringCGLIB$$0@64ff0eaa}
2024-07-09 23:59:32,299 INFO [main] InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer: Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-07-09 23:59:32,300 WARN [main] InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer: Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-07-09 23:59:32,370 INFO [main] QueryEnhancerFactory: Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-09 23:59:32,410 WARN [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-09 23:59:32,604 DEBUG [main] DefaultSecurityFilterChain: Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-09 23:59:32,813 INFO [main] AdminClientConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-07-09 23:59:32,892 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-09 23:59:32,892 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-09 23:59:32,892 INFO [main] AppInfoParser: Kafka startTimeMs: 1720558772891
2024-07-09 23:59:33,136 INFO [kafka-admin-client-thread | emergency-admin-0] AppInfoParser: App info kafka.admin.client for emergency-admin-0 unregistered
2024-07-09 23:59:33,139 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics scheduler closed
2024-07-09 23:59:33,139 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-09 23:59:33,139 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics reporters closed
2024-07-09 23:59:33,143 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8081"]
2024-07-09 23:59:33,152 INFO [main] TomcatWebServer: Tomcat started on port 8081 (http) with context path '/'
2024-07-09 23:59:33,159 INFO [main] EmergencyApplication: Started EmergencyApplication in 4.094 seconds (process running for 4.464)
2024-07-09 23:59:41,188 INFO [main] TelegramNotificationsApplication: Starting TelegramNotificationsApplication using Java 17.0.10 with PID 13744 (D:\programming\java\emergency-ms\telegram-notifications\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-09 23:59:41,188 DEBUG [main] TelegramNotificationsApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-09 23:59:41,189 INFO [main] TelegramNotificationsApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-09 23:59:41,668 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-09 23:59:41,711 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 37 ms. Found 1 JPA repository interface.
2024-07-09 23:59:42,171 INFO [main] TomcatWebServer: Tomcat initialized with port 8083 (http)
2024-07-09 23:59:42,178 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8083"]
2024-07-09 23:59:42,179 INFO [main] StandardService: Starting service [Tomcat]
2024-07-09 23:59:42,180 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-09 23:59:42,229 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-09 23:59:42,230 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1002 ms
2024-07-09 23:59:42,411 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-09 23:59:42,538 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2fde9469
2024-07-09 23:59:42,539 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-09 23:59:42,561 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_telegram_db (PostgreSQL 16.3)
2024-07-09 23:59:42,598 INFO [main] DbValidate: Successfully validated 1 migration (execution time 00:00.021s)
2024-07-09 23:59:42,628 INFO [main] DbMigrate: Current version of schema "public": 1.0
2024-07-09 23:59:42,630 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-09 23:59:42,698 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-09 23:59:42,737 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-09 23:59:42,762 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-09 23:59:42,988 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-09 23:59:43,555 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-09 23:59:43,559 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-09 23:59:43,964 WARN [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-09 23:59:44,250 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8083"]
2024-07-09 23:59:44,264 INFO [main] TomcatWebServer: Tomcat started on port 8083 (http) with context path '/'
2024-07-09 23:59:44,297 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092, localhost:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-telegram-notification-created-topic-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = telegram-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-09 23:59:44,335 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-09 23:59:44,434 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-09 23:59:44,434 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-09 23:59:44,434 INFO [main] AppInfoParser: Kafka startTimeMs: 1720558784433
2024-07-09 23:59:44,436 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Subscribed to topic(s): telegram-receiver-user-request-topic
2024-07-09 23:59:44,729 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metadata: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-09 23:59:44,730 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-09 23:59:44,733 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-09 23:59:44,741 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-telegram-notification-created-topic-1-c6b27330-b6d9-43b9-9048-6c4da09f36b0
2024-07-09 23:59:44,742 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-09 23:59:44,759 INFO [main] TelegramNotificationsApplication: Started TelegramNotificationsApplication in 3.843 seconds (process running for 4.213)
2024-07-09 23:59:53,754 INFO [http-nio-8081-exec-1] [/]: Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-09 23:59:53,754 INFO [http-nio-8081-exec-1] DispatcherServlet: Initializing Servlet 'dispatcherServlet'
2024-07-09 23:59:53,756 INFO [http-nio-8081-exec-1] DispatcherServlet: Completed initialization in 2 ms
2024-07-09 23:59:53,770 TRACE [http-nio-8081-exec-1] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@4dc74a1b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@52a1768b, org.springframework.security.web.context.SecurityContextHolderFilter@452ea8f0, org.springframework.security.web.header.HeaderWriterFilter@6f749a1f, org.springframework.security.web.authentication.logout.LogoutFilter@7aecff85, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@46f3d0f7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@354baab2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4cb76a35, org.springframework.security.web.access.ExceptionTranslationFilter@41c05747, org.springframework.security.web.access.intercept.AuthorizationFilter@34714012]] (1/1)
2024-07-09 23:59:53,771 DEBUG [http-nio-8081-exec-1] FilterChainProxy: Securing POST /authentication/login/
2024-07-09 23:59:53,771 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-09 23:59:53,772 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-09 23:59:53,774 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-09 23:59:53,775 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-09 23:59:53,776 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-09 23:59:53,776 TRACE [http-nio-8081-exec-1] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-09 23:59:53,776 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-09 23:59:53,776 TRACE [http-nio-8081-exec-1] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-09 23:59:53,776 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-09 23:59:53,777 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-09 23:59:53,777 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-09 23:59:53,777 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-09 23:59:53,778 TRACE [http-nio-8081-exec-1] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /authentication/login/
2024-07-09 23:59:53,778 TRACE [http-nio-8081-exec-1] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /authentication/login/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@8590cb
2024-07-09 23:59:53,778 TRACE [http-nio-8081-exec-1] HttpSessionSecurityContextRepository: No HttpSession currently exists
2024-07-09 23:59:53,778 TRACE [http-nio-8081-exec-1] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-09 23:59:53,778 TRACE [http-nio-8081-exec-1] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-09 23:59:53,779 TRACE [http-nio-8081-exec-1] AnonymousAuthenticationFilter: Set SecurityContextHolder to AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]]
2024-07-09 23:59:53,780 DEBUG [http-nio-8081-exec-1] FilterChainProxy: Secured POST /authentication/login/
2024-07-09 23:59:53,842 TRACE [http-nio-8081-exec-1] ProviderManager: Authenticating request with DaoAuthenticationProvider (1/1)
2024-07-09 23:59:54,072 DEBUG [http-nio-8081-exec-1] DaoAuthenticationProvider: Authenticated user
2024-07-09 23:59:54,090 DEBUG [http-nio-8081-exec-1] HttpSessionSecurityContextRepository: Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@172c2860]
2024-07-09 23:59:54,108 TRACE [http-nio-8081-exec-1] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-10 00:00:01,140 TRACE [http-nio-8081-exec-4] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@4dc74a1b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@52a1768b, org.springframework.security.web.context.SecurityContextHolderFilter@452ea8f0, org.springframework.security.web.header.HeaderWriterFilter@6f749a1f, org.springframework.security.web.authentication.logout.LogoutFilter@7aecff85, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@46f3d0f7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@354baab2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4cb76a35, org.springframework.security.web.access.ExceptionTranslationFilter@41c05747, org.springframework.security.web.access.intercept.AuthorizationFilter@34714012]] (1/1)
2024-07-10 00:00:01,142 DEBUG [http-nio-8081-exec-4] FilterChainProxy: Securing POST /receivers/create/
2024-07-10 00:00:01,142 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:00:01,142 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:00:01,142 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:00:01,142 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:00:01,142 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:00:01,143 TRACE [http-nio-8081-exec-4] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:00:01,143 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:00:01,143 TRACE [http-nio-8081-exec-4] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:00:01,143 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:00:01,143 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:00:01,143 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:00:01,143 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:00:01,143 TRACE [http-nio-8081-exec-4] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /receivers/create/
2024-07-10 00:00:01,143 TRACE [http-nio-8081-exec-4] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /receivers/create/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@631fd2d6
2024-07-10 00:00:01,143 TRACE [http-nio-8081-exec-4] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-10 00:00:01,143 TRACE [http-nio-8081-exec-4] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-10 00:00:01,143 DEBUG [http-nio-8081-exec-4] FilterChainProxy: Secured POST /receivers/create/
2024-07-10 00:00:01,173 INFO [http-nio-8081-exec-4] ProducerConfig: ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092, localhost:9094]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 10000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 5000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2024-07-10 00:00:01,189 INFO [http-nio-8081-exec-4] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-10 00:00:01,196 INFO [http-nio-8081-exec-4] KafkaProducer: [Producer clientId=emergency-producer-1] Instantiated an idempotent producer.
2024-07-10 00:00:01,213 INFO [http-nio-8081-exec-4] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:00:01,214 INFO [http-nio-8081-exec-4] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:00:01,214 INFO [http-nio-8081-exec-4] AppInfoParser: Kafka startTimeMs: 1720558801213
2024-07-10 00:00:01,230 INFO [kafka-producer-network-thread | emergency-producer-1] Metadata: [Producer clientId=emergency-producer-1] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-10 00:00:01,288 TRACE [http-nio-8081-exec-4] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-10 00:00:01,340 INFO [kafka-producer-network-thread | emergency-producer-1] TransactionManager: [Producer clientId=emergency-producer-1] ProducerId set to 2000 with epoch 0
2024-07-10 00:00:01,365 INFO [kafka-producer-network-thread | emergency-producer-1] ReceiverServiceImpl: Message send successfully: telegram-receiver-user-request-topic-1@0
2024-07-10 00:00:21,696 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=5, memberId='consumer-telegram-notification-created-topic-1-c6b27330-b6d9-43b9-9048-6c4da09f36b0', protocol='range'}
2024-07-10 00:00:21,703 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Finished assignment for group at generation 5: {consumer-telegram-notification-created-topic-1-c6b27330-b6d9-43b9-9048-6c4da09f36b0=Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2])}
2024-07-10 00:00:21,706 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=5, memberId='consumer-telegram-notification-created-topic-1-c6b27330-b6d9-43b9-9048-6c4da09f36b0', protocol='range'}
2024-07-10 00:00:21,706 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2])
2024-07-10 00:00:21,708 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2
2024-07-10 00:00:21,714 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=0}}
2024-07-10 00:00:21,714 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-2 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=0}}
2024-07-10 00:00:21,714 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=0}}
2024-07-10 00:00:21,715 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]
2024-07-10 00:00:21,773 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Seeking to offset 0 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:00:21,774 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:00:22,274 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Seeking to offset 0 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:00:22,274 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:00:22,786 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Seeking to offset 0 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:00:22,786 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:00:23,006 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node -1 disconnected.
2024-07-10 00:00:23,288 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Seeking to offset 0 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:00:23,288 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:00:23,790 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Seeking to offset 0 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:00:23,790 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:00:24,307 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Seeking to offset 0 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:00:24,307 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:00:24,810 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Seeking to offset 0 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:00:24,810 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:00:25,313 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Seeking to offset 0 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:00:25,313 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:00:25,816 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Seeking to offset 0 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:00:25,816 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:00:26,319 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DefaultErrorHandler: Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for telegram-receiver-user-request-topic-1@0
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:00:36,573 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:36,573 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:36,574 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Cancelled in-flight FETCH request with correlation id 7220 due to node 2 being disconnected (elapsed time since creation: 89ms, elapsed time since send: 89ms, request timeout: 30000ms)
2024-07-10 00:00:36,574 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 2 disconnected.
2024-07-10 00:00:36,574 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Cancelled in-flight FETCH request with correlation id 116 due to node 2 being disconnected (elapsed time since creation: 104ms, elapsed time since send: 104ms, request timeout: 30000ms)
2024-07-10 00:00:36,575 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=1558296148, epoch=29) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:00:36,574 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=19023599, epoch=2268) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:00:36,576 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node -2 disconnected.
2024-07-10 00:00:36,576 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node -2 disconnected.
2024-07-10 00:00:36,660 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:36,661 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:36,661 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=19023599, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:00:36,723 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:36,723 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:36,723 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=1558296148, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:00:36,987 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:36,988 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:36,988 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=19023599, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:00:36,988 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:36,988 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:36,988 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=1558296148, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:00:37,491 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:37,491 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:37,491 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=19023599, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:00:37,491 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:37,491 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:37,491 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=1558296148, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:00:37,573 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node -1 disconnected.
2024-07-10 00:00:37,573 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-10 00:00:37,573 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-10 00:00:37,573 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Cancelled in-flight FETCH request with correlation id 128 due to node 1 being disconnected (elapsed time since creation: 83ms, elapsed time since send: 83ms, request timeout: 30000ms)
2024-07-10 00:00:37,573 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2147483646 disconnected.
2024-07-10 00:00:37,573 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node -1 disconnected.
2024-07-10 00:00:37,573 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=1354910809, epoch=41) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:00:37,573 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Cancelled in-flight FETCH request with correlation id 7230 due to node 1 being disconnected (elapsed time since creation: 83ms, elapsed time since send: 83ms, request timeout: 30000ms)
2024-07-10 00:00:37,573 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: true. Rediscovery will be attempted.
2024-07-10 00:00:37,574 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=1330392709, epoch=2270) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:00:37,574 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-10 00:00:37,574 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Cancelled in-flight METADATA request with correlation id 10 due to node 1 being disconnected (elapsed time since creation: 0ms, elapsed time since send: 0ms, request timeout: 5000ms)
2024-07-10 00:00:37,679 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-10 00:00:37,679 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:37,679 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=1330392709, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:00:37,995 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-10 00:00:37,996 INFO [kafka-coordinator-heartbeat-thread | telegram-notification-created-topic] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2147483646 disconnected.
2024-07-10 00:00:37,996 WARN [kafka-coordinator-heartbeat-thread | telegram-notification-created-topic] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2147483646 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:37,996 INFO [kafka-coordinator-heartbeat-thread | telegram-notification-created-topic] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: true. Rediscovery will be attempted.
2024-07-10 00:00:37,996 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-10 00:00:37,996 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:37,996 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:37,996 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:37,996 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=1558296148, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:00:37,996 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=1354910809, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:00:37,997 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-10 00:00:37,997 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-10 00:00:37,997 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-10 00:00:38,183 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-10 00:00:38,183 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:38,183 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:38,183 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:38,183 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=19023599, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:00:38,183 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=1330392709, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:00:38,495 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-10 00:00:38,496 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:38,496 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=1330392709, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:00:38,512 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-10 00:00:38,513 INFO [kafka-coordinator-heartbeat-thread | telegram-notification-created-topic] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2147483646 disconnected.
2024-07-10 00:00:38,513 WARN [kafka-coordinator-heartbeat-thread | telegram-notification-created-topic] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2147483646 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:38,513 INFO [kafka-coordinator-heartbeat-thread | telegram-notification-created-topic] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: true. Rediscovery will be attempted.
2024-07-10 00:00:38,513 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-10 00:00:38,514 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:38,514 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=1354910809, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:00:38,514 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-10 00:00:38,514 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Group coordinator localhost:9092 (id: 2147483646 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: false. Rediscovery will be attempted.
2024-07-10 00:00:38,514 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Requesting disconnect from last known coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-10 00:00:38,616 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-10 00:00:38,616 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Cancelled in-flight FETCH request with correlation id 7233 due to node 3 being disconnected (elapsed time since creation: 434ms, elapsed time since send: 434ms, request timeout: 30000ms)
2024-07-10 00:00:38,616 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Cancelled in-flight METADATA request with correlation id 7236 due to node 3 being disconnected (elapsed time since creation: 232ms, elapsed time since send: 232ms, request timeout: 30000ms)
2024-07-10 00:00:38,616 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=1267305723, epoch=2273) to node 3:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:00:38,618 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2147483644 disconnected.
2024-07-10 00:00:38,618 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Group coordinator localhost:9096 (id: 2147483644 rack: null) is unavailable or invalid due to cause: coordinator unavailable. isDisconnected: true. Rediscovery will be attempted.
2024-07-10 00:00:38,618 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 3 disconnected.
2024-07-10 00:00:38,619 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 2 disconnected.
2024-07-10 00:00:38,619 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:38,632 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-10 00:00:38,632 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Cancelled in-flight FETCH request with correlation id 138 due to node 3 being disconnected (elapsed time since creation: 119ms, elapsed time since send: 118ms, request timeout: 30000ms)
2024-07-10 00:00:38,632 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Cancelled in-flight FIND_COORDINATOR request with correlation id 140 due to node 3 being disconnected (elapsed time since creation: 0ms, elapsed time since send: 0ms, request timeout: 30000ms)
2024-07-10 00:00:38,632 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=1723457991, epoch=33) to node 3:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:00:38,736 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-10 00:00:38,737 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:00:38,745 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-10 00:00:38,746 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:38,970 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:38,970 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:38,979 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 3 disconnected.
2024-07-10 00:00:38,980 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:00:39,403 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 2 disconnected.
2024-07-10 00:00:39,404 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:39,424 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-10 00:00:39,425 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:39,437 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:39,438 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:39,561 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-10 00:00:39,562 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:39,782 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-10 00:00:39,782 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:00:39,908 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-10 00:00:39,908 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:00:40,191 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-10 00:00:40,192 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:00:40,237 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:40,237 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:40,318 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-10 00:00:40,318 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:40,333 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-10 00:00:40,334 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:40,365 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-10 00:00:40,365 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:00:41,072 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:41,072 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:41,244 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-10 00:00:41,244 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:41,260 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 3 disconnected.
2024-07-10 00:00:41,260 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:00:41,338 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 2 disconnected.
2024-07-10 00:00:41,338 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:41,355 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-10 00:00:41,355 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:41,355 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-10 00:00:41,355 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:00:41,355 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=1723457991, epoch=INITIAL) to node 3:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:00:41,355 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=1354910809, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:00:41,370 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:41,370 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:41,999 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-10 00:00:42,000 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:00:42,000 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=1267305723, epoch=INITIAL) to node 3:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:00:42,078 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:42,078 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:42,205 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-10 00:00:42,205 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:42,348 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-10 00:00:42,349 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:42,379 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:42,379 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:43,082 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-10 00:00:43,082 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:00:43,362 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 3 disconnected.
2024-07-10 00:00:43,363 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:00:43,394 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-10 00:00:43,394 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:00:44,084 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-10 00:00:44,084 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:44,367 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 2 disconnected.
2024-07-10 00:00:44,367 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:44,383 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-10 00:00:44,383 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:45,087 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:45,087 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:45,326 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-10 00:00:45,326 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:45,388 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:45,388 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:46,095 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-10 00:00:46,095 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:00:46,330 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 3 disconnected.
2024-07-10 00:00:46,330 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:00:46,362 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-10 00:00:46,362 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:46,362 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:46,362 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:46,362 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=1558296148, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:00:46,362 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=1354910809, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:00:46,377 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-10 00:00:46,377 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:00:47,006 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-10 00:00:47,006 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:47,006 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:47,006 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:47,006 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=19023599, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:00:47,006 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=1330392709, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:00:47,068 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-10 00:00:47,068 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:00:47,318 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 2 disconnected.
2024-07-10 00:00:47,319 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:47,380 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-10 00:00:47,380 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:00:47,947 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-10 00:00:47,948 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:48,073 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:48,073 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:48,322 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-10 00:00:48,322 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:48,385 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:48,385 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:49,074 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-10 00:00:49,074 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:00:49,278 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-10 00:00:49,278 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:49,294 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 3 disconnected.
2024-07-10 00:00:49,294 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:00:49,389 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-10 00:00:49,389 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:00:50,082 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-10 00:00:50,082 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:50,300 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 2 disconnected.
2024-07-10 00:00:50,300 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:50,393 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:50,393 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:51,054 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:51,054 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:51,070 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-10 00:00:51,071 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:00:51,308 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-10 00:00:51,308 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:51,372 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-10 00:00:51,372 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:51,372 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=1354910809, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:00:51,386 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-10 00:00:51,386 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:51,387 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-10 00:00:51,387 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:00:52,017 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:52,017 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:52,018 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=19023599, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:00:52,080 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:52,080 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:52,316 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 3 disconnected.
2024-07-10 00:00:52,316 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:00:52,348 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-10 00:00:52,348 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:52,394 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-10 00:00:52,394 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:00:53,084 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-10 00:00:53,084 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:00:53,271 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:53,271 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:53,319 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 2 disconnected.
2024-07-10 00:00:53,319 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:53,384 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-10 00:00:53,384 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:53,384 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-10 00:00:53,384 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:00:54,027 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-10 00:00:54,027 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:54,029 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:54,029 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:54,090 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-10 00:00:54,090 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:00:54,152 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:54,152 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:54,323 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-10 00:00:54,323 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:55,061 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-10 00:00:55,061 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:55,139 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-10 00:00:55,139 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:00:55,155 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-10 00:00:55,155 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:55,329 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 3 disconnected.
2024-07-10 00:00:55,330 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:00:56,039 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:56,039 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:56,069 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:56,069 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:56,147 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-10 00:00:56,147 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:00:56,163 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-10 00:00:56,163 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:56,335 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 2 disconnected.
2024-07-10 00:00:56,335 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:56,383 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-10 00:00:56,384 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:56,384 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-10 00:00:56,384 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:00:56,384 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=1723457991, epoch=INITIAL) to node 3:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:00:56,384 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=1354910809, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:00:57,028 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:57,028 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:57,028 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=19023599, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:00:57,075 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:57,075 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:57,343 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-10 00:00:57,343 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:58,036 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-10 00:00:58,036 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:00:58,068 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-10 00:00:58,068 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:00:58,348 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 3 disconnected.
2024-07-10 00:00:58,349 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:00:59,007 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-10 00:00:59,008 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:59,038 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-10 00:00:59,038 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:00:59,054 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-10 00:00:59,054 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:00:59,353 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 2 disconnected.
2024-07-10 00:00:59,354 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:00,030 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-10 00:01:00,030 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:00,062 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-10 00:01:00,062 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:00,360 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-10 00:01:00,361 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:01,033 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-10 00:01:01,033 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:01,064 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-10 00:01:01,064 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:01,362 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 3 disconnected.
2024-07-10 00:01:01,363 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:01,393 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-10 00:01:01,394 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:01,394 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-10 00:01:01,394 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:01,394 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=1558296148, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:01:01,394 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=1354910809, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:01:02,037 INFO [kafka-coordinator-heartbeat-thread | email-notification-created-topic] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-10 00:01:02,037 WARN [kafka-coordinator-heartbeat-thread | email-notification-created-topic] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:02,038 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-10 00:01:02,038 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:02,038 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-10 00:01:02,038 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:02,038 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=1267305723, epoch=INITIAL) to node 3:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:01:02,038 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=1330392709, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:01:02,068 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-10 00:01:02,068 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:02,364 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 2 disconnected.
2024-07-10 00:01:02,365 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:03,052 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-10 00:01:03,052 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-10 00:01:03,052 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:03,053 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:03,082 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-10 00:01:03,082 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:03,377 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-10 00:01:03,378 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:04,052 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-10 00:01:04,052 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:04,084 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-10 00:01:04,084 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:04,383 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 3 disconnected.
2024-07-10 00:01:04,383 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:05,060 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-10 00:01:05,060 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:05,091 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-10 00:01:05,092 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:05,388 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 2 disconnected.
2024-07-10 00:01:05,389 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:06,046 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-10 00:01:06,046 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:06,092 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-10 00:01:06,092 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:06,393 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-10 00:01:06,394 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:06,409 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-10 00:01:06,410 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:06,410 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-10 00:01:06,410 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:06,410 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=1723457991, epoch=INITIAL) to node 3:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:01:06,410 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=1354910809, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:01:06,927 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-10 00:01:06,928 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:07,038 INFO [kafka-coordinator-heartbeat-thread | email-notification-created-topic] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-10 00:01:07,038 WARN [kafka-coordinator-heartbeat-thread | email-notification-created-topic] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:07,039 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-10 00:01:07,039 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:07,039 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=19023599, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:01:07,070 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-10 00:01:07,070 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:07,321 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 3 disconnected.
2024-07-10 00:01:07,322 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:07,322 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 2 disconnected.
2024-07-10 00:01:07,322 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:07,915 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-10 00:01:07,915 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:08,042 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-10 00:01:08,042 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:08,073 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-10 00:01:08,073 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:08,326 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-10 00:01:08,326 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:08,924 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-10 00:01:08,924 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:09,018 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-10 00:01:09,018 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:09,019 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-10 00:01:09,019 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:09,252 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 3 disconnected.
2024-07-10 00:01:09,252 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:09,253 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 2 disconnected.
2024-07-10 00:01:09,253 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:09,331 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-10 00:01:09,331 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:09,926 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-10 00:01:09,926 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:10,020 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-10 00:01:10,020 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:10,346 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 3 disconnected.
2024-07-10 00:01:10,346 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:10,801 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-10 00:01:10,801 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:10,911 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-10 00:01:10,911 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:11,021 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-10 00:01:11,021 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:11,352 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 2 disconnected.
2024-07-10 00:01:11,353 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:11,415 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-10 00:01:11,415 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:11,415 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-10 00:01:11,415 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:11,415 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=1723457991, epoch=INITIAL) to node 3:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:01:11,415 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=1558296148, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:01:11,914 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-10 00:01:11,914 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:12,024 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-10 00:01:12,024 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:12,040 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-10 00:01:12,040 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:12,040 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-10 00:01:12,040 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:12,041 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=19023599, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:01:12,041 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=1330392709, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:01:12,243 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-10 00:01:12,243 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:12,353 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 3 disconnected.
2024-07-10 00:01:12,354 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:12,929 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-10 00:01:12,929 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:13,038 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-10 00:01:13,038 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:13,367 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 2 disconnected.
2024-07-10 00:01:13,368 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:13,931 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-10 00:01:13,931 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:14,025 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-10 00:01:14,025 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:14,373 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-10 00:01:14,373 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:14,938 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-10 00:01:14,938 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:15,032 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-10 00:01:15,032 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:15,376 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 3 disconnected.
2024-07-10 00:01:15,377 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:15,820 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-10 00:01:15,821 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:15,821 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-10 00:01:15,821 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:15,945 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-10 00:01:15,945 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:16,038 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-10 00:01:16,038 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:16,386 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 2 disconnected.
2024-07-10 00:01:16,386 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:16,417 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-10 00:01:16,418 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:16,418 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-10 00:01:16,418 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:16,418 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=1558296148, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:01:16,418 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=1354910809, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:01:16,953 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-10 00:01:16,953 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:17,047 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-10 00:01:17,047 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:17,047 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-10 00:01:17,047 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:17,047 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-10 00:01:17,047 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:17,048 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=19023599, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:01:17,048 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=1330392709, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:01:17,396 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-10 00:01:17,397 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:17,975 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-10 00:01:17,975 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:18,007 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-10 00:01:18,007 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:18,054 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-10 00:01:18,055 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:18,401 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 3 disconnected.
2024-07-10 00:01:18,401 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:18,854 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-10 00:01:18,854 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:18,964 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-10 00:01:18,964 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:19,043 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-10 00:01:19,044 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:19,403 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 2 disconnected.
2024-07-10 00:01:19,404 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:19,923 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-10 00:01:19,924 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:19,971 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-10 00:01:19,971 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:20,049 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-10 00:01:20,049 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:20,407 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-10 00:01:20,408 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:20,958 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-10 00:01:20,958 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:20,972 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-10 00:01:20,972 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:21,050 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-10 00:01:21,052 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:21,408 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 3 disconnected.
2024-07-10 00:01:21,409 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:21,425 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 1 disconnected.
2024-07-10 00:01:21,425 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:21,425 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-10 00:01:21,425 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:21,425 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=1558296148, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:01:21,425 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Error sending fetch request (sessionId=1354910809, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:01:21,973 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-10 00:01:21,973 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:22,052 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 3 disconnected.
2024-07-10 00:01:22,052 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:22,052 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-10 00:01:22,052 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:22,052 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-10 00:01:22,052 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:22,052 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=19023599, epoch=INITIAL) to node 2:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:01:22,052 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] FetchSessionHandler: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Error sending fetch request (sessionId=1330392709, epoch=INITIAL) to node 1:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-10 00:01:22,412 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 2 disconnected.
2024-07-10 00:01:22,413 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:22,926 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 3 disconnected.
2024-07-10 00:01:22,926 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 3 (localhost/127.0.0.1:9096) could not be established. Node may not be available.
2024-07-10 00:01:23,067 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node 2 disconnected.
2024-07-10 00:01:23,067 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:23,082 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 1 disconnected.
2024-07-10 00:01:23,082 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:23,082 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Node 2 disconnected.
2024-07-10 00:01:23,083 WARN [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-email-notification-created-topic-1, groupId=email-notification-created-topic] Connection to node 2 (localhost/127.0.0.1:9094) could not be established. Node may not be available.
2024-07-10 00:01:23,425 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 1 disconnected.
2024-07-10 00:01:23,425 WARN [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Connection to node 1 (localhost/127.0.0.1:9092) could not be established. Node may not be available.
2024-07-10 00:01:58,605 INFO [main] TelegramNotificationsApplication: Starting TelegramNotificationsApplication using Java 17.0.10 with PID 15700 (D:\programming\java\emergency-ms\telegram-notifications\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-10 00:01:58,606 DEBUG [main] TelegramNotificationsApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-10 00:01:58,607 INFO [main] TelegramNotificationsApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-10 00:01:59,084 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 00:01:59,128 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 37 ms. Found 1 JPA repository interface.
2024-07-10 00:01:59,582 INFO [main] TomcatWebServer: Tomcat initialized with port 8083 (http)
2024-07-10 00:01:59,590 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8083"]
2024-07-10 00:01:59,592 INFO [main] StandardService: Starting service [Tomcat]
2024-07-10 00:01:59,592 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 00:01:59,647 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-10 00:01:59,648 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1003 ms
2024-07-10 00:01:59,831 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-10 00:01:59,965 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1ecf0ac6
2024-07-10 00:01:59,967 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-10 00:01:59,993 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_telegram_db (PostgreSQL 16.3)
2024-07-10 00:02:00,028 INFO [main] DbValidate: Successfully validated 1 migration (execution time 00:00.022s)
2024-07-10 00:02:00,059 INFO [main] DbMigrate: Current version of schema "public": 1.0
2024-07-10 00:02:00,062 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-10 00:02:00,130 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 00:02:00,172 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 00:02:00,200 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-10 00:02:00,440 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 00:02:01,022 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 00:02:01,025 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 00:02:01,438 WARN [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-10 00:02:01,739 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8083"]
2024-07-10 00:02:01,752 INFO [main] TomcatWebServer: Tomcat started on port 8083 (http) with context path '/'
2024-07-10 00:02:01,785 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092, localhost:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-telegram-notification-created-topic-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = telegram-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-10 00:02:01,818 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-10 00:02:01,917 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:02:01,917 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:02:01,918 INFO [main] AppInfoParser: Kafka startTimeMs: 1720558921916
2024-07-10 00:02:01,920 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Subscribed to topic(s): telegram-receiver-user-request-topic
2024-07-10 00:02:02,194 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metadata: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-10 00:02:02,195 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-10 00:02:02,198 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:02:02,208 INFO [main] TelegramNotificationsApplication: Started TelegramNotificationsApplication in 3.88 seconds (process running for 4.282)
2024-07-10 00:02:02,216 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-telegram-notification-created-topic-1-b46f797b-aacc-4103-aa5d-3e338ec0c876
2024-07-10 00:02:02,217 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:02:03,294 INFO [background-preinit] Version: HV000001: Hibernate Validator 8.0.1.Final
2024-07-10 00:02:03,325 INFO [main] EmergencyApplication: Starting EmergencyApplication using Java 17.0.10 with PID 3076 (D:\programming\java\emergency-ms\emergency\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-10 00:02:03,326 DEBUG [main] EmergencyApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-10 00:02:03,326 INFO [main] EmergencyApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-10 00:02:03,904 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 00:02:03,953 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 41 ms. Found 3 JPA repository interfaces.
2024-07-10 00:02:04,444 INFO [main] TomcatWebServer: Tomcat initialized with port 8081 (http)
2024-07-10 00:02:04,460 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8081"]
2024-07-10 00:02:04,463 INFO [main] StandardService: Starting service [Tomcat]
2024-07-10 00:02:04,463 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 00:02:04,515 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-10 00:02:04,515 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1159 ms
2024-07-10 00:02:04,700 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-10 00:02:04,828 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@8f2e3e6
2024-07-10 00:02:04,830 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-10 00:02:04,854 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_notifications_db (PostgreSQL 16.3)
2024-07-10 00:02:04,890 INFO [main] DbValidate: Successfully validated 2 migrations (execution time 00:00.018s)
2024-07-10 00:02:04,930 INFO [main] DbMigrate: Current version of schema "public": 1.1
2024-07-10 00:02:04,933 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-10 00:02:04,995 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 00:02:05,036 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 00:02:05,062 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-10 00:02:05,297 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 00:02:05,803 INFO [main] EntityInstantiatorPojoStandard: HHH000182: No default (no-argument) constructor for class: org.example.emergency.entity.EmergencyCall (class must be instantiated by Interceptor)
2024-07-10 00:02:05,985 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 00:02:05,987 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 00:02:06,225 TRACE [main] AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer: Eagerly initializing {securityConfig=org.example.emergency.config.SecurityConfig$$SpringCGLIB$$0@648bfebe}
2024-07-10 00:02:06,235 INFO [main] InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer: Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-07-10 00:02:06,235 WARN [main] InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer: Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-07-10 00:02:06,312 INFO [main] QueryEnhancerFactory: Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-10 00:02:06,343 WARN [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-10 00:02:06,533 DEBUG [main] DefaultSecurityFilterChain: Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-10 00:02:06,745 INFO [main] AdminClientConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-07-10 00:02:06,828 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:02:06,828 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:02:06,828 INFO [main] AppInfoParser: Kafka startTimeMs: 1720558926825
2024-07-10 00:02:07,061 INFO [kafka-admin-client-thread | emergency-admin-0] AppInfoParser: App info kafka.admin.client for emergency-admin-0 unregistered
2024-07-10 00:02:07,065 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics scheduler closed
2024-07-10 00:02:07,065 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-10 00:02:07,065 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics reporters closed
2024-07-10 00:02:07,068 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8081"]
2024-07-10 00:02:07,078 INFO [main] TomcatWebServer: Tomcat started on port 8081 (http) with context path '/'
2024-07-10 00:02:07,085 INFO [main] EmergencyApplication: Started EmergencyApplication in 4.027 seconds (process running for 4.407)
2024-07-10 00:02:20,677 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=6, memberId='consumer-telegram-notification-created-topic-1-b46f797b-aacc-4103-aa5d-3e338ec0c876', protocol='range'}
2024-07-10 00:02:20,681 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Finished assignment for group at generation 6: {consumer-telegram-notification-created-topic-1-b46f797b-aacc-4103-aa5d-3e338ec0c876=Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2])}
2024-07-10 00:02:20,697 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=6, memberId='consumer-telegram-notification-created-topic-1-b46f797b-aacc-4103-aa5d-3e338ec0c876', protocol='range'}
2024-07-10 00:02:20,698 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2])
2024-07-10 00:02:20,699 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2
2024-07-10 00:02:20,709 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=3}}
2024-07-10 00:02:20,709 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-2 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=3}}
2024-07-10 00:02:20,709 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-1 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=2}}
2024-07-10 00:02:20,710 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]
2024-07-10 00:02:28,190 INFO [http-nio-8081-exec-1] [/]: Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-10 00:02:28,190 INFO [http-nio-8081-exec-1] DispatcherServlet: Initializing Servlet 'dispatcherServlet'
2024-07-10 00:02:28,191 INFO [http-nio-8081-exec-1] DispatcherServlet: Completed initialization in 1 ms
2024-07-10 00:02:28,205 TRACE [http-nio-8081-exec-1] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@715939b3, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5526101e, org.springframework.security.web.context.SecurityContextHolderFilter@487f025, org.springframework.security.web.header.HeaderWriterFilter@1e8c9083, org.springframework.security.web.authentication.logout.LogoutFilter@31e1c7c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@39329d81, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@586a9fe1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@24134c5e, org.springframework.security.web.access.ExceptionTranslationFilter@30fffb53, org.springframework.security.web.access.intercept.AuthorizationFilter@760b9444]] (1/1)
2024-07-10 00:02:28,205 DEBUG [http-nio-8081-exec-1] FilterChainProxy: Securing POST /authentication/login/
2024-07-10 00:02:28,206 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:02:28,206 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:02:28,207 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:02:28,208 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:02:28,209 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:02:28,209 TRACE [http-nio-8081-exec-1] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:02:28,209 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:02:28,209 TRACE [http-nio-8081-exec-1] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:02:28,209 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:02:28,210 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:02:28,210 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:02:28,210 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:02:28,211 TRACE [http-nio-8081-exec-1] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /authentication/login/
2024-07-10 00:02:28,212 TRACE [http-nio-8081-exec-1] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /authentication/login/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@128febab
2024-07-10 00:02:28,212 TRACE [http-nio-8081-exec-1] HttpSessionSecurityContextRepository: No HttpSession currently exists
2024-07-10 00:02:28,212 TRACE [http-nio-8081-exec-1] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-10 00:02:28,212 TRACE [http-nio-8081-exec-1] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-10 00:02:28,213 TRACE [http-nio-8081-exec-1] AnonymousAuthenticationFilter: Set SecurityContextHolder to AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]]
2024-07-10 00:02:28,213 DEBUG [http-nio-8081-exec-1] FilterChainProxy: Secured POST /authentication/login/
2024-07-10 00:02:28,273 TRACE [http-nio-8081-exec-1] ProviderManager: Authenticating request with DaoAuthenticationProvider (1/1)
2024-07-10 00:02:28,515 DEBUG [http-nio-8081-exec-1] DaoAuthenticationProvider: Authenticated user
2024-07-10 00:02:28,534 DEBUG [http-nio-8081-exec-1] HttpSessionSecurityContextRepository: Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@3c96ade8]
2024-07-10 00:02:28,551 TRACE [http-nio-8081-exec-1] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-10 00:02:39,998 TRACE [http-nio-8081-exec-4] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@715939b3, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5526101e, org.springframework.security.web.context.SecurityContextHolderFilter@487f025, org.springframework.security.web.header.HeaderWriterFilter@1e8c9083, org.springframework.security.web.authentication.logout.LogoutFilter@31e1c7c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@39329d81, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@586a9fe1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@24134c5e, org.springframework.security.web.access.ExceptionTranslationFilter@30fffb53, org.springframework.security.web.access.intercept.AuthorizationFilter@760b9444]] (1/1)
2024-07-10 00:02:39,998 DEBUG [http-nio-8081-exec-4] FilterChainProxy: Securing POST /receivers/create/
2024-07-10 00:02:39,998 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:02:39,998 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:02:39,998 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:02:39,998 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:02:39,998 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:02:39,998 TRACE [http-nio-8081-exec-4] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:02:39,998 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:02:39,998 TRACE [http-nio-8081-exec-4] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:02:39,999 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:02:39,999 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:02:39,999 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:02:39,999 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:02:39,999 TRACE [http-nio-8081-exec-4] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /receivers/create/
2024-07-10 00:02:39,999 TRACE [http-nio-8081-exec-4] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /receivers/create/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@32a4a864
2024-07-10 00:02:39,999 TRACE [http-nio-8081-exec-4] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-10 00:02:39,999 TRACE [http-nio-8081-exec-4] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-10 00:02:39,999 DEBUG [http-nio-8081-exec-4] FilterChainProxy: Secured POST /receivers/create/
2024-07-10 00:02:40,032 INFO [http-nio-8081-exec-4] ProducerConfig: ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092, localhost:9094]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 10000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 5000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2024-07-10 00:02:40,049 INFO [http-nio-8081-exec-4] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-10 00:02:40,057 INFO [http-nio-8081-exec-4] KafkaProducer: [Producer clientId=emergency-producer-1] Instantiated an idempotent producer.
2024-07-10 00:02:40,071 INFO [http-nio-8081-exec-4] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:02:40,071 INFO [http-nio-8081-exec-4] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:02:40,071 INFO [http-nio-8081-exec-4] AppInfoParser: Kafka startTimeMs: 1720558960071
2024-07-10 00:02:40,080 INFO [kafka-producer-network-thread | emergency-producer-1] Metadata: [Producer clientId=emergency-producer-1] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-10 00:02:40,103 TRACE [http-nio-8081-exec-4] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-10 00:02:40,199 INFO [kafka-producer-network-thread | emergency-producer-1] TransactionManager: [Producer clientId=emergency-producer-1] ProducerId set to 3000 with epoch 0
2024-07-10 00:02:40,226 INFO [kafka-producer-network-thread | emergency-producer-1] ReceiverServiceImpl: Message send successfully: telegram-receiver-user-request-topic-0@0
2024-07-10 00:02:40,261 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Seeking to offset 0 for partition telegram-receiver-user-request-topic-0
2024-07-10 00:02:40,261 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:02:40,790 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Seeking to offset 0 for partition telegram-receiver-user-request-topic-0
2024-07-10 00:02:40,790 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:02:41,305 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Seeking to offset 0 for partition telegram-receiver-user-request-topic-0
2024-07-10 00:02:41,305 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:02:41,821 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Seeking to offset 0 for partition telegram-receiver-user-request-topic-0
2024-07-10 00:02:41,821 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:02:42,336 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Seeking to offset 0 for partition telegram-receiver-user-request-topic-0
2024-07-10 00:02:42,336 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:02:42,847 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Seeking to offset 0 for partition telegram-receiver-user-request-topic-0
2024-07-10 00:02:42,849 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:02:43,362 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Seeking to offset 0 for partition telegram-receiver-user-request-topic-0
2024-07-10 00:02:43,362 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:02:43,876 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Seeking to offset 0 for partition telegram-receiver-user-request-topic-0
2024-07-10 00:02:43,876 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:02:44,394 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Seeking to offset 0 for partition telegram-receiver-user-request-topic-0
2024-07-10 00:02:44,394 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:02:44,901 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] DefaultErrorHandler: Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for telegram-receiver-user-request-topic-0@0
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.KafkaException: No method found for class org.example.telegram_notifications.events.TelegramNotificationCreatedEvent
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:07:25,177 INFO [main] TelegramNotificationsApplication: Starting TelegramNotificationsApplication using Java 17.0.10 with PID 20896 (D:\programming\java\emergency-ms\telegram-notifications\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-10 00:07:25,178 DEBUG [main] TelegramNotificationsApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-10 00:07:25,179 INFO [main] TelegramNotificationsApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-10 00:07:25,657 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 00:07:25,703 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 39 ms. Found 1 JPA repository interface.
2024-07-10 00:07:26,176 INFO [main] TomcatWebServer: Tomcat initialized with port 8083 (http)
2024-07-10 00:07:26,183 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8083"]
2024-07-10 00:07:26,185 INFO [main] StandardService: Starting service [Tomcat]
2024-07-10 00:07:26,185 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 00:07:26,239 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-10 00:07:26,240 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1021 ms
2024-07-10 00:07:26,421 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-10 00:07:26,555 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@20cff21e
2024-07-10 00:07:26,556 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-10 00:07:26,577 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_telegram_db (PostgreSQL 16.3)
2024-07-10 00:07:26,611 INFO [main] DbValidate: Successfully validated 1 migration (execution time 00:00.021s)
2024-07-10 00:07:26,644 INFO [main] DbMigrate: Current version of schema "public": 1.0
2024-07-10 00:07:26,645 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-10 00:07:26,704 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 00:07:26,745 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 00:07:26,773 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-10 00:07:27,006 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 00:07:27,577 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 00:07:27,579 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 00:07:27,977 WARN [main] AnnotationConfigServletWebServerApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'kafkaListenerContainerUserFactory' defined in class path resource [org/example/telegram_notifications/config/KafkaConsumerConfig.class]: Unsatisfied dependency expressed through method 'kafkaListenerContainerUserFactory' parameter 0: No qualifying bean of type 'org.springframework.kafka.core.ConsumerFactory<java.lang.String, org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent>' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2024-07-10 00:07:27,978 INFO [main] LocalContainerEntityManagerFactoryBean: Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 00:07:27,979 INFO [main] HikariDataSource: HikariPool-1 - Shutdown initiated...
2024-07-10 00:07:27,982 INFO [main] HikariDataSource: HikariPool-1 - Shutdown completed.
2024-07-10 00:07:27,985 INFO [main] StandardService: Stopping service [Tomcat]
2024-07-10 00:07:27,993 INFO [main] ConditionEvaluationReportLogger: 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-07-10 00:07:28,008 ERROR [main] LoggingFailureAnalysisReporter: 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of method kafkaListenerContainerUserFactory in org.example.telegram_notifications.config.KafkaConsumerConfig required a bean of type 'org.springframework.kafka.core.ConsumerFactory' that could not be found.


Action:

Consider defining a bean of type 'org.springframework.kafka.core.ConsumerFactory' in your configuration.

2024-07-10 00:10:33,872 INFO [main] TelegramNotificationsApplication: Starting TelegramNotificationsApplication using Java 17.0.10 with PID 14856 (D:\programming\java\emergency-ms\telegram-notifications\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-10 00:10:33,873 DEBUG [main] TelegramNotificationsApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-10 00:10:33,874 INFO [main] TelegramNotificationsApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-10 00:10:34,341 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 00:10:34,399 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 50 ms. Found 1 JPA repository interface.
2024-07-10 00:10:34,863 INFO [main] TomcatWebServer: Tomcat initialized with port 8083 (http)
2024-07-10 00:10:34,869 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8083"]
2024-07-10 00:10:34,872 INFO [main] StandardService: Starting service [Tomcat]
2024-07-10 00:10:34,872 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 00:10:34,927 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-10 00:10:34,928 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1013 ms
2024-07-10 00:10:35,117 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-10 00:10:35,236 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1ecf0ac6
2024-07-10 00:10:35,237 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-10 00:10:35,262 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_telegram_db (PostgreSQL 16.3)
2024-07-10 00:10:35,295 INFO [main] DbValidate: Successfully validated 1 migration (execution time 00:00.021s)
2024-07-10 00:10:35,329 INFO [main] DbMigrate: Current version of schema "public": 1.0
2024-07-10 00:10:35,330 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-10 00:10:35,388 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 00:10:35,425 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 00:10:35,457 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-10 00:10:35,681 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 00:10:36,283 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 00:10:36,286 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 00:10:36,700 WARN [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-10 00:10:37,015 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8083"]
2024-07-10 00:10:37,028 INFO [main] TomcatWebServer: Tomcat started on port 8083 (http) with context path '/'
2024-07-10 00:10:37,058 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-telegram-notification-created-topic-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = telegram-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-07-10 00:10:37,088 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-10 00:10:37,174 INFO [main] ConsumerConfig: These configurations '[spring.json.trusted.packages]' were supplied but are not used yet.
2024-07-10 00:10:37,175 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:10:37,175 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:10:37,175 INFO [main] AppInfoParser: Kafka startTimeMs: 1720559437174
2024-07-10 00:10:37,178 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Subscribed to topic(s): telegram-notification-created-topic
2024-07-10 00:10:37,182 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-telegram-notification-created-topic-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = telegram-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-07-10 00:10:37,183 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-10 00:10:37,191 INFO [main] ConsumerConfig: These configurations '[spring.json.trusted.packages]' were supplied but are not used yet.
2024-07-10 00:10:37,191 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:10:37,191 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:10:37,191 INFO [main] AppInfoParser: Kafka startTimeMs: 1720559437191
2024-07-10 00:10:37,192 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Subscribed to topic(s): telegram-receiver-user-request-topic
2024-07-10 00:10:37,447 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metadata: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-10 00:10:37,447 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] Metadata: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-10 00:10:37,448 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-10 00:10:37,448 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-10 00:10:37,450 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:10:37,450 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:10:37,461 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-telegram-notification-created-topic-2-c1702504-ece4-4559-8f84-b4f4d33d5118
2024-07-10 00:10:37,461 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-telegram-notification-created-topic-1-683169a0-03dc-463d-b0ad-06e7a9148c82
2024-07-10 00:10:37,461 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:10:37,461 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:10:37,514 INFO [main] TelegramNotificationsApplication: Started TelegramNotificationsApplication in 3.93 seconds (process running for 4.331)
2024-07-10 00:10:40,478 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=8, memberId='consumer-telegram-notification-created-topic-2-c1702504-ece4-4559-8f84-b4f4d33d5118', protocol='range'}
2024-07-10 00:10:40,478 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=8, memberId='consumer-telegram-notification-created-topic-1-683169a0-03dc-463d-b0ad-06e7a9148c82', protocol='range'}
2024-07-10 00:10:40,488 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Finished assignment for group at generation 8: {consumer-telegram-notification-created-topic-1-683169a0-03dc-463d-b0ad-06e7a9148c82=Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]), consumer-telegram-notification-created-topic-2-c1702504-ece4-4559-8f84-b4f4d33d5118=Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2])}
2024-07-10 00:10:40,492 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=8, memberId='consumer-telegram-notification-created-topic-2-c1702504-ece4-4559-8f84-b4f4d33d5118', protocol='range'}
2024-07-10 00:10:40,492 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=8, memberId='consumer-telegram-notification-created-topic-1-683169a0-03dc-463d-b0ad-06e7a9148c82', protocol='range'}
2024-07-10 00:10:40,492 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2])
2024-07-10 00:10:40,492 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2])
2024-07-10 00:10:40,494 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2
2024-07-10 00:10:40,494 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2
2024-07-10 00:10:40,502 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=3}}
2024-07-10 00:10:40,502 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-0 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=3}}
2024-07-10 00:10:40,502 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-2 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=4}}
2024-07-10 00:10:40,502 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=4}}
2024-07-10 00:10:40,502 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-1 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=3}}
2024-07-10 00:10:40,502 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=3}}
2024-07-10 00:10:40,503 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]
2024-07-10 00:10:40,503 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]
2024-07-10 00:10:43,644 TRACE [http-nio-8081-exec-6] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@715939b3, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5526101e, org.springframework.security.web.context.SecurityContextHolderFilter@487f025, org.springframework.security.web.header.HeaderWriterFilter@1e8c9083, org.springframework.security.web.authentication.logout.LogoutFilter@31e1c7c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@39329d81, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@586a9fe1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@24134c5e, org.springframework.security.web.access.ExceptionTranslationFilter@30fffb53, org.springframework.security.web.access.intercept.AuthorizationFilter@760b9444]] (1/1)
2024-07-10 00:10:43,644 DEBUG [http-nio-8081-exec-6] FilterChainProxy: Securing POST /receivers/create/
2024-07-10 00:10:43,644 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:10:43,644 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:10:43,644 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:10:43,644 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:10:43,645 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:10:43,645 TRACE [http-nio-8081-exec-6] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:10:43,645 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:10:43,645 TRACE [http-nio-8081-exec-6] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:10:43,645 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:10:43,645 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:10:43,645 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:10:43,645 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:10:43,645 TRACE [http-nio-8081-exec-6] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /receivers/create/
2024-07-10 00:10:43,645 TRACE [http-nio-8081-exec-6] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /receivers/create/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@32a4a864
2024-07-10 00:10:43,645 TRACE [http-nio-8081-exec-6] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-10 00:10:43,645 TRACE [http-nio-8081-exec-6] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-10 00:10:43,645 DEBUG [http-nio-8081-exec-6] FilterChainProxy: Secured POST /receivers/create/
2024-07-10 00:10:43,656 TRACE [http-nio-8081-exec-6] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-10 00:10:43,656 INFO [kafka-producer-network-thread | emergency-producer-1] ReceiverServiceImpl: Message send successfully: telegram-receiver-user-request-topic-0@1
2024-07-10 00:10:43,687 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 1 for partition telegram-receiver-user-request-topic-0
2024-07-10 00:10:43,688 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class java.lang.String
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:10:44,191 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 1 for partition telegram-receiver-user-request-topic-0
2024-07-10 00:10:44,191 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class java.lang.String
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:10:44,705 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 1 for partition telegram-receiver-user-request-topic-0
2024-07-10 00:10:44,705 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class java.lang.String
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:10:45,218 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 1 for partition telegram-receiver-user-request-topic-0
2024-07-10 00:10:45,218 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class java.lang.String
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:10:45,733 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 1 for partition telegram-receiver-user-request-topic-0
2024-07-10 00:10:45,733 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class java.lang.String
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:10:46,247 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 1 for partition telegram-receiver-user-request-topic-0
2024-07-10 00:10:46,247 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class java.lang.String
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:10:46,761 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 1 for partition telegram-receiver-user-request-topic-0
2024-07-10 00:10:46,761 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class java.lang.String
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:10:47,275 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 1 for partition telegram-receiver-user-request-topic-0
2024-07-10 00:10:47,275 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class java.lang.String
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:10:47,791 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 1 for partition telegram-receiver-user-request-topic-0
2024-07-10 00:10:47,791 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class java.lang.String
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:10:48,296 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DefaultErrorHandler: Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for telegram-receiver-user-request-topic-0@1
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.KafkaException: No method found for class java.lang.String
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:11:43,765 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node -2 disconnected.
2024-07-10 00:11:43,767 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node -1 disconnected.
2024-07-10 00:16:52,239 INFO [main] TelegramNotificationsApplication: Starting TelegramNotificationsApplication using Java 17.0.10 with PID 18404 (D:\programming\java\emergency-ms\telegram-notifications\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-10 00:16:52,241 DEBUG [main] TelegramNotificationsApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-10 00:16:52,242 INFO [main] TelegramNotificationsApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-10 00:16:52,728 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 00:16:52,777 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 41 ms. Found 1 JPA repository interface.
2024-07-10 00:16:53,273 INFO [main] TomcatWebServer: Tomcat initialized with port 8083 (http)
2024-07-10 00:16:53,280 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8083"]
2024-07-10 00:16:53,282 INFO [main] StandardService: Starting service [Tomcat]
2024-07-10 00:16:53,283 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 00:16:53,334 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-10 00:16:53,335 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1051 ms
2024-07-10 00:16:53,531 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-10 00:16:53,660 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@1e495414
2024-07-10 00:16:53,661 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-10 00:16:53,685 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_telegram_db (PostgreSQL 16.3)
2024-07-10 00:16:53,720 INFO [main] DbValidate: Successfully validated 1 migration (execution time 00:00.022s)
2024-07-10 00:16:53,756 INFO [main] DbMigrate: Current version of schema "public": 1.0
2024-07-10 00:16:53,758 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-10 00:16:53,818 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 00:16:53,858 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 00:16:53,885 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-10 00:16:54,110 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 00:16:54,727 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 00:16:54,729 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 00:16:55,165 WARN [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-10 00:16:55,497 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8083"]
2024-07-10 00:16:55,511 INFO [main] TomcatWebServer: Tomcat started on port 8083 (http) with context path '/'
2024-07-10 00:16:55,542 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-telegram-notification-created-topic-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = telegram-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-07-10 00:16:55,578 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-10 00:16:55,668 INFO [main] ConsumerConfig: These configurations '[spring.json.trusted.packages]' were supplied but are not used yet.
2024-07-10 00:16:55,670 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:16:55,670 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:16:55,670 INFO [main] AppInfoParser: Kafka startTimeMs: 1720559815668
2024-07-10 00:16:55,673 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Subscribed to topic(s): telegram-notification-created-topic
2024-07-10 00:16:55,678 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-telegram-notification-created-topic-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = telegram-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-07-10 00:16:55,678 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-10 00:16:55,685 INFO [main] ConsumerConfig: These configurations '[spring.json.trusted.packages]' were supplied but are not used yet.
2024-07-10 00:16:55,685 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:16:55,685 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:16:55,685 INFO [main] AppInfoParser: Kafka startTimeMs: 1720559815685
2024-07-10 00:16:55,685 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Subscribed to topic(s): telegram-receiver-user-request-topic
2024-07-10 00:16:55,961 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] Metadata: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-10 00:16:55,961 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metadata: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-10 00:16:55,962 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-10 00:16:55,962 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-10 00:16:55,964 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:16:55,964 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:16:55,975 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-telegram-notification-created-topic-1-78df940e-8cb5-4c9f-8c1b-f78ef8bb854c
2024-07-10 00:16:55,975 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:16:55,975 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-telegram-notification-created-topic-2-87225614-85cd-41bd-aec1-5593dc60e8dd
2024-07-10 00:16:55,975 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:16:55,993 INFO [main] TelegramNotificationsApplication: Started TelegramNotificationsApplication in 4.037 seconds (process running for 4.414)
2024-07-10 00:16:58,845 INFO [background-preinit] Version: HV000001: Hibernate Validator 8.0.1.Final
2024-07-10 00:16:58,873 INFO [main] EmergencyApplication: Starting EmergencyApplication using Java 17.0.10 with PID 16508 (D:\programming\java\emergency-ms\emergency\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-10 00:16:58,873 DEBUG [main] EmergencyApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-10 00:16:58,874 INFO [main] EmergencyApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-10 00:16:59,429 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 00:16:59,484 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 50 ms. Found 3 JPA repository interfaces.
2024-07-10 00:16:59,985 INFO [main] TomcatWebServer: Tomcat initialized with port 8081 (http)
2024-07-10 00:16:59,994 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8081"]
2024-07-10 00:16:59,995 INFO [main] StandardService: Starting service [Tomcat]
2024-07-10 00:16:59,995 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 00:17:00,052 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-10 00:17:00,054 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1150 ms
2024-07-10 00:17:00,238 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-10 00:17:00,366 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6818fd48
2024-07-10 00:17:00,367 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-10 00:17:00,393 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_notifications_db (PostgreSQL 16.3)
2024-07-10 00:17:00,429 INFO [main] DbValidate: Successfully validated 2 migrations (execution time 00:00.019s)
2024-07-10 00:17:00,472 INFO [main] DbMigrate: Current version of schema "public": 1.1
2024-07-10 00:17:00,474 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-10 00:17:00,533 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 00:17:00,576 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 00:17:00,608 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-10 00:17:00,831 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 00:17:01,353 INFO [main] EntityInstantiatorPojoStandard: HHH000182: No default (no-argument) constructor for class: org.example.emergency.entity.EmergencyCall (class must be instantiated by Interceptor)
2024-07-10 00:17:01,539 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 00:17:01,541 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 00:17:01,781 TRACE [main] AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer: Eagerly initializing {securityConfig=org.example.emergency.config.SecurityConfig$$SpringCGLIB$$0@694dc99b}
2024-07-10 00:17:01,793 INFO [main] InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer: Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-07-10 00:17:01,794 WARN [main] InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer: Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-07-10 00:17:01,820 WARN [main] AnnotationConfigServletWebServerApplicationContext: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'emergencyCallController' defined in file [D:\programming\java\emergency-ms\emergency\build\classes\java\main\org\example\emergency\controller\EmergencyCallController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'emergencyCallServiceImpl' defined in file [D:\programming\java\emergency-ms\emergency\build\classes\java\main\org\example\emergency\service\impls\EmergencyCallServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 3: Error creating bean with name 'emailNotificationKafkaTemplate' defined in class path resource [org/example/emergency/config/KafkaProducerConfig.class]: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'emailNotificationKafkaTemplate' threw exception with message: Error creating bean with name 'emailNotificationProducerFactory' defined in class path resource [org/example/emergency/config/KafkaProducerConfig.class]: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'emailNotificationProducerFactory' threw exception with message: null
2024-07-10 00:17:01,820 INFO [main] LocalContainerEntityManagerFactoryBean: Closing JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 00:17:01,822 INFO [main] HikariDataSource: HikariPool-1 - Shutdown initiated...
2024-07-10 00:17:01,825 INFO [main] HikariDataSource: HikariPool-1 - Shutdown completed.
2024-07-10 00:17:01,828 INFO [main] StandardService: Stopping service [Tomcat]
2024-07-10 00:17:01,838 INFO [main] ConditionEvaluationReportLogger: 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-07-10 00:17:01,850 ERROR [main] SpringApplication: Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'emergencyCallController' defined in file [D:\programming\java\emergency-ms\emergency\build\classes\java\main\org\example\emergency\controller\EmergencyCallController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'emergencyCallServiceImpl' defined in file [D:\programming\java\emergency-ms\emergency\build\classes\java\main\org\example\emergency\service\impls\EmergencyCallServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 3: Error creating bean with name 'emailNotificationKafkaTemplate' defined in class path resource [org/example/emergency/config/KafkaProducerConfig.class]: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'emailNotificationKafkaTemplate' threw exception with message: Error creating bean with name 'emailNotificationProducerFactory' defined in class path resource [org/example/emergency/config/KafkaProducerConfig.class]: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'emailNotificationProducerFactory' threw exception with message: null
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1357)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at org.example.emergency.EmergencyApplication.main(EmergencyApplication.java:9)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'emergencyCallServiceImpl' defined in file [D:\programming\java\emergency-ms\emergency\build\classes\java\main\org\example\emergency\service\impls\EmergencyCallServiceImpl.class]: Unsatisfied dependency expressed through constructor parameter 3: Error creating bean with name 'emailNotificationKafkaTemplate' defined in class path resource [org/example/emergency/config/KafkaProducerConfig.class]: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'emailNotificationKafkaTemplate' threw exception with message: Error creating bean with name 'emailNotificationProducerFactory' defined in class path resource [org/example/emergency/config/KafkaProducerConfig.class]: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'emailNotificationProducerFactory' threw exception with message: null
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1357)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1194)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'emailNotificationKafkaTemplate' defined in class path resource [org/example/emergency/config/KafkaProducerConfig.class]: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'emailNotificationKafkaTemplate' threw exception with message: Error creating bean with name 'emailNotificationProducerFactory' defined in class path resource [org/example/emergency/config/KafkaProducerConfig.class]: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'emailNotificationProducerFactory' threw exception with message: null
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	... 33 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.KafkaTemplate]: Factory method 'emailNotificationKafkaTemplate' threw exception with message: Error creating bean with name 'emailNotificationProducerFactory' defined in class path resource [org/example/emergency/config/KafkaProducerConfig.class]: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'emailNotificationProducerFactory' threw exception with message: null
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:177)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644)
	... 47 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'emailNotificationProducerFactory' defined in class path resource [org/example/emergency/config/KafkaProducerConfig.class]: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'emailNotificationProducerFactory' threw exception with message: null
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:648)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.resolveBeanReference(ConfigurationClassEnhancer.java:380)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:351)
	at org.example.emergency.config.KafkaProducerConfig$$SpringCGLIB$$0.emailNotificationProducerFactory(<generated>)
	at org.example.emergency.config.KafkaProducerConfig.emailNotificationKafkaTemplate(KafkaProducerConfig.java:33)
	at org.example.emergency.config.KafkaProducerConfig$$SpringCGLIB$$0.CGLIB$emailNotificationKafkaTemplate$1(<generated>)
	at org.example.emergency.config.KafkaProducerConfig$$SpringCGLIB$$FastClass$$1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:258)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:348)
	at org.example.emergency.config.KafkaProducerConfig$$SpringCGLIB$$0.emailNotificationKafkaTemplate(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	... 48 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.kafka.core.ProducerFactory]: Factory method 'emailNotificationProducerFactory' threw exception with message: null
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:177)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644)
	... 71 common frames omitted
Caused by: java.lang.NullPointerException: null
	at java.base/java.util.concurrent.ConcurrentHashMap.putVal(ConcurrentHashMap.java:1011)
	at java.base/java.util.concurrent.ConcurrentHashMap.putAll(ConcurrentHashMap.java:1089)
	at java.base/java.util.concurrent.ConcurrentHashMap.<init>(ConcurrentHashMap.java:852)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory.<init>(DefaultKafkaProducerFactory.java:256)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory.<init>(DefaultKafkaProducerFactory.java:234)
	at org.springframework.kafka.core.DefaultKafkaProducerFactory.<init>(DefaultKafkaProducerFactory.java:176)
	at org.example.emergency.config.KafkaProducerConfig.emailNotificationProducerFactory(KafkaProducerConfig.java:28)
	at org.example.emergency.config.KafkaProducerConfig$$SpringCGLIB$$0.CGLIB$emailNotificationProducerFactory$0(<generated>)
	at org.example.emergency.config.KafkaProducerConfig$$SpringCGLIB$$FastClass$$1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:258)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:348)
	at org.example.emergency.config.KafkaProducerConfig$$SpringCGLIB$$0.emailNotificationProducerFactory(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	... 72 common frames omitted
2024-07-10 00:17:32,598 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=9, memberId='consumer-telegram-notification-created-topic-2-87225614-85cd-41bd-aec1-5593dc60e8dd', protocol='range'}
2024-07-10 00:17:32,598 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=9, memberId='consumer-telegram-notification-created-topic-1-78df940e-8cb5-4c9f-8c1b-f78ef8bb854c', protocol='range'}
2024-07-10 00:17:32,607 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Finished assignment for group at generation 9: {consumer-telegram-notification-created-topic-1-78df940e-8cb5-4c9f-8c1b-f78ef8bb854c=Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]), consumer-telegram-notification-created-topic-2-87225614-85cd-41bd-aec1-5593dc60e8dd=Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2])}
2024-07-10 00:17:32,611 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=9, memberId='consumer-telegram-notification-created-topic-2-87225614-85cd-41bd-aec1-5593dc60e8dd', protocol='range'}
2024-07-10 00:17:32,611 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=9, memberId='consumer-telegram-notification-created-topic-1-78df940e-8cb5-4c9f-8c1b-f78ef8bb854c', protocol='range'}
2024-07-10 00:17:32,611 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2])
2024-07-10 00:17:32,611 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2])
2024-07-10 00:17:32,613 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2
2024-07-10 00:17:32,613 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2
2024-07-10 00:17:32,619 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=3}}
2024-07-10 00:17:32,619 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=3}}
2024-07-10 00:17:32,620 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=4}}
2024-07-10 00:17:32,620 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-2 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=4}}
2024-07-10 00:17:32,620 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=3}}
2024-07-10 00:17:32,620 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-1 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=3}}
2024-07-10 00:17:32,621 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]
2024-07-10 00:17:32,621 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]
2024-07-10 00:17:46,552 INFO [background-preinit] Version: HV000001: Hibernate Validator 8.0.1.Final
2024-07-10 00:17:46,580 INFO [main] EmergencyApplication: Starting EmergencyApplication using Java 17.0.10 with PID 20880 (D:\programming\java\emergency-ms\emergency\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-10 00:17:46,580 DEBUG [main] EmergencyApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-10 00:17:46,581 INFO [main] EmergencyApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-10 00:17:47,176 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 00:17:47,233 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 50 ms. Found 3 JPA repository interfaces.
2024-07-10 00:17:47,719 INFO [main] TomcatWebServer: Tomcat initialized with port 8081 (http)
2024-07-10 00:17:47,727 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8081"]
2024-07-10 00:17:47,729 INFO [main] StandardService: Starting service [Tomcat]
2024-07-10 00:17:47,729 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 00:17:47,789 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-10 00:17:47,790 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1177 ms
2024-07-10 00:17:47,991 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-10 00:17:48,118 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@46612bfc
2024-07-10 00:17:48,119 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-10 00:17:48,146 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_notifications_db (PostgreSQL 16.3)
2024-07-10 00:17:48,181 INFO [main] DbValidate: Successfully validated 2 migrations (execution time 00:00.022s)
2024-07-10 00:17:48,217 INFO [main] DbMigrate: Current version of schema "public": 1.1
2024-07-10 00:17:48,220 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-10 00:17:48,277 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 00:17:48,317 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 00:17:48,344 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-10 00:17:48,590 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 00:17:49,152 INFO [main] EntityInstantiatorPojoStandard: HHH000182: No default (no-argument) constructor for class: org.example.emergency.entity.EmergencyCall (class must be instantiated by Interceptor)
2024-07-10 00:17:49,361 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 00:17:49,363 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 00:17:49,619 TRACE [main] AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer: Eagerly initializing {securityConfig=org.example.emergency.config.SecurityConfig$$SpringCGLIB$$0@7c8cea05}
2024-07-10 00:17:49,630 INFO [main] InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer: Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-07-10 00:17:49,630 WARN [main] InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer: Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-07-10 00:17:49,699 INFO [main] QueryEnhancerFactory: Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-10 00:17:49,739 WARN [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-10 00:17:49,926 DEBUG [main] DefaultSecurityFilterChain: Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-10 00:17:50,128 INFO [main] AdminClientConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-07-10 00:17:50,202 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:17:50,203 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:17:50,203 INFO [main] AppInfoParser: Kafka startTimeMs: 1720559870202
2024-07-10 00:17:50,440 INFO [kafka-admin-client-thread | emergency-admin-0] AppInfoParser: App info kafka.admin.client for emergency-admin-0 unregistered
2024-07-10 00:17:50,444 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics scheduler closed
2024-07-10 00:17:50,444 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-10 00:17:50,444 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics reporters closed
2024-07-10 00:17:50,449 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8081"]
2024-07-10 00:17:50,459 INFO [main] TomcatWebServer: Tomcat started on port 8081 (http) with context path '/'
2024-07-10 00:17:50,467 INFO [main] EmergencyApplication: Started EmergencyApplication in 4.185 seconds (process running for 4.568)
2024-07-10 00:17:56,076 INFO [http-nio-8081-exec-2] [/]: Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-10 00:17:56,076 INFO [http-nio-8081-exec-2] DispatcherServlet: Initializing Servlet 'dispatcherServlet'
2024-07-10 00:17:56,079 INFO [http-nio-8081-exec-2] DispatcherServlet: Completed initialization in 2 ms
2024-07-10 00:17:56,100 TRACE [http-nio-8081-exec-2] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@4ca12db9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@212d688e, org.springframework.security.web.context.SecurityContextHolderFilter@758e6acd, org.springframework.security.web.header.HeaderWriterFilter@174e5929, org.springframework.security.web.authentication.logout.LogoutFilter@1ff65426, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@28592982, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@a703934, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4b428663, org.springframework.security.web.access.ExceptionTranslationFilter@5ec921f1, org.springframework.security.web.access.intercept.AuthorizationFilter@60a4595e]] (1/1)
2024-07-10 00:17:56,101 DEBUG [http-nio-8081-exec-2] FilterChainProxy: Securing POST /authentication/login/
2024-07-10 00:17:56,101 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:17:56,102 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:17:56,104 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:17:56,105 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:17:56,106 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:17:56,106 TRACE [http-nio-8081-exec-2] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:17:56,106 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:17:56,106 TRACE [http-nio-8081-exec-2] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:17:56,106 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:17:56,107 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:17:56,108 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:17:56,108 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:17:56,108 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /authentication/login/
2024-07-10 00:17:56,109 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /authentication/login/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@36e885f3
2024-07-10 00:17:56,109 TRACE [http-nio-8081-exec-2] HttpSessionSecurityContextRepository: No HttpSession currently exists
2024-07-10 00:17:56,109 TRACE [http-nio-8081-exec-2] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-10 00:17:56,110 TRACE [http-nio-8081-exec-2] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-10 00:17:56,111 TRACE [http-nio-8081-exec-2] AnonymousAuthenticationFilter: Set SecurityContextHolder to AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]]
2024-07-10 00:17:56,111 DEBUG [http-nio-8081-exec-2] FilterChainProxy: Secured POST /authentication/login/
2024-07-10 00:17:56,176 TRACE [http-nio-8081-exec-2] ProviderManager: Authenticating request with DaoAuthenticationProvider (1/1)
2024-07-10 00:17:56,410 DEBUG [http-nio-8081-exec-2] DaoAuthenticationProvider: Authenticated user
2024-07-10 00:17:56,434 DEBUG [http-nio-8081-exec-2] HttpSessionSecurityContextRepository: Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@1ac2977]
2024-07-10 00:17:56,456 TRACE [http-nio-8081-exec-2] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-10 00:18:00,893 TRACE [http-nio-8081-exec-3] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@4ca12db9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@212d688e, org.springframework.security.web.context.SecurityContextHolderFilter@758e6acd, org.springframework.security.web.header.HeaderWriterFilter@174e5929, org.springframework.security.web.authentication.logout.LogoutFilter@1ff65426, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@28592982, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@a703934, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4b428663, org.springframework.security.web.access.ExceptionTranslationFilter@5ec921f1, org.springframework.security.web.access.intercept.AuthorizationFilter@60a4595e]] (1/1)
2024-07-10 00:18:00,893 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Securing POST /receivers/create/
2024-07-10 00:18:00,893 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:18:00,893 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:18:00,893 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:18:00,894 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:18:00,894 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:18:00,894 TRACE [http-nio-8081-exec-3] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:18:00,894 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:18:00,894 TRACE [http-nio-8081-exec-3] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:18:00,894 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:18:00,894 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:18:00,894 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:18:00,894 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:18:00,894 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /receivers/create/
2024-07-10 00:18:00,894 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /receivers/create/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@58b8956d
2024-07-10 00:18:00,894 TRACE [http-nio-8081-exec-3] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-10 00:18:00,895 TRACE [http-nio-8081-exec-3] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-10 00:18:00,895 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Secured POST /receivers/create/
2024-07-10 00:18:00,927 INFO [http-nio-8081-exec-3] ProducerConfig: ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092, localhost:9094]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 10000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 5000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2024-07-10 00:18:00,944 INFO [http-nio-8081-exec-3] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-10 00:18:00,950 INFO [http-nio-8081-exec-3] KafkaProducer: [Producer clientId=emergency-producer-1] Instantiated an idempotent producer.
2024-07-10 00:18:00,965 INFO [http-nio-8081-exec-3] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:18:00,965 INFO [http-nio-8081-exec-3] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:18:00,965 INFO [http-nio-8081-exec-3] AppInfoParser: Kafka startTimeMs: 1720559880965
2024-07-10 00:18:00,974 INFO [kafka-producer-network-thread | emergency-producer-1] Metadata: [Producer clientId=emergency-producer-1] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-10 00:18:00,974 INFO [kafka-producer-network-thread | emergency-producer-1] TransactionManager: [Producer clientId=emergency-producer-1] ProducerId set to 3001 with epoch 0
2024-07-10 00:18:00,999 TRACE [http-nio-8081-exec-3] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-10 00:18:01,014 INFO [kafka-producer-network-thread | emergency-producer-1] ReceiverServiceImpl: Message send successfully: telegram-receiver-user-request-topic-1@1
2024-07-10 00:18:01,045 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 1 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:18:01,045 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class java.lang.String
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:18:01,576 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 1 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:18:01,576 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class java.lang.String
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:18:02,091 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 1 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:18:02,091 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class java.lang.String
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:18:02,605 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 1 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:18:02,605 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class java.lang.String
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:18:03,119 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 1 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:18:03,119 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class java.lang.String
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:18:03,633 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 1 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:18:03,633 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class java.lang.String
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:18:04,148 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 1 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:18:04,148 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class java.lang.String
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:18:04,649 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 1 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:18:04,649 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class java.lang.String
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:18:05,165 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 1 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:18:05,165 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
Caused by: org.springframework.kafka.KafkaException: No method found for class java.lang.String
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:18:05,667 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DefaultErrorHandler: Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for telegram-receiver-user-request-topic-1@1
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener failed
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2873)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.KafkaException: No method found for class java.lang.String
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getHandlerForPayload(DelegatingInvocableHandler.java:203)
	at org.springframework.kafka.listener.adapter.DelegatingInvocableHandler.getMethodNameFor(DelegatingInvocableHandler.java:325)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.getMethodAsString(HandlerAdapter.java:89)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
2024-07-10 00:23:51,957 INFO [main] TelegramNotificationsApplication: Starting TelegramNotificationsApplication using Java 17.0.10 with PID 18548 (D:\programming\java\emergency-ms\telegram-notifications\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-10 00:23:51,959 DEBUG [main] TelegramNotificationsApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-10 00:23:51,959 INFO [main] TelegramNotificationsApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-10 00:23:52,431 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 00:23:52,477 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 39 ms. Found 1 JPA repository interface.
2024-07-10 00:23:52,951 INFO [main] TomcatWebServer: Tomcat initialized with port 8083 (http)
2024-07-10 00:23:52,960 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8083"]
2024-07-10 00:23:52,960 INFO [main] StandardService: Starting service [Tomcat]
2024-07-10 00:23:52,962 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 00:23:53,019 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-10 00:23:53,020 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1026 ms
2024-07-10 00:23:53,217 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-10 00:23:53,351 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@26b3c9a2
2024-07-10 00:23:53,353 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-10 00:23:53,377 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_telegram_db (PostgreSQL 16.3)
2024-07-10 00:23:53,411 INFO [main] DbValidate: Successfully validated 1 migration (execution time 00:00.022s)
2024-07-10 00:23:53,448 INFO [main] DbMigrate: Current version of schema "public": 1.0
2024-07-10 00:23:53,451 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-10 00:23:53,517 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 00:23:53,559 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 00:23:53,590 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-10 00:23:53,822 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 00:23:54,373 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 00:23:54,375 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 00:23:54,785 WARN [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-10 00:23:55,090 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8083"]
2024-07-10 00:23:55,103 INFO [main] TomcatWebServer: Tomcat started on port 8083 (http) with context path '/'
2024-07-10 00:23:55,138 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-telegram-notification-created-topic-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = telegram-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-07-10 00:23:55,175 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-10 00:23:55,248 INFO [main] ConsumerConfig: These configurations '[spring.json.trusted.packages]' were supplied but are not used yet.
2024-07-10 00:23:55,249 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:23:55,249 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:23:55,249 INFO [main] AppInfoParser: Kafka startTimeMs: 1720560235248
2024-07-10 00:23:55,251 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Subscribed to topic(s): telegram-notification-created-topic
2024-07-10 00:23:55,256 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-telegram-notification-created-topic-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = telegram-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-07-10 00:23:55,256 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-10 00:23:55,263 INFO [main] ConsumerConfig: These configurations '[spring.json.trusted.packages]' were supplied but are not used yet.
2024-07-10 00:23:55,263 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:23:55,263 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:23:55,263 INFO [main] AppInfoParser: Kafka startTimeMs: 1720560235263
2024-07-10 00:23:55,264 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Subscribed to topic(s): telegram-receiver-user-request-topic
2024-07-10 00:23:55,544 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metadata: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-10 00:23:55,544 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] Metadata: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-10 00:23:55,545 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-10 00:23:55,545 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-10 00:23:55,547 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:23:55,547 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:23:55,560 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-telegram-notification-created-topic-2-d7e64f5c-b7c5-4359-9272-aa04eea934c7
2024-07-10 00:23:55,560 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-telegram-notification-created-topic-1-b5551297-953c-43f4-93c3-77531fdd7c15
2024-07-10 00:23:55,560 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:23:55,560 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:23:55,569 INFO [main] TelegramNotificationsApplication: Started TelegramNotificationsApplication in 3.917 seconds (process running for 4.297)
2024-07-10 00:24:11,694 TRACE [http-nio-8081-exec-6] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@4ca12db9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@212d688e, org.springframework.security.web.context.SecurityContextHolderFilter@758e6acd, org.springframework.security.web.header.HeaderWriterFilter@174e5929, org.springframework.security.web.authentication.logout.LogoutFilter@1ff65426, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@28592982, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@a703934, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4b428663, org.springframework.security.web.access.ExceptionTranslationFilter@5ec921f1, org.springframework.security.web.access.intercept.AuthorizationFilter@60a4595e]] (1/1)
2024-07-10 00:24:11,694 DEBUG [http-nio-8081-exec-6] FilterChainProxy: Securing POST /receivers/create/
2024-07-10 00:24:11,694 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:24:11,695 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:24:11,695 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:24:11,695 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:24:11,695 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:24:11,695 TRACE [http-nio-8081-exec-6] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:24:11,695 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:24:11,695 TRACE [http-nio-8081-exec-6] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:24:11,695 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:24:11,695 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:24:11,695 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:24:11,695 TRACE [http-nio-8081-exec-6] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:24:11,695 TRACE [http-nio-8081-exec-6] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /receivers/create/
2024-07-10 00:24:11,696 TRACE [http-nio-8081-exec-6] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /receivers/create/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@58b8956d
2024-07-10 00:24:11,696 TRACE [http-nio-8081-exec-6] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-10 00:24:11,696 TRACE [http-nio-8081-exec-6] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-10 00:24:11,696 DEBUG [http-nio-8081-exec-6] FilterChainProxy: Secured POST /receivers/create/
2024-07-10 00:24:11,707 TRACE [http-nio-8081-exec-6] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-10 00:24:11,709 INFO [kafka-producer-network-thread | emergency-producer-1] ReceiverServiceImpl: Message send successfully: telegram-receiver-user-request-topic-1@2
2024-07-10 00:24:33,710 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=10, memberId='consumer-telegram-notification-created-topic-1-b5551297-953c-43f4-93c3-77531fdd7c15', protocol='range'}
2024-07-10 00:24:33,710 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=10, memberId='consumer-telegram-notification-created-topic-2-d7e64f5c-b7c5-4359-9272-aa04eea934c7', protocol='range'}
2024-07-10 00:24:33,718 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Finished assignment for group at generation 10: {consumer-telegram-notification-created-topic-1-b5551297-953c-43f4-93c3-77531fdd7c15=Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]), consumer-telegram-notification-created-topic-2-d7e64f5c-b7c5-4359-9272-aa04eea934c7=Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2])}
2024-07-10 00:24:33,722 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=10, memberId='consumer-telegram-notification-created-topic-1-b5551297-953c-43f4-93c3-77531fdd7c15', protocol='range'}
2024-07-10 00:24:33,722 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=10, memberId='consumer-telegram-notification-created-topic-2-d7e64f5c-b7c5-4359-9272-aa04eea934c7', protocol='range'}
2024-07-10 00:24:33,722 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2])
2024-07-10 00:24:33,722 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2])
2024-07-10 00:24:33,723 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2
2024-07-10 00:24:33,723 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2
2024-07-10 00:24:33,730 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=3}}
2024-07-10 00:24:33,730 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=3}}
2024-07-10 00:24:33,731 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-2 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=4}}
2024-07-10 00:24:33,731 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=4}}
2024-07-10 00:24:33,731 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=3}}
2024-07-10 00:24:33,731 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-1 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=3}}
2024-07-10 00:24:33,733 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]
2024-07-10 00:24:33,733 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]
2024-07-10 00:24:33,772 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DefaultErrorHandler: Backoff FixedBackOff{interval=0, currentAttempts=1, maxAttempts=0} exhausted for telegram-receiver-user-request-topic-1@2
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method could not be invoked with the incoming message
Endpoint handler details:
Method [public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)]
Bean [org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler@6dcdc378]
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.checkAckArg(MessagingMessageListenerAdapter.java:446)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:424)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot handle message
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:424)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: org.springframework.messaging.converter.MessageConversionException: Cannot convert from [java.lang.String] to [org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent] for GenericMessage [payload={"receiverId":38,"telegramUsername":"scythejudge"}, headers={kafka_offset=2, kafka_consumer=org.springframework.kafka.core.DefaultKafkaConsumerFactory$ExtendedKafkaConsumer@49667dae, kafka_timestampType=CREATE_TIME, kafka_receivedPartitionId=1, kafka_receivedTopic=telegram-receiver-user-request-topic, kafka_receivedTimestamp=1720560251704, __TypeId__=[B@49cfc726, kafka_groupId=telegram-notification-created-topic}]
	at org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver.resolveArgument(PayloadMethodArgumentResolver.java:151)
	at org.springframework.kafka.listener.adapter.KafkaNullAwarePayloadArgumentResolver.resolveArgument(KafkaNullAwarePayloadArgumentResolver.java:48)
	at org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:118)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:147)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:115)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	... 16 common frames omitted
2024-07-10 00:27:01,986 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node -2 disconnected.
2024-07-10 00:27:01,989 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node -1 disconnected.
2024-07-10 00:28:55,842 INFO [main] TelegramNotificationsApplication: Starting TelegramNotificationsApplication using Java 17.0.10 with PID 22400 (D:\programming\java\emergency-ms\telegram-notifications\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-10 00:28:55,843 DEBUG [main] TelegramNotificationsApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-10 00:28:55,843 INFO [main] TelegramNotificationsApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-10 00:28:56,333 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 00:28:56,389 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 49 ms. Found 1 JPA repository interface.
2024-07-10 00:28:56,874 INFO [main] TomcatWebServer: Tomcat initialized with port 8083 (http)
2024-07-10 00:28:56,882 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8083"]
2024-07-10 00:28:56,883 INFO [main] StandardService: Starting service [Tomcat]
2024-07-10 00:28:56,883 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 00:28:56,941 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-10 00:28:56,942 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1057 ms
2024-07-10 00:28:57,133 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-10 00:28:57,251 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@4f3c7808
2024-07-10 00:28:57,252 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-10 00:28:57,277 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_telegram_db (PostgreSQL 16.3)
2024-07-10 00:28:57,313 INFO [main] DbValidate: Successfully validated 1 migration (execution time 00:00.023s)
2024-07-10 00:28:57,344 INFO [main] DbMigrate: Current version of schema "public": 1.0
2024-07-10 00:28:57,346 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-10 00:28:57,411 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 00:28:57,457 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 00:28:57,484 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-10 00:28:57,718 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 00:28:58,310 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 00:28:58,313 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 00:28:58,740 WARN [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-10 00:28:59,042 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8083"]
2024-07-10 00:28:59,056 INFO [main] TomcatWebServer: Tomcat started on port 8083 (http) with context path '/'
2024-07-10 00:28:59,086 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092, localhost:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-telegram-notification-created-topic-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = telegram-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-10 00:28:59,121 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-10 00:28:59,206 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:28:59,206 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:28:59,206 INFO [main] AppInfoParser: Kafka startTimeMs: 1720560539205
2024-07-10 00:28:59,210 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Subscribed to topic(s): telegram-notification-created-topic
2024-07-10 00:28:59,216 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092, localhost:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-telegram-notification-created-topic-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = telegram-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-10 00:28:59,217 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-10 00:28:59,225 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:28:59,225 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:28:59,225 INFO [main] AppInfoParser: Kafka startTimeMs: 1720560539225
2024-07-10 00:28:59,226 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Subscribed to topic(s): telegram-receiver-user-request-topic
2024-07-10 00:28:59,497 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metadata: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-10 00:28:59,497 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] Metadata: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-10 00:28:59,500 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-10 00:28:59,500 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-10 00:28:59,501 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:28:59,501 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:28:59,512 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-telegram-notification-created-topic-1-26c821ac-9bfb-4978-86ca-67fb2bbf1ccd
2024-07-10 00:28:59,512 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-telegram-notification-created-topic-2-6d2423c3-18ee-4afa-a900-1f6a1a7ea543
2024-07-10 00:28:59,512 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:28:59,512 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:28:59,550 INFO [main] TelegramNotificationsApplication: Started TelegramNotificationsApplication in 3.986 seconds (process running for 4.366)
2024-07-10 00:29:17,795 TRACE [http-nio-8081-exec-9] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@4ca12db9, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@212d688e, org.springframework.security.web.context.SecurityContextHolderFilter@758e6acd, org.springframework.security.web.header.HeaderWriterFilter@174e5929, org.springframework.security.web.authentication.logout.LogoutFilter@1ff65426, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@28592982, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@a703934, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4b428663, org.springframework.security.web.access.ExceptionTranslationFilter@5ec921f1, org.springframework.security.web.access.intercept.AuthorizationFilter@60a4595e]] (1/1)
2024-07-10 00:29:17,796 DEBUG [http-nio-8081-exec-9] FilterChainProxy: Securing POST /receivers/create/
2024-07-10 00:29:17,796 TRACE [http-nio-8081-exec-9] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:29:17,796 TRACE [http-nio-8081-exec-9] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:29:17,796 TRACE [http-nio-8081-exec-9] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:29:17,796 TRACE [http-nio-8081-exec-9] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:29:17,796 TRACE [http-nio-8081-exec-9] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:29:17,796 TRACE [http-nio-8081-exec-9] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:29:17,796 TRACE [http-nio-8081-exec-9] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:29:17,796 TRACE [http-nio-8081-exec-9] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:29:17,796 TRACE [http-nio-8081-exec-9] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:29:17,796 TRACE [http-nio-8081-exec-9] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:29:17,796 TRACE [http-nio-8081-exec-9] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:29:17,796 TRACE [http-nio-8081-exec-9] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:29:17,796 TRACE [http-nio-8081-exec-9] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /receivers/create/
2024-07-10 00:29:17,796 TRACE [http-nio-8081-exec-9] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /receivers/create/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@58b8956d
2024-07-10 00:29:17,796 TRACE [http-nio-8081-exec-9] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-10 00:29:17,796 TRACE [http-nio-8081-exec-9] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-10 00:29:17,796 DEBUG [http-nio-8081-exec-9] FilterChainProxy: Secured POST /receivers/create/
2024-07-10 00:29:17,802 TRACE [http-nio-8081-exec-9] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-10 00:29:17,803 INFO [kafka-producer-network-thread | emergency-producer-1] ReceiverServiceImpl: Message send successfully: telegram-receiver-user-request-topic-1@3
2024-07-10 00:29:37,477 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=11, memberId='consumer-telegram-notification-created-topic-1-26c821ac-9bfb-4978-86ca-67fb2bbf1ccd', protocol='range'}
2024-07-10 00:29:37,477 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=11, memberId='consumer-telegram-notification-created-topic-2-6d2423c3-18ee-4afa-a900-1f6a1a7ea543', protocol='range'}
2024-07-10 00:29:37,483 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Finished assignment for group at generation 11: {consumer-telegram-notification-created-topic-1-26c821ac-9bfb-4978-86ca-67fb2bbf1ccd=Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]), consumer-telegram-notification-created-topic-2-6d2423c3-18ee-4afa-a900-1f6a1a7ea543=Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2])}
2024-07-10 00:29:37,487 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=11, memberId='consumer-telegram-notification-created-topic-2-6d2423c3-18ee-4afa-a900-1f6a1a7ea543', protocol='range'}
2024-07-10 00:29:37,487 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=11, memberId='consumer-telegram-notification-created-topic-1-26c821ac-9bfb-4978-86ca-67fb2bbf1ccd', protocol='range'}
2024-07-10 00:29:37,487 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2])
2024-07-10 00:29:37,487 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2])
2024-07-10 00:29:37,490 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2
2024-07-10 00:29:37,490 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2
2024-07-10 00:29:37,497 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=3}}
2024-07-10 00:29:37,497 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=3}}
2024-07-10 00:29:37,497 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-2 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=4}}
2024-07-10 00:29:37,498 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=4}}
2024-07-10 00:29:37,498 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-1 to the committed offset FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=3}}
2024-07-10 00:29:37,498 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=3}}
2024-07-10 00:29:37,499 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]
2024-07-10 00:29:37,499 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]
2024-07-10 00:29:37,540 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 39
2024-07-10 00:29:37,670 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ProducerConfig: ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092, localhost:9094]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = telegram-notifications-producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 10000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 5000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2024-07-10 00:29:37,670 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-10 00:29:37,680 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaProducer: [Producer clientId=telegram-notifications-producer-1] Instantiated an idempotent producer.
2024-07-10 00:29:37,691 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:29:37,691 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:29:37,691 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] AppInfoParser: Kafka startTimeMs: 1720560577691
2024-07-10 00:29:37,700 WARN [kafka-producer-network-thread | telegram-notifications-producer-1] NetworkClient: [Producer clientId=telegram-notifications-producer-1] Error while fetching metadata with correlation id 1 : {telegram-receiver-user-response-topic=UNKNOWN_TOPIC_OR_PARTITION}
2024-07-10 00:29:37,700 INFO [kafka-producer-network-thread | telegram-notifications-producer-1] Metadata: [Producer clientId=telegram-notifications-producer-1] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-10 00:29:37,700 INFO [kafka-producer-network-thread | telegram-notifications-producer-1] TransactionManager: [Producer clientId=telegram-notifications-producer-1] ProducerId set to 3002 with epoch 0
2024-07-10 00:29:37,812 WARN [kafka-producer-network-thread | telegram-notifications-producer-1] NetworkClient: [Producer clientId=telegram-notifications-producer-1] Error while fetching metadata with correlation id 6 : {telegram-receiver-user-response-topic=UNKNOWN_TOPIC_OR_PARTITION}
2024-07-10 00:31:51,454 INFO [background-preinit] Version: HV000001: Hibernate Validator 8.0.1.Final
2024-07-10 00:31:51,479 INFO [main] EmergencyApplication: Starting EmergencyApplication using Java 17.0.10 with PID 16976 (D:\programming\java\emergency-ms\emergency\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-10 00:31:51,479 DEBUG [main] EmergencyApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-10 00:31:51,480 INFO [main] EmergencyApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-10 00:31:52,057 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 00:31:52,114 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 44 ms. Found 3 JPA repository interfaces.
2024-07-10 00:31:52,607 INFO [main] TomcatWebServer: Tomcat initialized with port 8081 (http)
2024-07-10 00:31:52,615 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8081"]
2024-07-10 00:31:52,616 INFO [main] StandardService: Starting service [Tomcat]
2024-07-10 00:31:52,617 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 00:31:52,670 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-10 00:31:52,671 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1158 ms
2024-07-10 00:31:52,866 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-10 00:31:52,998 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5a47730c
2024-07-10 00:31:52,999 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-10 00:31:53,025 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_notifications_db (PostgreSQL 16.3)
2024-07-10 00:31:53,061 INFO [main] DbValidate: Successfully validated 2 migrations (execution time 00:00.020s)
2024-07-10 00:31:53,099 INFO [main] DbMigrate: Current version of schema "public": 1.1
2024-07-10 00:31:53,102 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-10 00:31:53,161 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 00:31:53,204 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 00:31:53,232 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-10 00:31:53,468 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 00:31:54,028 INFO [main] EntityInstantiatorPojoStandard: HHH000182: No default (no-argument) constructor for class: org.example.emergency.entity.EmergencyCall (class must be instantiated by Interceptor)
2024-07-10 00:31:54,221 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 00:31:54,223 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 00:31:54,479 TRACE [main] AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer: Eagerly initializing {securityConfig=org.example.emergency.config.SecurityConfig$$SpringCGLIB$$0@4a49ce3a}
2024-07-10 00:31:54,488 INFO [main] InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer: Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-07-10 00:31:54,489 WARN [main] InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer: Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-07-10 00:31:54,562 INFO [main] QueryEnhancerFactory: Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-10 00:31:54,611 WARN [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-10 00:31:54,790 DEBUG [main] DefaultSecurityFilterChain: Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-10 00:31:55,009 INFO [main] AdminClientConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-07-10 00:31:55,090 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:31:55,090 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:31:55,090 INFO [main] AppInfoParser: Kafka startTimeMs: 1720560715088
2024-07-10 00:31:55,316 INFO [kafka-admin-client-thread | emergency-admin-0] AppInfoParser: App info kafka.admin.client for emergency-admin-0 unregistered
2024-07-10 00:31:55,319 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics scheduler closed
2024-07-10 00:31:55,319 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-10 00:31:55,319 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics reporters closed
2024-07-10 00:31:55,322 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8081"]
2024-07-10 00:31:55,330 INFO [main] TomcatWebServer: Tomcat started on port 8081 (http) with context path '/'
2024-07-10 00:31:55,347 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092, localhost:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-telegram-notification-created-topic-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = telegram-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-10 00:31:55,374 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-10 00:31:55,421 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:31:55,422 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:31:55,422 INFO [main] AppInfoParser: Kafka startTimeMs: 1720560715421
2024-07-10 00:31:55,425 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Subscribed to topic(s): telegram-receiver-user-response-topic
2024-07-10 00:31:55,439 INFO [main] EmergencyApplication: Started EmergencyApplication in 4.227 seconds (process running for 4.59)
2024-07-10 00:31:55,444 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metadata: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-10 00:31:55,445 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-10 00:31:55,447 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:31:55,456 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-telegram-notification-created-topic-1-ddff95d0-679a-46e3-97a5-bf0299699e77
2024-07-10 00:31:55,457 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:31:55,865 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Request joining group due to: group is already rebalancing
2024-07-10 00:31:55,865 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: group is already rebalancing
2024-07-10 00:31:55,865 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Revoke previously assigned partitions telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2
2024-07-10 00:31:55,865 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Revoke previously assigned partitions telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2
2024-07-10 00:31:55,866 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions revoked: [telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]
2024-07-10 00:31:55,866 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions revoked: [telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]
2024-07-10 00:31:55,866 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:31:55,866 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:31:55,869 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=12, memberId='consumer-telegram-notification-created-topic-2-6d2423c3-18ee-4afa-a900-1f6a1a7ea543', protocol='range'}
2024-07-10 00:31:55,869 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=12, memberId='consumer-telegram-notification-created-topic-1-ddff95d0-679a-46e3-97a5-bf0299699e77', protocol='range'}
2024-07-10 00:31:55,869 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=12, memberId='consumer-telegram-notification-created-topic-1-26c821ac-9bfb-4978-86ca-67fb2bbf1ccd', protocol='range'}
2024-07-10 00:31:55,974 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Finished assignment for group at generation 12: {consumer-telegram-notification-created-topic-1-26c821ac-9bfb-4978-86ca-67fb2bbf1ccd=Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]), consumer-telegram-notification-created-topic-2-6d2423c3-18ee-4afa-a900-1f6a1a7ea543=Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]), consumer-telegram-notification-created-topic-1-ddff95d0-679a-46e3-97a5-bf0299699e77=Assignment(partitions=[telegram-receiver-user-response-topic-0])}
2024-07-10 00:31:55,976 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=12, memberId='consumer-telegram-notification-created-topic-2-6d2423c3-18ee-4afa-a900-1f6a1a7ea543', protocol='range'}
2024-07-10 00:31:55,976 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=12, memberId='consumer-telegram-notification-created-topic-1-26c821ac-9bfb-4978-86ca-67fb2bbf1ccd', protocol='range'}
2024-07-10 00:31:55,976 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2])
2024-07-10 00:31:55,976 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2])
2024-07-10 00:31:55,976 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2
2024-07-10 00:31:55,976 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2
2024-07-10 00:31:55,976 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=12, memberId='consumer-telegram-notification-created-topic-1-ddff95d0-679a-46e3-97a5-bf0299699e77', protocol='range'}
2024-07-10 00:31:55,978 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=3}}
2024-07-10 00:31:55,977 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=3}}
2024-07-10 00:31:55,978 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-2 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=4}}
2024-07-10 00:31:55,978 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=4}}
2024-07-10 00:31:55,978 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-1 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=3}}
2024-07-10 00:31:55,978 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=3}}
2024-07-10 00:31:55,978 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]
2024-07-10 00:31:55,978 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]
2024-07-10 00:31:55,978 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-receiver-user-response-topic-0])
2024-07-10 00:31:55,980 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-receiver-user-response-topic-0
2024-07-10 00:31:55,982 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Found no committed offset for partition telegram-receiver-user-response-topic-0
2024-07-10 00:31:55,984 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Found no committed offset for partition telegram-receiver-user-response-topic-0
2024-07-10 00:31:55,995 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] SubscriptionState: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Resetting offset for partition telegram-receiver-user-response-topic-0 to position FetchPosition{offset=1, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=0}}.
2024-07-10 00:31:55,997 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-receiver-user-response-topic-0]
2024-07-10 00:32:07,535 INFO [http-nio-8081-exec-2] [/]: Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-10 00:32:07,535 INFO [http-nio-8081-exec-2] DispatcherServlet: Initializing Servlet 'dispatcherServlet'
2024-07-10 00:32:07,536 INFO [http-nio-8081-exec-2] DispatcherServlet: Completed initialization in 1 ms
2024-07-10 00:32:07,548 TRACE [http-nio-8081-exec-2] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@27dea4d0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4c649507, org.springframework.security.web.context.SecurityContextHolderFilter@9abbe39, org.springframework.security.web.header.HeaderWriterFilter@3f54fabc, org.springframework.security.web.authentication.logout.LogoutFilter@683218c8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1455a374, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@54418834, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@73ff3448, org.springframework.security.web.access.ExceptionTranslationFilter@a6fc2e1, org.springframework.security.web.access.intercept.AuthorizationFilter@5d3a147f]] (1/1)
2024-07-10 00:32:07,548 DEBUG [http-nio-8081-exec-2] FilterChainProxy: Securing POST /authentication/login/
2024-07-10 00:32:07,549 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:32:07,549 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:32:07,550 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:32:07,551 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:32:07,552 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:32:07,552 TRACE [http-nio-8081-exec-2] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:32:07,552 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:32:07,552 TRACE [http-nio-8081-exec-2] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:32:07,552 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:32:07,553 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:32:07,553 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:32:07,553 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:32:07,553 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /authentication/login/
2024-07-10 00:32:07,554 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /authentication/login/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@13873c0d
2024-07-10 00:32:07,554 TRACE [http-nio-8081-exec-2] HttpSessionSecurityContextRepository: No HttpSession currently exists
2024-07-10 00:32:07,554 TRACE [http-nio-8081-exec-2] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-10 00:32:07,554 TRACE [http-nio-8081-exec-2] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-10 00:32:07,555 TRACE [http-nio-8081-exec-2] AnonymousAuthenticationFilter: Set SecurityContextHolder to AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]]
2024-07-10 00:32:07,555 DEBUG [http-nio-8081-exec-2] FilterChainProxy: Secured POST /authentication/login/
2024-07-10 00:32:07,607 TRACE [http-nio-8081-exec-2] ProviderManager: Authenticating request with DaoAuthenticationProvider (1/1)
2024-07-10 00:32:07,827 DEBUG [http-nio-8081-exec-2] DaoAuthenticationProvider: Authenticated user
2024-07-10 00:32:07,846 DEBUG [http-nio-8081-exec-2] HttpSessionSecurityContextRepository: Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@7e3e2ab5]
2024-07-10 00:32:07,863 TRACE [http-nio-8081-exec-2] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-10 00:32:11,497 TRACE [http-nio-8081-exec-4] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@27dea4d0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4c649507, org.springframework.security.web.context.SecurityContextHolderFilter@9abbe39, org.springframework.security.web.header.HeaderWriterFilter@3f54fabc, org.springframework.security.web.authentication.logout.LogoutFilter@683218c8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1455a374, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@54418834, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@73ff3448, org.springframework.security.web.access.ExceptionTranslationFilter@a6fc2e1, org.springframework.security.web.access.intercept.AuthorizationFilter@5d3a147f]] (1/1)
2024-07-10 00:32:11,497 DEBUG [http-nio-8081-exec-4] FilterChainProxy: Securing POST /receivers/create/
2024-07-10 00:32:11,497 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:32:11,497 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:32:11,497 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:32:11,497 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:32:11,497 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:32:11,497 TRACE [http-nio-8081-exec-4] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:32:11,497 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:32:11,497 TRACE [http-nio-8081-exec-4] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:32:11,497 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:32:11,497 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:32:11,497 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:32:11,497 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:32:11,497 TRACE [http-nio-8081-exec-4] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /receivers/create/
2024-07-10 00:32:11,498 TRACE [http-nio-8081-exec-4] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /receivers/create/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@81a3220
2024-07-10 00:32:11,498 TRACE [http-nio-8081-exec-4] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-10 00:32:11,498 TRACE [http-nio-8081-exec-4] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-10 00:32:11,498 DEBUG [http-nio-8081-exec-4] FilterChainProxy: Secured POST /receivers/create/
2024-07-10 00:32:11,534 INFO [http-nio-8081-exec-4] ProducerConfig: ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092, localhost:9094]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 10000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 5000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2024-07-10 00:32:11,535 INFO [http-nio-8081-exec-4] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-10 00:32:11,543 INFO [http-nio-8081-exec-4] KafkaProducer: [Producer clientId=emergency-producer-1] Instantiated an idempotent producer.
2024-07-10 00:32:11,553 INFO [http-nio-8081-exec-4] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:32:11,554 INFO [http-nio-8081-exec-4] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:32:11,554 INFO [http-nio-8081-exec-4] AppInfoParser: Kafka startTimeMs: 1720560731553
2024-07-10 00:32:11,558 INFO [kafka-producer-network-thread | emergency-producer-1] Metadata: [Producer clientId=emergency-producer-1] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-10 00:32:11,581 TRACE [http-nio-8081-exec-4] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-10 00:32:11,676 INFO [kafka-producer-network-thread | emergency-producer-1] TransactionManager: [Producer clientId=emergency-producer-1] ProducerId set to 4000 with epoch 0
2024-07-10 00:32:11,689 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 42
2024-07-10 00:32:11,692 INFO [kafka-producer-network-thread | emergency-producer-1] ReceiverServiceImpl: Message send successfully: telegram-receiver-user-request-topic-1@4
2024-07-10 00:32:11,706 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] TelegramReceiverUserResponseEventHandler: Received event to receiver with id 42
2024-07-10 00:32:49,810 TRACE [http-nio-8081-exec-3] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@27dea4d0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4c649507, org.springframework.security.web.context.SecurityContextHolderFilter@9abbe39, org.springframework.security.web.header.HeaderWriterFilter@3f54fabc, org.springframework.security.web.authentication.logout.LogoutFilter@683218c8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1455a374, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@54418834, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@73ff3448, org.springframework.security.web.access.ExceptionTranslationFilter@a6fc2e1, org.springframework.security.web.access.intercept.AuthorizationFilter@5d3a147f]] (1/1)
2024-07-10 00:32:49,810 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Securing POST /receivers/create/
2024-07-10 00:32:49,810 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:32:49,810 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:32:49,810 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:32:49,810 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:32:49,810 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:32:49,810 TRACE [http-nio-8081-exec-3] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:32:49,811 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:32:49,811 TRACE [http-nio-8081-exec-3] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:32:49,811 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:32:49,811 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:32:49,811 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:32:49,811 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:32:49,811 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /receivers/create/
2024-07-10 00:32:49,811 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /receivers/create/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@81a3220
2024-07-10 00:32:49,811 TRACE [http-nio-8081-exec-3] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-10 00:32:49,811 TRACE [http-nio-8081-exec-3] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-10 00:32:49,811 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Secured POST /receivers/create/
2024-07-10 00:32:49,818 INFO [kafka-producer-network-thread | emergency-producer-1] ReceiverServiceImpl: Message send successfully: telegram-receiver-user-request-topic-1@5
2024-07-10 00:32:49,819 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 43
2024-07-10 00:32:49,819 TRACE [http-nio-8081-exec-3] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-10 00:32:49,838 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 5 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:32:49,839 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-10 00:32:50,322 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 43
2024-07-10 00:32:50,337 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 5 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:32:50,337 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-10 00:32:50,836 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 43
2024-07-10 00:32:50,850 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 5 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:32:50,850 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-10 00:32:51,349 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 43
2024-07-10 00:32:51,363 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 5 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:32:51,363 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-10 00:32:51,864 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 43
2024-07-10 00:32:51,878 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 5 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:32:51,878 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-10 00:32:52,381 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 43
2024-07-10 00:32:52,396 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 5 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:32:52,396 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-10 00:32:52,894 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 43
2024-07-10 00:32:52,909 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 5 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:32:52,909 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-10 00:32:53,408 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 43
2024-07-10 00:32:53,422 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 5 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:32:53,422 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-10 00:32:53,911 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 43
2024-07-10 00:32:53,925 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 5 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:32:53,925 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-10 00:32:54,413 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 43
2024-07-10 00:32:54,417 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DefaultErrorHandler: Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for telegram-receiver-user-request-topic-1@5
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-10 00:37:59,557 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node -1 disconnected.
2024-07-10 00:37:59,557 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Node -2 disconnected.
2024-07-10 00:37:59,559 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Node -1 disconnected.
2024-07-10 00:37:59,559 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node -2 disconnected.
2024-07-10 00:38:38,465 INFO [kafka-producer-network-thread | telegram-notifications-producer-1] NetworkClient: [Producer clientId=telegram-notifications-producer-1] Node -2 disconnected.
2024-07-10 00:38:38,466 INFO [kafka-producer-network-thread | telegram-notifications-producer-1] NetworkClient: [Producer clientId=telegram-notifications-producer-1] Node -1 disconnected.
2024-07-10 00:40:55,939 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node -1 disconnected.
2024-07-10 00:40:55,941 INFO [kafka-coordinator-heartbeat-thread | telegram-notification-created-topic] NetworkClient: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Node -2 disconnected.
2024-07-10 00:41:11,905 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node -1 disconnected.
2024-07-10 00:41:11,905 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node -2 disconnected.
2024-07-10 00:41:11,906 INFO [kafka-producer-network-thread | emergency-producer-1] NetworkClient: [Producer clientId=emergency-producer-1] Node 2 disconnected.
2024-07-10 00:43:38,147 INFO [kafka-producer-network-thread | telegram-notifications-producer-1] NetworkClient: [Producer clientId=telegram-notifications-producer-1] Node 3 disconnected.
2024-07-10 00:44:31,066 INFO [background-preinit] Version: HV000001: Hibernate Validator 8.0.1.Final
2024-07-10 00:44:31,098 INFO [main] EmergencyApplication: Starting EmergencyApplication using Java 17.0.10 with PID 21736 (D:\programming\java\emergency-ms\emergency\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-10 00:44:31,099 DEBUG [main] EmergencyApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-10 00:44:31,100 INFO [main] EmergencyApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-10 00:44:31,680 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 00:44:31,735 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 45 ms. Found 3 JPA repository interfaces.
2024-07-10 00:44:32,235 INFO [main] TomcatWebServer: Tomcat initialized with port 8081 (http)
2024-07-10 00:44:32,245 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8081"]
2024-07-10 00:44:32,246 INFO [main] StandardService: Starting service [Tomcat]
2024-07-10 00:44:32,246 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 00:44:32,299 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-10 00:44:32,300 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1167 ms
2024-07-10 00:44:32,519 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-10 00:44:32,641 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5a47730c
2024-07-10 00:44:32,642 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-10 00:44:32,666 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_notifications_db (PostgreSQL 16.3)
2024-07-10 00:44:32,709 INFO [main] DbValidate: Successfully validated 2 migrations (execution time 00:00.027s)
2024-07-10 00:44:32,758 INFO [main] DbMigrate: Current version of schema "public": 1.1
2024-07-10 00:44:32,759 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-10 00:44:32,823 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 00:44:32,874 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 00:44:32,910 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-10 00:44:33,161 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 00:44:33,755 INFO [main] EntityInstantiatorPojoStandard: HHH000182: No default (no-argument) constructor for class: org.example.emergency.entity.EmergencyCall (class must be instantiated by Interceptor)
2024-07-10 00:44:33,952 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 00:44:33,954 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 00:44:34,211 TRACE [main] AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer: Eagerly initializing {securityConfig=org.example.emergency.config.SecurityConfig$$SpringCGLIB$$0@4a49ce3a}
2024-07-10 00:44:34,221 INFO [main] InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer: Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-07-10 00:44:34,222 WARN [main] InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer: Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-07-10 00:44:34,288 INFO [main] QueryEnhancerFactory: Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-10 00:44:34,345 WARN [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-10 00:44:34,548 DEBUG [main] DefaultSecurityFilterChain: Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-10 00:44:34,765 INFO [main] AdminClientConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-07-10 00:44:34,845 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:44:34,845 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:44:34,845 INFO [main] AppInfoParser: Kafka startTimeMs: 1720561474844
2024-07-10 00:44:35,067 INFO [kafka-admin-client-thread | emergency-admin-0] AppInfoParser: App info kafka.admin.client for emergency-admin-0 unregistered
2024-07-10 00:44:35,072 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics scheduler closed
2024-07-10 00:44:35,072 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-10 00:44:35,072 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics reporters closed
2024-07-10 00:44:35,076 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8081"]
2024-07-10 00:44:35,085 INFO [main] TomcatWebServer: Tomcat started on port 8081 (http) with context path '/'
2024-07-10 00:44:35,103 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092, localhost:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-telegram-notification-created-topic-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = telegram-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-10 00:44:35,128 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-10 00:44:35,169 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:44:35,169 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:44:35,169 INFO [main] AppInfoParser: Kafka startTimeMs: 1720561475169
2024-07-10 00:44:35,171 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Subscribed to topic(s): telegram-receiver-user-response-topic
2024-07-10 00:44:35,182 INFO [main] EmergencyApplication: Started EmergencyApplication in 4.39 seconds (process running for 4.761)
2024-07-10 00:44:35,187 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metadata: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-10 00:44:35,189 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-10 00:44:35,190 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:44:35,199 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-telegram-notification-created-topic-1-8bda7c9f-2ca1-476a-ae57-3da90f062096
2024-07-10 00:44:35,200 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:44:36,902 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: group is already rebalancing
2024-07-10 00:44:36,902 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Request joining group due to: group is already rebalancing
2024-07-10 00:44:36,902 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Revoke previously assigned partitions telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2
2024-07-10 00:44:36,902 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Revoke previously assigned partitions telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2
2024-07-10 00:44:36,902 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions revoked: [telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]
2024-07-10 00:44:36,902 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions revoked: [telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]
2024-07-10 00:44:36,903 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:44:36,903 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:44:48,788 INFO [http-nio-8081-exec-2] [/]: Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-10 00:44:48,789 INFO [http-nio-8081-exec-2] DispatcherServlet: Initializing Servlet 'dispatcherServlet'
2024-07-10 00:44:48,790 INFO [http-nio-8081-exec-2] DispatcherServlet: Completed initialization in 1 ms
2024-07-10 00:44:48,810 TRACE [http-nio-8081-exec-2] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@2fbc7508, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1a0f1f1, org.springframework.security.web.context.SecurityContextHolderFilter@9abbe39, org.springframework.security.web.header.HeaderWriterFilter@3f54fabc, org.springframework.security.web.authentication.logout.LogoutFilter@683218c8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1455a374, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@54418834, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@41efeb15, org.springframework.security.web.access.ExceptionTranslationFilter@a6fc2e1, org.springframework.security.web.access.intercept.AuthorizationFilter@5d3a147f]] (1/1)
2024-07-10 00:44:48,811 DEBUG [http-nio-8081-exec-2] FilterChainProxy: Securing POST /authentication/login/
2024-07-10 00:44:48,811 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:44:48,812 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:44:48,813 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:44:48,814 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:44:48,815 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:44:48,815 TRACE [http-nio-8081-exec-2] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:44:48,815 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:44:48,816 TRACE [http-nio-8081-exec-2] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:44:48,816 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:44:48,817 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:44:48,817 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:44:48,817 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:44:48,817 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /authentication/login/
2024-07-10 00:44:48,819 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /authentication/login/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@8682dc8
2024-07-10 00:44:48,819 TRACE [http-nio-8081-exec-2] HttpSessionSecurityContextRepository: No HttpSession currently exists
2024-07-10 00:44:48,819 TRACE [http-nio-8081-exec-2] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-10 00:44:48,819 TRACE [http-nio-8081-exec-2] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-10 00:44:48,820 TRACE [http-nio-8081-exec-2] AnonymousAuthenticationFilter: Set SecurityContextHolder to AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]]
2024-07-10 00:44:48,821 DEBUG [http-nio-8081-exec-2] FilterChainProxy: Secured POST /authentication/login/
2024-07-10 00:44:48,891 TRACE [http-nio-8081-exec-2] ProviderManager: Authenticating request with DaoAuthenticationProvider (1/1)
2024-07-10 00:44:49,117 DEBUG [http-nio-8081-exec-2] DaoAuthenticationProvider: Authenticated user
2024-07-10 00:44:49,136 DEBUG [http-nio-8081-exec-2] HttpSessionSecurityContextRepository: Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@6fce25]
2024-07-10 00:44:49,155 TRACE [http-nio-8081-exec-2] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-10 00:44:53,913 TRACE [http-nio-8081-exec-3] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@2fbc7508, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1a0f1f1, org.springframework.security.web.context.SecurityContextHolderFilter@9abbe39, org.springframework.security.web.header.HeaderWriterFilter@3f54fabc, org.springframework.security.web.authentication.logout.LogoutFilter@683218c8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1455a374, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@54418834, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@41efeb15, org.springframework.security.web.access.ExceptionTranslationFilter@a6fc2e1, org.springframework.security.web.access.intercept.AuthorizationFilter@5d3a147f]] (1/1)
2024-07-10 00:44:53,913 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Securing POST /receivers/create/
2024-07-10 00:44:53,913 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:44:53,913 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:44:53,913 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:44:53,913 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:44:53,913 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:44:53,913 TRACE [http-nio-8081-exec-3] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:44:53,913 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:44:53,913 TRACE [http-nio-8081-exec-3] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:44:53,913 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:44:53,913 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:44:53,913 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:44:53,914 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:44:53,914 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /receivers/create/
2024-07-10 00:44:53,914 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /receivers/create/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@a4b8dbd
2024-07-10 00:44:53,914 TRACE [http-nio-8081-exec-3] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-10 00:44:53,914 TRACE [http-nio-8081-exec-3] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-10 00:44:53,914 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Secured POST /receivers/create/
2024-07-10 00:44:53,951 INFO [http-nio-8081-exec-3] ProducerConfig: ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092, localhost:9094]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 10000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 5000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2024-07-10 00:44:53,951 INFO [http-nio-8081-exec-3] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-10 00:44:53,957 INFO [http-nio-8081-exec-3] KafkaProducer: [Producer clientId=emergency-producer-1] Instantiated an idempotent producer.
2024-07-10 00:44:53,967 INFO [http-nio-8081-exec-3] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:44:53,967 INFO [http-nio-8081-exec-3] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:44:53,967 INFO [http-nio-8081-exec-3] AppInfoParser: Kafka startTimeMs: 1720561493967
2024-07-10 00:44:53,972 INFO [kafka-producer-network-thread | emergency-producer-1] Metadata: [Producer clientId=emergency-producer-1] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-10 00:44:53,973 INFO [kafka-producer-network-thread | emergency-producer-1] TransactionManager: [Producer clientId=emergency-producer-1] ProducerId set to 3003 with epoch 0
2024-07-10 00:44:54,016 TRACE [http-nio-8081-exec-3] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-10 00:45:00,905 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=13, memberId='consumer-telegram-notification-created-topic-2-6d2423c3-18ee-4afa-a900-1f6a1a7ea543', protocol='range'}
2024-07-10 00:45:00,905 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=13, memberId='consumer-telegram-notification-created-topic-1-26c821ac-9bfb-4978-86ca-67fb2bbf1ccd', protocol='range'}
2024-07-10 00:45:00,905 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=13, memberId='consumer-telegram-notification-created-topic-1-8bda7c9f-2ca1-476a-ae57-3da90f062096', protocol='range'}
2024-07-10 00:45:00,906 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Finished assignment for group at generation 13: {consumer-telegram-notification-created-topic-1-26c821ac-9bfb-4978-86ca-67fb2bbf1ccd=Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]), consumer-telegram-notification-created-topic-2-6d2423c3-18ee-4afa-a900-1f6a1a7ea543=Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]), consumer-telegram-notification-created-topic-1-8bda7c9f-2ca1-476a-ae57-3da90f062096=Assignment(partitions=[telegram-receiver-user-response-topic-0])}
2024-07-10 00:45:00,907 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=13, memberId='consumer-telegram-notification-created-topic-2-6d2423c3-18ee-4afa-a900-1f6a1a7ea543', protocol='range'}
2024-07-10 00:45:00,907 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=13, memberId='consumer-telegram-notification-created-topic-1-26c821ac-9bfb-4978-86ca-67fb2bbf1ccd', protocol='range'}
2024-07-10 00:45:00,907 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2])
2024-07-10 00:45:00,907 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2])
2024-07-10 00:45:00,907 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=13, memberId='consumer-telegram-notification-created-topic-1-8bda7c9f-2ca1-476a-ae57-3da90f062096', protocol='range'}
2024-07-10 00:45:00,907 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2
2024-07-10 00:45:00,907 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2
2024-07-10 00:45:00,909 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=3}}
2024-07-10 00:45:00,909 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=3}}
2024-07-10 00:45:00,909 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-2 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=4}}
2024-07-10 00:45:00,909 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=4}}
2024-07-10 00:45:00,909 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-1 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=3}}
2024-07-10 00:45:00,909 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=3}}
2024-07-10 00:45:00,909 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]
2024-07-10 00:45:00,909 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]
2024-07-10 00:45:00,909 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-receiver-user-response-topic-0])
2024-07-10 00:45:00,910 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 47
2024-07-10 00:45:00,910 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-receiver-user-response-topic-0
2024-07-10 00:45:00,915 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-response-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=0}}
2024-07-10 00:45:00,916 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-receiver-user-response-topic-0]
2024-07-10 00:45:00,936 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 6 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:45:00,936 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-10 00:45:01,420 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 47
2024-07-10 00:45:01,435 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 6 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:45:01,435 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-10 00:45:01,937 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 47
2024-07-10 00:45:01,951 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 6 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:45:01,951 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-10 00:45:02,451 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 47
2024-07-10 00:45:02,466 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 6 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:45:02,466 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-10 00:45:02,954 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 47
2024-07-10 00:45:02,969 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 6 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:45:02,969 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at jdk.internal.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 24 common frames omitted
2024-07-10 00:45:03,456 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 47
2024-07-10 00:45:03,471 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 6 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:45:03,471 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at jdk.internal.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 24 common frames omitted
2024-07-10 00:45:03,971 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 47
2024-07-10 00:45:03,986 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 6 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:45:03,986 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at jdk.internal.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 24 common frames omitted
2024-07-10 00:45:04,486 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 47
2024-07-10 00:45:04,501 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 6 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:45:04,501 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at jdk.internal.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 24 common frames omitted
2024-07-10 00:45:05,001 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 47
2024-07-10 00:45:05,016 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 6 for partition telegram-receiver-user-request-topic-1
2024-07-10 00:45:05,016 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at jdk.internal.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 24 common frames omitted
2024-07-10 00:45:05,516 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 47
2024-07-10 00:45:05,518 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DefaultErrorHandler: Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for telegram-receiver-user-request-topic-1@6
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at jdk.internal.reflect.GeneratedMethodAccessor20.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at jdk.internal.reflect.GeneratedMethodAccessor22.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 24 common frames omitted
2024-07-10 00:45:53,602 INFO [background-preinit] Version: HV000001: Hibernate Validator 8.0.1.Final
2024-07-10 00:45:53,634 INFO [main] EmergencyApplication: Starting EmergencyApplication using Java 17.0.10 with PID 19040 (D:\programming\java\emergency-ms\emergency\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-10 00:45:53,634 DEBUG [main] EmergencyApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-10 00:45:53,635 INFO [main] EmergencyApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-10 00:45:54,196 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 00:45:54,261 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 59 ms. Found 3 JPA repository interfaces.
2024-07-10 00:45:54,788 INFO [main] TomcatWebServer: Tomcat initialized with port 8081 (http)
2024-07-10 00:45:54,797 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8081"]
2024-07-10 00:45:54,798 INFO [main] StandardService: Starting service [Tomcat]
2024-07-10 00:45:54,799 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 00:45:54,857 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-10 00:45:54,858 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1193 ms
2024-07-10 00:45:55,069 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-10 00:45:55,205 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5a47730c
2024-07-10 00:45:55,206 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-10 00:45:55,230 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_notifications_db (PostgreSQL 16.3)
2024-07-10 00:45:55,265 INFO [main] DbValidate: Successfully validated 2 migrations (execution time 00:00.023s)
2024-07-10 00:45:55,306 INFO [main] DbMigrate: Current version of schema "public": 1.1
2024-07-10 00:45:55,310 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-10 00:45:55,377 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 00:45:55,420 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 00:45:55,449 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-10 00:45:55,688 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 00:45:56,249 INFO [main] EntityInstantiatorPojoStandard: HHH000182: No default (no-argument) constructor for class: org.example.emergency.entity.EmergencyCall (class must be instantiated by Interceptor)
2024-07-10 00:45:56,462 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 00:45:56,464 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 00:45:56,727 TRACE [main] AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer: Eagerly initializing {securityConfig=org.example.emergency.config.SecurityConfig$$SpringCGLIB$$0@4a49ce3a}
2024-07-10 00:45:56,740 INFO [main] InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer: Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-07-10 00:45:56,740 WARN [main] InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer: Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-07-10 00:45:56,861 INFO [main] QueryEnhancerFactory: Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-10 00:45:56,909 WARN [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-10 00:45:57,101 DEBUG [main] DefaultSecurityFilterChain: Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-10 00:45:57,352 INFO [main] AdminClientConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-07-10 00:45:57,442 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:45:57,442 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:45:57,443 INFO [main] AppInfoParser: Kafka startTimeMs: 1720561557441
2024-07-10 00:45:57,699 INFO [kafka-admin-client-thread | emergency-admin-0] AppInfoParser: App info kafka.admin.client for emergency-admin-0 unregistered
2024-07-10 00:45:57,702 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics scheduler closed
2024-07-10 00:45:57,702 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-10 00:45:57,702 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics reporters closed
2024-07-10 00:45:57,706 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8081"]
2024-07-10 00:45:57,716 INFO [main] TomcatWebServer: Tomcat started on port 8081 (http) with context path '/'
2024-07-10 00:45:57,735 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092, localhost:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-telegram-notification-created-topic-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = telegram-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-10 00:45:57,763 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-10 00:45:57,814 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:45:57,814 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:45:57,814 INFO [main] AppInfoParser: Kafka startTimeMs: 1720561557814
2024-07-10 00:45:57,816 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Subscribed to topic(s): telegram-receiver-user-response-topic
2024-07-10 00:45:57,832 INFO [main] EmergencyApplication: Started EmergencyApplication in 4.497 seconds (process running for 4.965)
2024-07-10 00:45:57,836 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metadata: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-10 00:45:57,840 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-10 00:45:57,841 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:45:57,852 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-telegram-notification-created-topic-1-969a26a4-4cb4-4ee9-9026-5d5b303cbe72
2024-07-10 00:45:57,853 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:45:58,025 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: group is already rebalancing
2024-07-10 00:45:58,025 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Request joining group due to: group is already rebalancing
2024-07-10 00:45:58,026 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Revoke previously assigned partitions telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2
2024-07-10 00:45:58,026 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Revoke previously assigned partitions telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2
2024-07-10 00:45:58,026 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions revoked: [telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]
2024-07-10 00:45:58,026 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions revoked: [telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]
2024-07-10 00:45:58,026 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:45:58,026 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:46:00,506 INFO [http-nio-8081-exec-1] [/]: Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-10 00:46:00,506 INFO [http-nio-8081-exec-1] DispatcherServlet: Initializing Servlet 'dispatcherServlet'
2024-07-10 00:46:00,507 INFO [http-nio-8081-exec-1] DispatcherServlet: Completed initialization in 1 ms
2024-07-10 00:46:00,525 TRACE [http-nio-8081-exec-1] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6f24ff13, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@11927d0c, org.springframework.security.web.context.SecurityContextHolderFilter@9abbe39, org.springframework.security.web.header.HeaderWriterFilter@3f54fabc, org.springframework.security.web.authentication.logout.LogoutFilter@683218c8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1455a374, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@54418834, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6acb58fc, org.springframework.security.web.access.ExceptionTranslationFilter@a6fc2e1, org.springframework.security.web.access.intercept.AuthorizationFilter@5d3a147f]] (1/1)
2024-07-10 00:46:00,526 DEBUG [http-nio-8081-exec-1] FilterChainProxy: Securing POST /receivers/create/
2024-07-10 00:46:00,527 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:46:00,527 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:46:00,528 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:46:00,529 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:46:00,530 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:46:00,531 TRACE [http-nio-8081-exec-1] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:46:00,531 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:46:00,531 TRACE [http-nio-8081-exec-1] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:46:00,531 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:46:00,531 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:46:00,532 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:46:00,532 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:46:00,532 TRACE [http-nio-8081-exec-1] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /receivers/create/
2024-07-10 00:46:00,533 TRACE [http-nio-8081-exec-1] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /receivers/create/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@1313b08a
2024-07-10 00:46:00,533 TRACE [http-nio-8081-exec-1] HttpSessionSecurityContextRepository: No HttpSession currently exists
2024-07-10 00:46:00,533 TRACE [http-nio-8081-exec-1] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-10 00:46:00,533 TRACE [http-nio-8081-exec-1] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-10 00:46:00,534 TRACE [http-nio-8081-exec-1] AnonymousAuthenticationFilter: Set SecurityContextHolder to AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]]
2024-07-10 00:46:00,535 TRACE [http-nio-8081-exec-1] ExceptionTranslationFilter: Sending AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]] to authentication entry point since access is denied
org.springframework.security.access.AccessDeniedException: Access Denied
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:98)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2024-07-10 00:46:00,559 DEBUG [http-nio-8081-exec-1] HttpSessionRequestCache: Saved request http://localhost:8081/receivers/create/?continue to session
2024-07-10 00:46:00,559 DEBUG [http-nio-8081-exec-1] Http403ForbiddenEntryPoint: Pre-authenticated entry point called. Rejecting access
2024-07-10 00:46:00,560 TRACE [http-nio-8081-exec-1] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-10 00:46:00,564 TRACE [http-nio-8081-exec-1] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6f24ff13, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@11927d0c, org.springframework.security.web.context.SecurityContextHolderFilter@9abbe39, org.springframework.security.web.header.HeaderWriterFilter@3f54fabc, org.springframework.security.web.authentication.logout.LogoutFilter@683218c8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1455a374, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@54418834, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6acb58fc, org.springframework.security.web.access.ExceptionTranslationFilter@a6fc2e1, org.springframework.security.web.access.intercept.AuthorizationFilter@5d3a147f]] (1/1)
2024-07-10 00:46:00,565 DEBUG [http-nio-8081-exec-1] FilterChainProxy: Securing POST /error
2024-07-10 00:46:00,565 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:46:00,565 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:46:00,565 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:46:00,565 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:46:00,565 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:46:00,565 TRACE [http-nio-8081-exec-1] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:46:00,565 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:46:00,565 TRACE [http-nio-8081-exec-1] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:46:00,565 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:46:00,565 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:46:00,566 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:46:00,566 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:46:00,566 TRACE [http-nio-8081-exec-1] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /error
2024-07-10 00:46:00,566 TRACE [http-nio-8081-exec-1] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /error using org.springframework.security.authorization.AuthenticatedAuthorizationManager@1313b08a
2024-07-10 00:46:00,566 TRACE [http-nio-8081-exec-1] HttpSessionSecurityContextRepository: Did not find SecurityContext in HttpSession 23DAEF965961FD746228F4A194CC204A using the SPRING_SECURITY_CONTEXT session attribute
2024-07-10 00:46:00,566 TRACE [http-nio-8081-exec-1] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-10 00:46:00,566 TRACE [http-nio-8081-exec-1] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-10 00:46:00,566 TRACE [http-nio-8081-exec-1] AnonymousAuthenticationFilter: Set SecurityContextHolder to AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=23DAEF965961FD746228F4A194CC204A], Granted Authorities=[ROLE_ANONYMOUS]]
2024-07-10 00:46:00,566 TRACE [http-nio-8081-exec-1] ExceptionTranslationFilter: Sending AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=23DAEF965961FD746228F4A194CC204A], Granted Authorities=[ROLE_ANONYMOUS]] to authentication entry point since access is denied
org.springframework.security.access.AccessDeniedException: Access Denied
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:98)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:632)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:410)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:330)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:267)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:362)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:222)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2024-07-10 00:46:00,567 DEBUG [http-nio-8081-exec-1] HttpSessionRequestCache: Saved request http://localhost:8081/error?continue to session
2024-07-10 00:46:00,567 DEBUG [http-nio-8081-exec-1] Http403ForbiddenEntryPoint: Pre-authenticated entry point called. Rejecting access
2024-07-10 00:46:10,415 TRACE [http-nio-8081-exec-3] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@6f24ff13, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@11927d0c, org.springframework.security.web.context.SecurityContextHolderFilter@9abbe39, org.springframework.security.web.header.HeaderWriterFilter@3f54fabc, org.springframework.security.web.authentication.logout.LogoutFilter@683218c8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1455a374, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@54418834, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6acb58fc, org.springframework.security.web.access.ExceptionTranslationFilter@a6fc2e1, org.springframework.security.web.access.intercept.AuthorizationFilter@5d3a147f]] (1/1)
2024-07-10 00:46:10,415 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Securing POST /authentication/login/
2024-07-10 00:46:10,415 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:46:10,415 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:46:10,415 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:46:10,415 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:46:10,415 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:46:10,415 TRACE [http-nio-8081-exec-3] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:46:10,415 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:46:10,415 TRACE [http-nio-8081-exec-3] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:46:10,415 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:46:10,415 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:46:10,415 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:46:10,415 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:46:10,415 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /authentication/login/
2024-07-10 00:46:10,416 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /authentication/login/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@7993908a
2024-07-10 00:46:10,416 TRACE [http-nio-8081-exec-3] HttpSessionSecurityContextRepository: Did not find SecurityContext in HttpSession 23DAEF965961FD746228F4A194CC204A using the SPRING_SECURITY_CONTEXT session attribute
2024-07-10 00:46:10,416 TRACE [http-nio-8081-exec-3] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-10 00:46:10,416 TRACE [http-nio-8081-exec-3] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-10 00:46:10,416 TRACE [http-nio-8081-exec-3] AnonymousAuthenticationFilter: Set SecurityContextHolder to AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=23DAEF965961FD746228F4A194CC204A], Granted Authorities=[ROLE_ANONYMOUS]]
2024-07-10 00:46:10,416 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Secured POST /authentication/login/
2024-07-10 00:46:10,471 TRACE [http-nio-8081-exec-3] ProviderManager: Authenticating request with DaoAuthenticationProvider (1/1)
2024-07-10 00:46:10,711 DEBUG [http-nio-8081-exec-3] DaoAuthenticationProvider: Authenticated user
2024-07-10 00:46:10,712 DEBUG [http-nio-8081-exec-3] HttpSessionSecurityContextRepository: Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@60c5af45]
2024-07-10 00:46:10,731 TRACE [http-nio-8081-exec-3] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-10 00:46:31,012 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=14, memberId='consumer-telegram-notification-created-topic-2-6d2423c3-18ee-4afa-a900-1f6a1a7ea543', protocol='range'}
2024-07-10 00:46:31,012 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=14, memberId='consumer-telegram-notification-created-topic-1-26c821ac-9bfb-4978-86ca-67fb2bbf1ccd', protocol='range'}
2024-07-10 00:46:31,012 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=14, memberId='consumer-telegram-notification-created-topic-1-969a26a4-4cb4-4ee9-9026-5d5b303cbe72', protocol='range'}
2024-07-10 00:46:31,013 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Finished assignment for group at generation 14: {consumer-telegram-notification-created-topic-1-969a26a4-4cb4-4ee9-9026-5d5b303cbe72=Assignment(partitions=[telegram-receiver-user-response-topic-0]), consumer-telegram-notification-created-topic-1-26c821ac-9bfb-4978-86ca-67fb2bbf1ccd=Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]), consumer-telegram-notification-created-topic-2-6d2423c3-18ee-4afa-a900-1f6a1a7ea543=Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2])}
2024-07-10 00:46:31,014 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=14, memberId='consumer-telegram-notification-created-topic-2-6d2423c3-18ee-4afa-a900-1f6a1a7ea543', protocol='range'}
2024-07-10 00:46:31,014 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=14, memberId='consumer-telegram-notification-created-topic-1-26c821ac-9bfb-4978-86ca-67fb2bbf1ccd', protocol='range'}
2024-07-10 00:46:31,014 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2])
2024-07-10 00:46:31,014 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2])
2024-07-10 00:46:31,014 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2
2024-07-10 00:46:31,015 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2
2024-07-10 00:46:31,015 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=14, memberId='consumer-telegram-notification-created-topic-1-969a26a4-4cb4-4ee9-9026-5d5b303cbe72', protocol='range'}
2024-07-10 00:46:31,015 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=3}}
2024-07-10 00:46:31,015 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=3}}
2024-07-10 00:46:31,015 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=4}}
2024-07-10 00:46:31,015 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-2 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=4}}
2024-07-10 00:46:31,015 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=3}}
2024-07-10 00:46:31,015 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-1 to the committed offset FetchPosition{offset=7, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=3}}
2024-07-10 00:46:31,015 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]
2024-07-10 00:46:31,015 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]
2024-07-10 00:46:31,016 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-receiver-user-response-topic-0])
2024-07-10 00:46:31,018 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-receiver-user-response-topic-0
2024-07-10 00:46:31,023 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-response-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=0}}
2024-07-10 00:46:31,028 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-receiver-user-response-topic-0]
2024-07-10 00:48:38,117 INFO [kafka-producer-network-thread | telegram-notifications-producer-1] NetworkClient: [Producer clientId=telegram-notifications-producer-1] Node -1 disconnected.
2024-07-10 00:49:41,773 INFO [background-preinit] Version: HV000001: Hibernate Validator 8.0.1.Final
2024-07-10 00:49:41,803 INFO [main] EmergencyApplication: Starting EmergencyApplication using Java 17.0.10 with PID 16540 (D:\programming\java\emergency-ms\emergency\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-10 00:49:41,804 DEBUG [main] EmergencyApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-10 00:49:41,804 INFO [main] EmergencyApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-10 00:49:42,354 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 00:49:42,398 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 38 ms. Found 3 JPA repository interfaces.
2024-07-10 00:49:42,898 INFO [main] TomcatWebServer: Tomcat initialized with port 8081 (http)
2024-07-10 00:49:42,911 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8081"]
2024-07-10 00:49:42,913 INFO [main] StandardService: Starting service [Tomcat]
2024-07-10 00:49:42,913 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 00:49:42,964 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-10 00:49:42,965 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1129 ms
2024-07-10 00:49:43,160 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-10 00:49:43,292 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@48cdb156
2024-07-10 00:49:43,293 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-10 00:49:43,319 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_notifications_db (PostgreSQL 16.3)
2024-07-10 00:49:43,357 INFO [main] DbValidate: Successfully validated 2 migrations (execution time 00:00.024s)
2024-07-10 00:49:43,389 INFO [main] DbMigrate: Current version of schema "public": 1.1
2024-07-10 00:49:43,391 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-10 00:49:43,449 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 00:49:43,490 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 00:49:43,516 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-10 00:49:43,748 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 00:49:44,280 INFO [main] EntityInstantiatorPojoStandard: HHH000182: No default (no-argument) constructor for class: org.example.emergency.entity.EmergencyCall (class must be instantiated by Interceptor)
2024-07-10 00:49:44,474 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 00:49:44,477 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 00:49:44,779 TRACE [main] AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer: Eagerly initializing {securityConfig=org.example.emergency.config.SecurityConfig$$SpringCGLIB$$0@31c29db1}
2024-07-10 00:49:44,793 INFO [main] InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer: Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-07-10 00:49:44,793 WARN [main] InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer: Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-07-10 00:49:44,884 INFO [main] QueryEnhancerFactory: Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-10 00:49:44,967 WARN [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-10 00:49:45,232 DEBUG [main] DefaultSecurityFilterChain: Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-10 00:49:45,521 INFO [main] AdminClientConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-07-10 00:49:45,613 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:49:45,613 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:49:45,613 INFO [main] AppInfoParser: Kafka startTimeMs: 1720561785613
2024-07-10 00:49:45,884 INFO [kafka-admin-client-thread | emergency-admin-0] AppInfoParser: App info kafka.admin.client for emergency-admin-0 unregistered
2024-07-10 00:49:45,887 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics scheduler closed
2024-07-10 00:49:45,888 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-10 00:49:45,888 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics reporters closed
2024-07-10 00:49:45,892 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8081"]
2024-07-10 00:49:45,902 INFO [main] TomcatWebServer: Tomcat started on port 8081 (http) with context path '/'
2024-07-10 00:49:45,921 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092, localhost:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-telegram-notification-created-topic-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = telegram-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-10 00:49:45,948 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-10 00:49:45,996 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:49:45,996 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:49:45,996 INFO [main] AppInfoParser: Kafka startTimeMs: 1720561785996
2024-07-10 00:49:45,998 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Subscribed to topic(s): telegram-receiver-user-response-topic
2024-07-10 00:49:46,012 INFO [main] EmergencyApplication: Started EmergencyApplication in 4.49 seconds (process running for 4.851)
2024-07-10 00:49:46,017 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metadata: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-10 00:49:46,020 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-10 00:49:46,022 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:49:46,031 INFO [main] TelegramNotificationsApplication: Starting TelegramNotificationsApplication using Java 17.0.10 with PID 17040 (D:\programming\java\emergency-ms\telegram-notifications\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-10 00:49:46,034 DEBUG [main] TelegramNotificationsApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-10 00:49:46,035 INFO [main] TelegramNotificationsApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-10 00:49:46,038 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-telegram-notification-created-topic-1-1fab1ffd-89a1-440b-b588-50c25d38b0fb
2024-07-10 00:49:46,039 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:49:46,604 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 00:49:46,664 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 49 ms. Found 1 JPA repository interface.
2024-07-10 00:49:47,130 INFO [main] TomcatWebServer: Tomcat initialized with port 8083 (http)
2024-07-10 00:49:47,136 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8083"]
2024-07-10 00:49:47,138 INFO [main] StandardService: Starting service [Tomcat]
2024-07-10 00:49:47,138 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 00:49:47,199 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-10 00:49:47,200 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1121 ms
2024-07-10 00:49:47,387 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-10 00:49:47,539 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@53ea380b
2024-07-10 00:49:47,541 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-10 00:49:47,570 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_telegram_db (PostgreSQL 16.3)
2024-07-10 00:49:47,607 INFO [main] DbValidate: Successfully validated 1 migration (execution time 00:00.022s)
2024-07-10 00:49:47,643 INFO [main] DbMigrate: Current version of schema "public": 1.0
2024-07-10 00:49:47,645 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-10 00:49:47,709 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 00:49:47,749 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 00:49:47,779 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-10 00:49:48,013 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 00:49:48,578 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 00:49:48,580 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 00:49:48,990 WARN [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-10 00:49:49,301 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8083"]
2024-07-10 00:49:49,316 INFO [main] TomcatWebServer: Tomcat started on port 8083 (http) with context path '/'
2024-07-10 00:49:49,353 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092, localhost:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-telegram-notification-created-topic-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = telegram-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-10 00:49:49,390 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-10 00:49:49,482 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:49:49,482 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:49:49,482 INFO [main] AppInfoParser: Kafka startTimeMs: 1720561789481
2024-07-10 00:49:49,484 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Subscribed to topic(s): telegram-notification-created-topic
2024-07-10 00:49:49,489 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092, localhost:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-telegram-notification-created-topic-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = telegram-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-10 00:49:49,489 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-10 00:49:49,496 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:49:49,496 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:49:49,496 INFO [main] AppInfoParser: Kafka startTimeMs: 1720561789496
2024-07-10 00:49:49,497 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Subscribed to topic(s): telegram-receiver-user-request-topic
2024-07-10 00:49:49,749 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metadata: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-10 00:49:49,749 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] Metadata: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-10 00:49:49,750 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-10 00:49:49,750 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-10 00:49:49,751 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:49:49,751 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:49:49,762 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-telegram-notification-created-topic-1-5504a333-2c0b-4169-87e7-8032431fabe4
2024-07-10 00:49:49,763 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:49:49,763 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-telegram-notification-created-topic-2-c7c1809a-f1e0-4363-8b53-e9b86575d0ad
2024-07-10 00:49:49,763 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:49:49,806 INFO [main] TelegramNotificationsApplication: Started TelegramNotificationsApplication in 4.127 seconds (process running for 4.636)
2024-07-10 00:49:52,964 INFO [http-nio-8081-exec-2] [/]: Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-10 00:49:52,964 INFO [http-nio-8081-exec-2] DispatcherServlet: Initializing Servlet 'dispatcherServlet'
2024-07-10 00:49:52,966 INFO [http-nio-8081-exec-2] DispatcherServlet: Completed initialization in 2 ms
2024-07-10 00:49:52,982 TRACE [http-nio-8081-exec-2] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@2a88bea5, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@18332ce2, org.springframework.security.web.context.SecurityContextHolderFilter@4c364a9d, org.springframework.security.web.header.HeaderWriterFilter@372c428, org.springframework.security.web.authentication.logout.LogoutFilter@383d2e2d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@59ebe484, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1cafb30, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@134c09e8, org.springframework.security.web.access.ExceptionTranslationFilter@74997ca6, org.springframework.security.web.access.intercept.AuthorizationFilter@420c9959]] (1/1)
2024-07-10 00:49:52,983 DEBUG [http-nio-8081-exec-2] FilterChainProxy: Securing POST /authentication/login/
2024-07-10 00:49:52,983 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:49:52,984 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:49:52,985 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:49:52,986 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:49:52,987 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:49:52,987 TRACE [http-nio-8081-exec-2] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:49:52,987 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:49:52,987 TRACE [http-nio-8081-exec-2] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:49:52,988 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:49:52,988 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:49:52,989 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:49:52,989 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:49:52,989 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /authentication/login/
2024-07-10 00:49:52,990 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /authentication/login/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@184f9c25
2024-07-10 00:49:52,990 TRACE [http-nio-8081-exec-2] HttpSessionSecurityContextRepository: No HttpSession currently exists
2024-07-10 00:49:52,990 TRACE [http-nio-8081-exec-2] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-10 00:49:52,990 TRACE [http-nio-8081-exec-2] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-10 00:49:52,990 TRACE [http-nio-8081-exec-2] AnonymousAuthenticationFilter: Set SecurityContextHolder to AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]]
2024-07-10 00:49:52,991 DEBUG [http-nio-8081-exec-2] FilterChainProxy: Secured POST /authentication/login/
2024-07-10 00:49:53,054 TRACE [http-nio-8081-exec-2] ProviderManager: Authenticating request with DaoAuthenticationProvider (1/1)
2024-07-10 00:49:53,292 DEBUG [http-nio-8081-exec-2] DaoAuthenticationProvider: Authenticated user
2024-07-10 00:49:53,312 DEBUG [http-nio-8081-exec-2] HttpSessionSecurityContextRepository: Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@3d2f8b69]
2024-07-10 00:49:53,331 TRACE [http-nio-8081-exec-2] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-10 00:49:59,191 TRACE [http-nio-8081-exec-3] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@2a88bea5, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@18332ce2, org.springframework.security.web.context.SecurityContextHolderFilter@4c364a9d, org.springframework.security.web.header.HeaderWriterFilter@372c428, org.springframework.security.web.authentication.logout.LogoutFilter@383d2e2d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@59ebe484, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1cafb30, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@134c09e8, org.springframework.security.web.access.ExceptionTranslationFilter@74997ca6, org.springframework.security.web.access.intercept.AuthorizationFilter@420c9959]] (1/1)
2024-07-10 00:49:59,191 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Securing POST /receivers/create/
2024-07-10 00:49:59,191 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:49:59,191 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:49:59,191 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:49:59,192 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:49:59,192 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:49:59,192 TRACE [http-nio-8081-exec-3] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:49:59,192 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:49:59,192 TRACE [http-nio-8081-exec-3] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:49:59,192 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:49:59,192 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:49:59,192 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:49:59,192 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:49:59,192 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /receivers/create/
2024-07-10 00:49:59,192 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /receivers/create/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@66d1c33b
2024-07-10 00:49:59,192 TRACE [http-nio-8081-exec-3] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-10 00:49:59,193 TRACE [http-nio-8081-exec-3] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-10 00:49:59,193 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Secured POST /receivers/create/
2024-07-10 00:49:59,223 INFO [http-nio-8081-exec-3] ProducerConfig: ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092, localhost:9094]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 10000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 5000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2024-07-10 00:49:59,223 INFO [http-nio-8081-exec-3] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-10 00:49:59,229 INFO [http-nio-8081-exec-3] KafkaProducer: [Producer clientId=emergency-producer-1] Instantiated an idempotent producer.
2024-07-10 00:49:59,238 INFO [http-nio-8081-exec-3] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:49:59,238 INFO [http-nio-8081-exec-3] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:49:59,238 INFO [http-nio-8081-exec-3] AppInfoParser: Kafka startTimeMs: 1720561799238
2024-07-10 00:49:59,244 INFO [kafka-producer-network-thread | emergency-producer-1] Metadata: [Producer clientId=emergency-producer-1] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-10 00:49:59,244 INFO [kafka-producer-network-thread | emergency-producer-1] TransactionManager: [Producer clientId=emergency-producer-1] ProducerId set to 4001 with epoch 0
2024-07-10 00:49:59,282 TRACE [http-nio-8081-exec-3] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-10 00:50:10,481 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=15, memberId='consumer-telegram-notification-created-topic-2-c7c1809a-f1e0-4363-8b53-e9b86575d0ad', protocol='range'}
2024-07-10 00:50:10,481 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=15, memberId='consumer-telegram-notification-created-topic-1-1fab1ffd-89a1-440b-b588-50c25d38b0fb', protocol='range'}
2024-07-10 00:50:10,481 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=15, memberId='consumer-telegram-notification-created-topic-1-5504a333-2c0b-4169-87e7-8032431fabe4', protocol='range'}
2024-07-10 00:50:10,486 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Finished assignment for group at generation 15: {consumer-telegram-notification-created-topic-1-1fab1ffd-89a1-440b-b588-50c25d38b0fb=Assignment(partitions=[telegram-receiver-user-response-topic-0]), consumer-telegram-notification-created-topic-2-c7c1809a-f1e0-4363-8b53-e9b86575d0ad=Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]), consumer-telegram-notification-created-topic-1-5504a333-2c0b-4169-87e7-8032431fabe4=Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2])}
2024-07-10 00:50:10,489 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=15, memberId='consumer-telegram-notification-created-topic-1-1fab1ffd-89a1-440b-b588-50c25d38b0fb', protocol='range'}
2024-07-10 00:50:10,489 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=15, memberId='consumer-telegram-notification-created-topic-2-c7c1809a-f1e0-4363-8b53-e9b86575d0ad', protocol='range'}
2024-07-10 00:50:10,489 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=15, memberId='consumer-telegram-notification-created-topic-1-5504a333-2c0b-4169-87e7-8032431fabe4', protocol='range'}
2024-07-10 00:50:10,490 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-receiver-user-response-topic-0])
2024-07-10 00:50:10,491 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-receiver-user-response-topic-0
2024-07-10 00:50:10,491 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2])
2024-07-10 00:50:10,491 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2])
2024-07-10 00:50:10,492 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2
2024-07-10 00:50:10,492 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2
2024-07-10 00:50:10,496 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-response-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=0}}
2024-07-10 00:50:10,497 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-receiver-user-response-topic-0]
2024-07-10 00:50:10,499 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=3}}
2024-07-10 00:50:10,499 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=3}}
2024-07-10 00:50:10,499 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=4}}
2024-07-10 00:50:10,500 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-2 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=4}}
2024-07-10 00:50:10,500 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=3}}
2024-07-10 00:50:10,500 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-1 to the committed offset FetchPosition{offset=7, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=3}}
2024-07-10 00:50:10,501 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]
2024-07-10 00:50:10,501 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]
2024-07-10 00:50:10,540 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 52
2024-07-10 00:50:10,637 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 2 for partition telegram-receiver-user-request-topic-0
2024-07-10 00:50:10,638 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-10 00:50:11,047 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 52
2024-07-10 00:50:11,062 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 2 for partition telegram-receiver-user-request-topic-0
2024-07-10 00:50:11,062 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-10 00:50:11,551 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 52
2024-07-10 00:50:11,566 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 2 for partition telegram-receiver-user-request-topic-0
2024-07-10 00:50:11,566 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-10 00:50:12,066 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 52
2024-07-10 00:50:12,080 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 2 for partition telegram-receiver-user-request-topic-0
2024-07-10 00:50:12,080 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-10 00:50:12,579 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 52
2024-07-10 00:50:12,594 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 2 for partition telegram-receiver-user-request-topic-0
2024-07-10 00:50:12,594 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-10 00:50:13,093 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 52
2024-07-10 00:50:13,108 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 2 for partition telegram-receiver-user-request-topic-0
2024-07-10 00:50:13,108 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-10 00:50:13,606 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 52
2024-07-10 00:50:13,621 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 2 for partition telegram-receiver-user-request-topic-0
2024-07-10 00:50:13,621 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-10 00:50:14,123 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 52
2024-07-10 00:50:14,137 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 2 for partition telegram-receiver-user-request-topic-0
2024-07-10 00:50:14,137 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-10 00:50:14,636 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 52
2024-07-10 00:50:14,650 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 2 for partition telegram-receiver-user-request-topic-0
2024-07-10 00:50:14,650 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-10 00:50:15,151 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 52
2024-07-10 00:50:15,156 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DefaultErrorHandler: Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for telegram-receiver-user-request-topic-0@2
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-10 00:51:06,118 INFO [background-preinit] Version: HV000001: Hibernate Validator 8.0.1.Final
2024-07-10 00:51:06,150 INFO [main] EmergencyApplication: Starting EmergencyApplication using Java 17.0.10 with PID 17928 (D:\programming\java\emergency-ms\emergency\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-10 00:51:06,151 DEBUG [main] EmergencyApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-10 00:51:06,151 INFO [main] EmergencyApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-10 00:51:06,718 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 00:51:06,769 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 42 ms. Found 3 JPA repository interfaces.
2024-07-10 00:51:07,255 INFO [main] TomcatWebServer: Tomcat initialized with port 8081 (http)
2024-07-10 00:51:07,264 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8081"]
2024-07-10 00:51:07,265 INFO [main] StandardService: Starting service [Tomcat]
2024-07-10 00:51:07,266 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 00:51:07,316 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-10 00:51:07,317 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1130 ms
2024-07-10 00:51:07,511 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-10 00:51:07,633 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@105db94d
2024-07-10 00:51:07,634 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-10 00:51:07,659 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_notifications_db (PostgreSQL 16.3)
2024-07-10 00:51:07,692 INFO [main] DbValidate: Successfully validated 2 migrations (execution time 00:00.019s)
2024-07-10 00:51:07,728 INFO [main] DbMigrate: Current version of schema "public": 1.1
2024-07-10 00:51:07,731 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-10 00:51:07,785 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 00:51:07,825 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 00:51:07,857 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-10 00:51:08,072 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 00:51:08,572 INFO [main] EntityInstantiatorPojoStandard: HHH000182: No default (no-argument) constructor for class: org.example.emergency.entity.EmergencyCall (class must be instantiated by Interceptor)
2024-07-10 00:51:08,758 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 00:51:08,760 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 00:51:08,993 TRACE [main] AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer: Eagerly initializing {securityConfig=org.example.emergency.config.SecurityConfig$$SpringCGLIB$$0@52a3eba3}
2024-07-10 00:51:09,004 INFO [main] InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer: Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-07-10 00:51:09,004 WARN [main] InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer: Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-07-10 00:51:09,077 INFO [main] QueryEnhancerFactory: Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-10 00:51:09,126 WARN [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-10 00:51:09,328 DEBUG [main] DefaultSecurityFilterChain: Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-10 00:51:09,533 INFO [main] AdminClientConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-07-10 00:51:09,619 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:51:09,619 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:51:09,619 INFO [main] AppInfoParser: Kafka startTimeMs: 1720561869618
2024-07-10 00:51:09,829 INFO [kafka-admin-client-thread | emergency-admin-0] AppInfoParser: App info kafka.admin.client for emergency-admin-0 unregistered
2024-07-10 00:51:09,832 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics scheduler closed
2024-07-10 00:51:09,832 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-10 00:51:09,832 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics reporters closed
2024-07-10 00:51:09,835 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8081"]
2024-07-10 00:51:09,842 INFO [main] TomcatWebServer: Tomcat started on port 8081 (http) with context path '/'
2024-07-10 00:51:09,857 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092, localhost:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-telegram-notification-created-topic-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = telegram-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-10 00:51:09,883 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-10 00:51:09,929 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:51:09,929 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:51:09,929 INFO [main] AppInfoParser: Kafka startTimeMs: 1720561869929
2024-07-10 00:51:09,932 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Subscribed to topic(s): telegram-receiver-user-response-topic
2024-07-10 00:51:09,943 INFO [main] EmergencyApplication: Started EmergencyApplication in 4.066 seconds (process running for 4.445)
2024-07-10 00:51:09,949 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metadata: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-10 00:51:09,951 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-10 00:51:09,952 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:51:09,961 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-telegram-notification-created-topic-1-479264b2-beac-4e88-882c-39a5debd167c
2024-07-10 00:51:09,961 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:51:10,651 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Request joining group due to: group is already rebalancing
2024-07-10 00:51:10,651 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: group is already rebalancing
2024-07-10 00:51:10,652 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Revoke previously assigned partitions telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2
2024-07-10 00:51:10,652 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Revoke previously assigned partitions telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2
2024-07-10 00:51:10,652 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions revoked: [telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]
2024-07-10 00:51:10,652 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions revoked: [telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]
2024-07-10 00:51:10,653 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:51:10,653 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:51:16,616 INFO [http-nio-8081-exec-2] [/]: Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-10 00:51:16,617 INFO [http-nio-8081-exec-2] DispatcherServlet: Initializing Servlet 'dispatcherServlet'
2024-07-10 00:51:16,617 INFO [http-nio-8081-exec-2] DispatcherServlet: Completed initialization in 0 ms
2024-07-10 00:51:16,633 TRACE [http-nio-8081-exec-2] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@74317471, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3b92f422, org.springframework.security.web.context.SecurityContextHolderFilter@5fdebe73, org.springframework.security.web.header.HeaderWriterFilter@29b61bb, org.springframework.security.web.authentication.logout.LogoutFilter@5122387, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@23c0fcf0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4a234e1f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@74b5c51a, org.springframework.security.web.access.ExceptionTranslationFilter@3bdf6d63, org.springframework.security.web.access.intercept.AuthorizationFilter@48e859f7]] (1/1)
2024-07-10 00:51:16,634 DEBUG [http-nio-8081-exec-2] FilterChainProxy: Securing POST /receivers/create/
2024-07-10 00:51:16,635 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:51:16,635 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:51:16,636 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:51:16,636 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:51:16,637 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:51:16,637 TRACE [http-nio-8081-exec-2] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:51:16,638 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:51:16,638 TRACE [http-nio-8081-exec-2] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:51:16,638 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:51:16,639 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:51:16,639 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:51:16,639 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:51:16,640 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /receivers/create/
2024-07-10 00:51:16,640 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /receivers/create/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@1fe52e42
2024-07-10 00:51:16,641 TRACE [http-nio-8081-exec-2] HttpSessionSecurityContextRepository: No HttpSession currently exists
2024-07-10 00:51:16,641 TRACE [http-nio-8081-exec-2] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-10 00:51:16,641 TRACE [http-nio-8081-exec-2] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-10 00:51:16,641 TRACE [http-nio-8081-exec-2] AnonymousAuthenticationFilter: Set SecurityContextHolder to AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]]
2024-07-10 00:51:16,642 TRACE [http-nio-8081-exec-2] ExceptionTranslationFilter: Sending AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]] to authentication entry point since access is denied
org.springframework.security.access.AccessDeniedException: Access Denied
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:98)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2024-07-10 00:51:16,668 DEBUG [http-nio-8081-exec-2] HttpSessionRequestCache: Saved request http://localhost:8081/receivers/create/?continue to session
2024-07-10 00:51:16,668 DEBUG [http-nio-8081-exec-2] Http403ForbiddenEntryPoint: Pre-authenticated entry point called. Rejecting access
2024-07-10 00:51:16,668 TRACE [http-nio-8081-exec-2] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-10 00:51:16,673 TRACE [http-nio-8081-exec-2] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@74317471, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3b92f422, org.springframework.security.web.context.SecurityContextHolderFilter@5fdebe73, org.springframework.security.web.header.HeaderWriterFilter@29b61bb, org.springframework.security.web.authentication.logout.LogoutFilter@5122387, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@23c0fcf0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4a234e1f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@74b5c51a, org.springframework.security.web.access.ExceptionTranslationFilter@3bdf6d63, org.springframework.security.web.access.intercept.AuthorizationFilter@48e859f7]] (1/1)
2024-07-10 00:51:16,673 DEBUG [http-nio-8081-exec-2] FilterChainProxy: Securing POST /error
2024-07-10 00:51:16,673 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:51:16,673 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:51:16,673 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:51:16,673 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:51:16,674 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:51:16,674 TRACE [http-nio-8081-exec-2] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:51:16,674 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:51:16,674 TRACE [http-nio-8081-exec-2] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:51:16,674 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:51:16,674 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:51:16,674 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:51:16,674 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:51:16,674 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /error
2024-07-10 00:51:16,674 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /error using org.springframework.security.authorization.AuthenticatedAuthorizationManager@1fe52e42
2024-07-10 00:51:16,674 TRACE [http-nio-8081-exec-2] HttpSessionSecurityContextRepository: Did not find SecurityContext in HttpSession AB82057D8011F3506125F6FBDFB4F5C7 using the SPRING_SECURITY_CONTEXT session attribute
2024-07-10 00:51:16,674 TRACE [http-nio-8081-exec-2] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-10 00:51:16,674 TRACE [http-nio-8081-exec-2] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-10 00:51:16,674 TRACE [http-nio-8081-exec-2] AnonymousAuthenticationFilter: Set SecurityContextHolder to AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=AB82057D8011F3506125F6FBDFB4F5C7], Granted Authorities=[ROLE_ANONYMOUS]]
2024-07-10 00:51:16,675 TRACE [http-nio-8081-exec-2] ExceptionTranslationFilter: Sending AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=AB82057D8011F3506125F6FBDFB4F5C7], Granted Authorities=[ROLE_ANONYMOUS]] to authentication entry point since access is denied
org.springframework.security.access.AccessDeniedException: Access Denied
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:98)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:632)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:410)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:330)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:267)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:362)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:222)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:151)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2024-07-10 00:51:16,675 DEBUG [http-nio-8081-exec-2] HttpSessionRequestCache: Saved request http://localhost:8081/error?continue to session
2024-07-10 00:51:16,675 DEBUG [http-nio-8081-exec-2] Http403ForbiddenEntryPoint: Pre-authenticated entry point called. Rejecting access
2024-07-10 00:51:21,906 TRACE [http-nio-8081-exec-3] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@74317471, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3b92f422, org.springframework.security.web.context.SecurityContextHolderFilter@5fdebe73, org.springframework.security.web.header.HeaderWriterFilter@29b61bb, org.springframework.security.web.authentication.logout.LogoutFilter@5122387, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@23c0fcf0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4a234e1f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@74b5c51a, org.springframework.security.web.access.ExceptionTranslationFilter@3bdf6d63, org.springframework.security.web.access.intercept.AuthorizationFilter@48e859f7]] (1/1)
2024-07-10 00:51:21,906 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Securing POST /authentication/login/
2024-07-10 00:51:21,906 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:51:21,906 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:51:21,906 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:51:21,906 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:51:21,906 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:51:21,906 TRACE [http-nio-8081-exec-3] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:51:21,907 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:51:21,907 TRACE [http-nio-8081-exec-3] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:51:21,907 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:51:21,907 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:51:21,907 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:51:21,907 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:51:21,907 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /authentication/login/
2024-07-10 00:51:21,907 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /authentication/login/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@768896de
2024-07-10 00:51:21,907 TRACE [http-nio-8081-exec-3] HttpSessionSecurityContextRepository: Did not find SecurityContext in HttpSession AB82057D8011F3506125F6FBDFB4F5C7 using the SPRING_SECURITY_CONTEXT session attribute
2024-07-10 00:51:21,907 TRACE [http-nio-8081-exec-3] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-10 00:51:21,907 TRACE [http-nio-8081-exec-3] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-10 00:51:21,907 TRACE [http-nio-8081-exec-3] AnonymousAuthenticationFilter: Set SecurityContextHolder to AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=AB82057D8011F3506125F6FBDFB4F5C7], Granted Authorities=[ROLE_ANONYMOUS]]
2024-07-10 00:51:21,908 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Secured POST /authentication/login/
2024-07-10 00:51:21,963 TRACE [http-nio-8081-exec-3] ProviderManager: Authenticating request with DaoAuthenticationProvider (1/1)
2024-07-10 00:51:22,187 DEBUG [http-nio-8081-exec-3] DaoAuthenticationProvider: Authenticated user
2024-07-10 00:51:22,188 DEBUG [http-nio-8081-exec-3] HttpSessionSecurityContextRepository: Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@307dd558]
2024-07-10 00:51:22,206 TRACE [http-nio-8081-exec-3] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-10 00:51:24,103 TRACE [http-nio-8081-exec-4] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@74317471, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3b92f422, org.springframework.security.web.context.SecurityContextHolderFilter@5fdebe73, org.springframework.security.web.header.HeaderWriterFilter@29b61bb, org.springframework.security.web.authentication.logout.LogoutFilter@5122387, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@23c0fcf0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4a234e1f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@74b5c51a, org.springframework.security.web.access.ExceptionTranslationFilter@3bdf6d63, org.springframework.security.web.access.intercept.AuthorizationFilter@48e859f7]] (1/1)
2024-07-10 00:51:24,103 DEBUG [http-nio-8081-exec-4] FilterChainProxy: Securing POST /receivers/create/
2024-07-10 00:51:24,103 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:51:24,103 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:51:24,103 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:51:24,103 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:51:24,103 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:51:24,103 TRACE [http-nio-8081-exec-4] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:51:24,104 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:51:24,104 TRACE [http-nio-8081-exec-4] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:51:24,104 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:51:24,104 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:51:24,104 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:51:24,104 TRACE [http-nio-8081-exec-4] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:51:24,104 TRACE [http-nio-8081-exec-4] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /receivers/create/
2024-07-10 00:51:24,104 TRACE [http-nio-8081-exec-4] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /receivers/create/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@1fe52e42
2024-07-10 00:51:24,104 TRACE [http-nio-8081-exec-4] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-10 00:51:24,104 TRACE [http-nio-8081-exec-4] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-10 00:51:24,104 DEBUG [http-nio-8081-exec-4] FilterChainProxy: Secured POST /receivers/create/
2024-07-10 00:51:24,131 INFO [http-nio-8081-exec-4] ProducerConfig: ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092, localhost:9094]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 10000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 5000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2024-07-10 00:51:24,131 INFO [http-nio-8081-exec-4] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-10 00:51:24,136 INFO [http-nio-8081-exec-4] KafkaProducer: [Producer clientId=emergency-producer-1] Instantiated an idempotent producer.
2024-07-10 00:51:24,145 INFO [http-nio-8081-exec-4] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:51:24,146 INFO [http-nio-8081-exec-4] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:51:24,146 INFO [http-nio-8081-exec-4] AppInfoParser: Kafka startTimeMs: 1720561884145
2024-07-10 00:51:24,151 INFO [kafka-producer-network-thread | emergency-producer-1] TransactionManager: [Producer clientId=emergency-producer-1] ProducerId set to 3004 with epoch 0
2024-07-10 00:51:24,152 INFO [kafka-producer-network-thread | emergency-producer-1] Metadata: [Producer clientId=emergency-producer-1] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-10 00:51:24,182 INFO [http-nio-8081-exec-4] ReceiverServiceImpl: result is: SendResult [producerRecord=ProducerRecord(topic=telegram-receiver-user-request-topic, partition=null, headers=RecordHeaders(headers = [RecordHeader(key = __TypeId__, value = [111, 114, 103, 46, 101, 120, 97, 109, 112, 108, 101, 46, 101, 109, 101, 114, 103, 101, 110, 99, 121, 46, 101, 118, 101, 110, 116, 115, 46, 84, 101, 108, 101, 103, 114, 97, 109, 82, 101, 99, 101, 105, 118, 101, 114, 85, 115, 101, 114, 82, 101, 113, 117, 101, 115, 116, 69, 118, 101, 110, 116])], isReadOnly = true), key=null, value=org.example.emergency.events.TelegramReceiverUserRequestEvent@6683bf42, timestamp=null), recordMetadata=telegram-receiver-user-request-topic-2@6]
2024-07-10 00:51:24,194 TRACE [http-nio-8081-exec-4] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-10 00:51:46,646 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=16, memberId='consumer-telegram-notification-created-topic-2-c7c1809a-f1e0-4363-8b53-e9b86575d0ad', protocol='range'}
2024-07-10 00:51:46,646 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=16, memberId='consumer-telegram-notification-created-topic-1-5504a333-2c0b-4169-87e7-8032431fabe4', protocol='range'}
2024-07-10 00:51:46,646 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=16, memberId='consumer-telegram-notification-created-topic-1-479264b2-beac-4e88-882c-39a5debd167c', protocol='range'}
2024-07-10 00:51:46,651 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Finished assignment for group at generation 16: {consumer-telegram-notification-created-topic-2-c7c1809a-f1e0-4363-8b53-e9b86575d0ad=Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]), consumer-telegram-notification-created-topic-1-479264b2-beac-4e88-882c-39a5debd167c=Assignment(partitions=[telegram-receiver-user-response-topic-0]), consumer-telegram-notification-created-topic-1-5504a333-2c0b-4169-87e7-8032431fabe4=Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2])}
2024-07-10 00:51:46,652 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=16, memberId='consumer-telegram-notification-created-topic-2-c7c1809a-f1e0-4363-8b53-e9b86575d0ad', protocol='range'}
2024-07-10 00:51:46,652 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=16, memberId='consumer-telegram-notification-created-topic-1-5504a333-2c0b-4169-87e7-8032431fabe4', protocol='range'}
2024-07-10 00:51:46,653 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2])
2024-07-10 00:51:46,653 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2])
2024-07-10 00:51:46,653 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=16, memberId='consumer-telegram-notification-created-topic-1-479264b2-beac-4e88-882c-39a5debd167c', protocol='range'}
2024-07-10 00:51:46,653 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2
2024-07-10 00:51:46,653 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2
2024-07-10 00:51:46,654 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-1 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=3}}
2024-07-10 00:51:46,654 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-0 to the committed offset FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=3}}
2024-07-10 00:51:46,654 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=4}}
2024-07-10 00:51:46,654 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-2 to the committed offset FetchPosition{offset=6, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=4}}
2024-07-10 00:51:46,654 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=3}}
2024-07-10 00:51:46,654 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-1 to the committed offset FetchPosition{offset=7, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=3}}
2024-07-10 00:51:46,654 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]
2024-07-10 00:51:46,654 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]
2024-07-10 00:51:46,654 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-receiver-user-response-topic-0])
2024-07-10 00:51:46,656 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-receiver-user-response-topic-0
2024-07-10 00:51:46,657 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 57
2024-07-10 00:51:46,661 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-response-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=0}}
2024-07-10 00:51:46,662 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-receiver-user-response-topic-0]
2024-07-10 00:51:46,676 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 6 for partition telegram-receiver-user-request-topic-2
2024-07-10 00:51:46,676 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-10 00:51:47,161 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 57
2024-07-10 00:51:47,175 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 6 for partition telegram-receiver-user-request-topic-2
2024-07-10 00:51:47,175 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-10 00:51:47,676 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 57
2024-07-10 00:51:47,690 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 6 for partition telegram-receiver-user-request-topic-2
2024-07-10 00:51:47,690 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-10 00:51:48,192 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 57
2024-07-10 00:51:48,206 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 6 for partition telegram-receiver-user-request-topic-2
2024-07-10 00:51:48,206 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-10 00:51:48,706 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 57
2024-07-10 00:51:48,721 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 6 for partition telegram-receiver-user-request-topic-2
2024-07-10 00:51:48,721 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-10 00:51:49,220 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 57
2024-07-10 00:51:49,235 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 6 for partition telegram-receiver-user-request-topic-2
2024-07-10 00:51:49,235 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 25 common frames omitted
2024-07-10 00:51:49,735 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 57
2024-07-10 00:51:49,750 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 6 for partition telegram-receiver-user-request-topic-2
2024-07-10 00:51:49,750 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at jdk.internal.reflect.GeneratedMethodAccessor17.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 24 common frames omitted
2024-07-10 00:51:50,251 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 57
2024-07-10 00:51:50,265 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 6 for partition telegram-receiver-user-request-topic-2
2024-07-10 00:51:50,265 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at jdk.internal.reflect.GeneratedMethodAccessor17.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 24 common frames omitted
2024-07-10 00:51:50,763 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 57
2024-07-10 00:51:50,778 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Seeking to offset 6 for partition telegram-receiver-user-request-topic-2
2024-07-10 00:51:50,778 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at jdk.internal.reflect.GeneratedMethodAccessor17.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 24 common frames omitted
2024-07-10 00:51:51,265 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] TelegramReceiverUserRequestEventHandler: Received event from receiver with id 57
2024-07-10 00:51:51,267 ERROR [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] DefaultErrorHandler: Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for telegram-receiver-user-request-topic-2@6
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(org.example.telegram_notifications.events.TelegramReceiverUserRequestEvent)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:842)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: org.example.telegram_notifications.exception.NonRetryableException: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:35)
	at jdk.internal.reflect.GeneratedMethodAccessor15.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: java.lang.IllegalArgumentException: The telegram user with username @scythejudge does not exist.
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.lambda$findByUsername$0(TelegramUserServiceImpl.java:28)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl.findByUsername(TelegramUserServiceImpl.java:27)
	at jdk.internal.reflect.GeneratedMethodAccessor17.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.telegram_notifications.service.impls.TelegramUserServiceImpl$$SpringCGLIB$$0.findByUsername(<generated>)
	at org.example.telegram_notifications.handler.TelegramReceiverUserRequestEventHandler.handle(TelegramReceiverUserRequestEventHandler.java:29)
	... 24 common frames omitted
2024-07-10 00:53:43,764 TRACE [http-nio-8081-exec-7] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@74317471, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3b92f422, org.springframework.security.web.context.SecurityContextHolderFilter@5fdebe73, org.springframework.security.web.header.HeaderWriterFilter@29b61bb, org.springframework.security.web.authentication.logout.LogoutFilter@5122387, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@23c0fcf0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4a234e1f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@74b5c51a, org.springframework.security.web.access.ExceptionTranslationFilter@3bdf6d63, org.springframework.security.web.access.intercept.AuthorizationFilter@48e859f7]] (1/1)
2024-07-10 00:53:43,764 DEBUG [http-nio-8081-exec-7] FilterChainProxy: Securing POST /emergency-calls/call/
2024-07-10 00:53:43,764 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:53:43,765 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:53:43,765 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:53:43,765 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:53:43,765 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:53:43,765 TRACE [http-nio-8081-exec-7] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:53:43,765 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:53:43,765 TRACE [http-nio-8081-exec-7] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:53:43,765 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:53:43,765 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:53:43,765 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:53:43,765 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:53:43,765 TRACE [http-nio-8081-exec-7] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /emergency-calls/call/
2024-07-10 00:53:43,765 TRACE [http-nio-8081-exec-7] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /emergency-calls/call/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@1fe52e42
2024-07-10 00:53:43,765 TRACE [http-nio-8081-exec-7] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-10 00:53:43,765 TRACE [http-nio-8081-exec-7] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-10 00:53:43,765 DEBUG [http-nio-8081-exec-7] FilterChainProxy: Secured POST /emergency-calls/call/
2024-07-10 00:53:43,774 INFO [http-nio-8081-exec-7] ProducerConfig: ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092, localhost:9094]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 10000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 5000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2024-07-10 00:53:43,774 INFO [http-nio-8081-exec-7] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-10 00:53:43,775 INFO [http-nio-8081-exec-7] KafkaProducer: [Producer clientId=emergency-producer-1] Instantiated an idempotent producer.
2024-07-10 00:53:43,779 INFO [http-nio-8081-exec-7] AppInfoParser: The mbean of App info: [kafka.producer], id: [emergency-producer-1] already exists, so skipping a new mbean creation.
2024-07-10 00:53:43,783 INFO [kafka-producer-network-thread | emergency-producer-1] Metadata: [Producer clientId=emergency-producer-1] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-10 00:53:43,784 INFO [kafka-producer-network-thread | emergency-producer-1] TransactionManager: [Producer clientId=emergency-producer-1] ProducerId set to 3005 with epoch 0
2024-07-10 00:53:43,792 INFO [http-nio-8081-exec-7] ProducerConfig: ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092, localhost:9094]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 10000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 5000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2024-07-10 00:53:43,792 INFO [http-nio-8081-exec-7] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-10 00:53:43,792 INFO [http-nio-8081-exec-7] KafkaProducer: [Producer clientId=emergency-producer-1] Instantiated an idempotent producer.
2024-07-10 00:53:43,794 INFO [kafka-producer-network-thread | emergency-producer-1] EmergencyCallServiceImpl: Message send successfully: telegram-notification-created-topic-1@0
2024-07-10 00:53:43,794 INFO [http-nio-8081-exec-7] AppInfoParser: The mbean of App info: [kafka.producer], id: [emergency-producer-1] already exists, so skipping a new mbean creation.
2024-07-10 00:53:43,795 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] TelegramNotificationCreatedEventHandler: Received event from abcde
2024-07-10 00:53:43,798 INFO [kafka-producer-network-thread | emergency-producer-1] TransactionManager: [Producer clientId=emergency-producer-1] ProducerId set to 3006 with epoch 0
2024-07-10 00:53:43,798 INFO [kafka-producer-network-thread | emergency-producer-1] Metadata: [Producer clientId=emergency-producer-1] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-10 00:53:43,808 INFO [kafka-producer-network-thread | emergency-producer-1] EmergencyCallServiceImpl: Message send successfully: email-notification-created-topic-0@2
2024-07-10 00:53:43,813 TRACE [http-nio-8081-exec-7] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-10 00:56:38,224 INFO [background-preinit] Version: HV000001: Hibernate Validator 8.0.1.Final
2024-07-10 00:56:38,253 INFO [main] EmergencyApplication: Starting EmergencyApplication using Java 17.0.10 with PID 16532 (D:\programming\java\emergency-ms\emergency\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-10 00:56:38,253 DEBUG [main] EmergencyApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-10 00:56:38,254 INFO [main] EmergencyApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-10 00:56:38,793 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 00:56:38,845 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 44 ms. Found 3 JPA repository interfaces.
2024-07-10 00:56:39,341 INFO [main] TomcatWebServer: Tomcat initialized with port 8081 (http)
2024-07-10 00:56:39,350 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8081"]
2024-07-10 00:56:39,351 INFO [main] StandardService: Starting service [Tomcat]
2024-07-10 00:56:39,352 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 00:56:39,401 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-10 00:56:39,404 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1116 ms
2024-07-10 00:56:39,604 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-10 00:56:39,724 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@48cdb156
2024-07-10 00:56:39,725 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-10 00:56:39,749 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_notifications_db (PostgreSQL 16.3)
2024-07-10 00:56:39,784 INFO [main] DbValidate: Successfully validated 2 migrations (execution time 00:00.021s)
2024-07-10 00:56:39,819 INFO [main] DbMigrate: Current version of schema "public": 1.1
2024-07-10 00:56:39,821 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-10 00:56:39,875 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 00:56:39,916 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 00:56:39,944 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-10 00:56:40,167 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 00:56:40,700 INFO [main] EntityInstantiatorPojoStandard: HHH000182: No default (no-argument) constructor for class: org.example.emergency.entity.EmergencyCall (class must be instantiated by Interceptor)
2024-07-10 00:56:40,893 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 00:56:40,895 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 00:56:41,134 TRACE [main] AuthenticationConfiguration$EnableGlobalAuthenticationAutowiredConfigurer: Eagerly initializing {securityConfig=org.example.emergency.config.SecurityConfig$$SpringCGLIB$$0@31c29db1}
2024-07-10 00:56:41,143 INFO [main] InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer: Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2024-07-10 00:56:41,144 WARN [main] InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer: Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used for username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider.
2024-07-10 00:56:41,213 INFO [main] QueryEnhancerFactory: Hibernate is in classpath; If applicable, HQL parser will be used.
2024-07-10 00:56:41,257 WARN [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-10 00:56:41,446 DEBUG [main] DefaultSecurityFilterChain: Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, LogoutFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, ExceptionTranslationFilter, AuthorizationFilter
2024-07-10 00:56:41,658 INFO [main] AdminClientConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.controllers = []
	bootstrap.servers = [localhost:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-admin-0
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	enable.metrics.push = true
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS

2024-07-10 00:56:41,736 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:56:41,736 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:56:41,736 INFO [main] AppInfoParser: Kafka startTimeMs: 1720562201735
2024-07-10 00:56:41,989 INFO [kafka-admin-client-thread | emergency-admin-0] AppInfoParser: App info kafka.admin.client for emergency-admin-0 unregistered
2024-07-10 00:56:41,992 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics scheduler closed
2024-07-10 00:56:41,992 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-10 00:56:41,992 INFO [kafka-admin-client-thread | emergency-admin-0] Metrics: Metrics reporters closed
2024-07-10 00:56:41,996 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8081"]
2024-07-10 00:56:42,004 INFO [main] TomcatWebServer: Tomcat started on port 8081 (http) with context path '/'
2024-07-10 00:56:42,021 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092, localhost:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-telegram-notification-created-topic-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = telegram-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-10 00:56:42,046 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-10 00:56:42,086 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:56:42,086 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:56:42,086 INFO [main] AppInfoParser: Kafka startTimeMs: 1720562202086
2024-07-10 00:56:42,088 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Subscribed to topic(s): telegram-receiver-user-response-topic
2024-07-10 00:56:42,099 INFO [main] EmergencyApplication: Started EmergencyApplication in 4.115 seconds (process running for 4.471)
2024-07-10 00:56:42,104 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metadata: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-10 00:56:42,104 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-10 00:56:42,106 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:56:42,115 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-telegram-notification-created-topic-1-4f4c1985-388c-4c5f-9689-281560b365c8
2024-07-10 00:56:42,115 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:56:44,528 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: group is already rebalancing
2024-07-10 00:56:44,528 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Revoke previously assigned partitions telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2
2024-07-10 00:56:44,529 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions revoked: [telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]
2024-07-10 00:56:44,529 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:56:44,559 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Request joining group due to: group is already rebalancing
2024-07-10 00:56:44,559 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Revoke previously assigned partitions telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2
2024-07-10 00:56:44,559 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions revoked: [telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]
2024-07-10 00:56:44,559 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:56:51,576 INFO [http-nio-8081-exec-2] [/]: Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-10 00:56:51,576 INFO [http-nio-8081-exec-2] DispatcherServlet: Initializing Servlet 'dispatcherServlet'
2024-07-10 00:56:51,578 INFO [http-nio-8081-exec-2] DispatcherServlet: Completed initialization in 2 ms
2024-07-10 00:56:51,595 TRACE [http-nio-8081-exec-2] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@11be69a4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@295a763b, org.springframework.security.web.context.SecurityContextHolderFilter@59ebe484, org.springframework.security.web.header.HeaderWriterFilter@7b1bb01c, org.springframework.security.web.authentication.logout.LogoutFilter@6c3830ed, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1cafb30, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5a0b925a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3a352efd, org.springframework.security.web.access.ExceptionTranslationFilter@372c428, org.springframework.security.web.access.intercept.AuthorizationFilter@5f113867]] (1/1)
2024-07-10 00:56:51,596 DEBUG [http-nio-8081-exec-2] FilterChainProxy: Securing POST /authentication/login/
2024-07-10 00:56:51,597 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:56:51,597 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:56:51,598 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:56:51,599 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:56:51,600 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:56:51,601 TRACE [http-nio-8081-exec-2] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:56:51,601 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:56:51,601 TRACE [http-nio-8081-exec-2] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:56:51,601 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:56:51,602 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:56:51,603 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:56:51,603 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:56:51,603 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /authentication/login/
2024-07-10 00:56:51,604 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /authentication/login/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@391c2e85
2024-07-10 00:56:51,604 TRACE [http-nio-8081-exec-2] HttpSessionSecurityContextRepository: No HttpSession currently exists
2024-07-10 00:56:51,604 TRACE [http-nio-8081-exec-2] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-10 00:56:51,604 TRACE [http-nio-8081-exec-2] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-10 00:56:51,605 TRACE [http-nio-8081-exec-2] AnonymousAuthenticationFilter: Set SecurityContextHolder to AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ANONYMOUS]]
2024-07-10 00:56:51,606 DEBUG [http-nio-8081-exec-2] FilterChainProxy: Secured POST /authentication/login/
2024-07-10 00:56:51,683 TRACE [http-nio-8081-exec-2] ProviderManager: Authenticating request with DaoAuthenticationProvider (1/1)
2024-07-10 00:56:51,931 DEBUG [http-nio-8081-exec-2] DaoAuthenticationProvider: Authenticated user
2024-07-10 00:56:51,952 DEBUG [http-nio-8081-exec-2] HttpSessionSecurityContextRepository: Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@52663f63]
2024-07-10 00:56:51,970 TRACE [http-nio-8081-exec-2] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-10 00:56:54,343 TRACE [http-nio-8081-exec-3] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@11be69a4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@295a763b, org.springframework.security.web.context.SecurityContextHolderFilter@59ebe484, org.springframework.security.web.header.HeaderWriterFilter@7b1bb01c, org.springframework.security.web.authentication.logout.LogoutFilter@6c3830ed, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1cafb30, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5a0b925a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3a352efd, org.springframework.security.web.access.ExceptionTranslationFilter@372c428, org.springframework.security.web.access.intercept.AuthorizationFilter@5f113867]] (1/1)
2024-07-10 00:56:54,343 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Securing POST /receivers/create/
2024-07-10 00:56:54,343 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:56:54,343 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:56:54,343 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:56:54,343 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:56:54,343 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:56:54,344 TRACE [http-nio-8081-exec-3] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:56:54,344 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:56:54,344 TRACE [http-nio-8081-exec-3] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:56:54,344 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:56:54,344 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:56:54,344 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:56:54,344 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:56:54,344 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /receivers/create/
2024-07-10 00:56:54,344 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /receivers/create/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@ca6d353
2024-07-10 00:56:54,344 TRACE [http-nio-8081-exec-3] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-10 00:56:54,345 TRACE [http-nio-8081-exec-3] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-10 00:56:54,345 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Secured POST /receivers/create/
2024-07-10 00:56:54,373 TRACE [http-nio-8081-exec-3] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-10 00:56:54,374 ERROR [http-nio-8081-exec-3] [dispatcherServlet]: Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: jakarta.validation.ValidationException: Telegram username is invalid] with root cause
jakarta.validation.ValidationException: Telegram username is invalid
	at org.example.emergency.service.impls.ReceiverServiceImpl.validateTelegramUsername(ReceiverServiceImpl.java:112)
	at org.example.emergency.service.impls.ReceiverServiceImpl.create(ReceiverServiceImpl.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.emergency.service.impls.ReceiverServiceImpl$$SpringCGLIB$$0.create(<generated>)
	at org.example.emergency.controller.ReceiverController.create(ReceiverController.java:24)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2024-07-10 00:56:54,383 TRACE [http-nio-8081-exec-3] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@11be69a4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@295a763b, org.springframework.security.web.context.SecurityContextHolderFilter@59ebe484, org.springframework.security.web.header.HeaderWriterFilter@7b1bb01c, org.springframework.security.web.authentication.logout.LogoutFilter@6c3830ed, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1cafb30, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5a0b925a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3a352efd, org.springframework.security.web.access.ExceptionTranslationFilter@372c428, org.springframework.security.web.access.intercept.AuthorizationFilter@5f113867]] (1/1)
2024-07-10 00:56:54,383 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Securing POST /error
2024-07-10 00:56:54,383 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:56:54,383 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:56:54,383 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:56:54,383 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:56:54,383 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:56:54,383 TRACE [http-nio-8081-exec-3] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:56:54,383 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:56:54,383 TRACE [http-nio-8081-exec-3] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:56:54,383 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:56:54,383 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:56:54,383 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:56:54,383 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:56:54,384 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /error
2024-07-10 00:56:54,384 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /error using org.springframework.security.authorization.AuthenticatedAuthorizationManager@ca6d353
2024-07-10 00:56:54,384 TRACE [http-nio-8081-exec-3] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-10 00:56:54,384 TRACE [http-nio-8081-exec-3] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-10 00:56:54,384 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Secured POST /error
2024-07-10 00:57:20,481 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=17, memberId='consumer-telegram-notification-created-topic-2-c7c1809a-f1e0-4363-8b53-e9b86575d0ad', protocol='range'}
2024-07-10 00:57:20,481 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=17, memberId='consumer-telegram-notification-created-topic-1-5504a333-2c0b-4169-87e7-8032431fabe4', protocol='range'}
2024-07-10 00:57:20,481 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=17, memberId='consumer-telegram-notification-created-topic-1-4f4c1985-388c-4c5f-9689-281560b365c8', protocol='range'}
2024-07-10 00:57:20,481 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Finished assignment for group at generation 17: {consumer-telegram-notification-created-topic-1-4f4c1985-388c-4c5f-9689-281560b365c8=Assignment(partitions=[telegram-receiver-user-response-topic-0]), consumer-telegram-notification-created-topic-2-c7c1809a-f1e0-4363-8b53-e9b86575d0ad=Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]), consumer-telegram-notification-created-topic-1-5504a333-2c0b-4169-87e7-8032431fabe4=Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2])}
2024-07-10 00:57:20,482 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=17, memberId='consumer-telegram-notification-created-topic-1-5504a333-2c0b-4169-87e7-8032431fabe4', protocol='range'}
2024-07-10 00:57:20,482 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=17, memberId='consumer-telegram-notification-created-topic-2-c7c1809a-f1e0-4363-8b53-e9b86575d0ad', protocol='range'}
2024-07-10 00:57:20,483 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2])
2024-07-10 00:57:20,483 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2])
2024-07-10 00:57:20,483 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=17, memberId='consumer-telegram-notification-created-topic-1-4f4c1985-388c-4c5f-9689-281560b365c8', protocol='range'}
2024-07-10 00:57:20,483 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2
2024-07-10 00:57:20,483 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2
2024-07-10 00:57:20,483 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-1 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=3}}
2024-07-10 00:57:20,484 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-0 to the committed offset FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=3}}
2024-07-10 00:57:20,484 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=4}}
2024-07-10 00:57:20,484 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-2 to the committed offset FetchPosition{offset=7, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=4}}
2024-07-10 00:57:20,484 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=3}}
2024-07-10 00:57:20,484 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-1 to the committed offset FetchPosition{offset=7, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=3}}
2024-07-10 00:57:20,484 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]
2024-07-10 00:57:20,484 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]
2024-07-10 00:57:20,484 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-receiver-user-response-topic-0])
2024-07-10 00:57:20,486 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-receiver-user-response-topic-0
2024-07-10 00:57:20,491 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-response-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=0}}
2024-07-10 00:57:20,492 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-receiver-user-response-topic-0]
2024-07-10 00:57:39,858 INFO [main] TelegramNotificationsApplication: Starting TelegramNotificationsApplication using Java 17.0.10 with PID 6424 (D:\programming\java\emergency-ms\telegram-notifications\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-10 00:57:39,860 DEBUG [main] TelegramNotificationsApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-10 00:57:39,861 INFO [main] TelegramNotificationsApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-10 00:57:40,324 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 00:57:40,375 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 44 ms. Found 1 JPA repository interface.
2024-07-10 00:57:40,821 INFO [main] TomcatWebServer: Tomcat initialized with port 8083 (http)
2024-07-10 00:57:40,829 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8083"]
2024-07-10 00:57:40,830 INFO [main] StandardService: Starting service [Tomcat]
2024-07-10 00:57:40,830 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 00:57:40,888 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-10 00:57:40,889 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 992 ms
2024-07-10 00:57:41,070 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-10 00:57:41,186 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2ce524d2
2024-07-10 00:57:41,187 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-10 00:57:41,210 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_telegram_db (PostgreSQL 16.3)
2024-07-10 00:57:41,242 INFO [main] DbValidate: Successfully validated 1 migration (execution time 00:00.021s)
2024-07-10 00:57:41,277 INFO [main] DbMigrate: Current version of schema "public": 1.0
2024-07-10 00:57:41,279 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-10 00:57:41,348 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 00:57:41,390 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 00:57:41,418 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-10 00:57:41,643 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 00:57:42,168 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 00:57:42,169 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 00:57:42,556 WARN [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-10 00:57:42,844 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8083"]
2024-07-10 00:57:42,857 INFO [main] TomcatWebServer: Tomcat started on port 8083 (http) with context path '/'
2024-07-10 00:57:42,888 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092, localhost:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-telegram-notification-created-topic-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = telegram-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-10 00:57:42,924 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-10 00:57:43,007 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:57:43,007 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:57:43,007 INFO [main] AppInfoParser: Kafka startTimeMs: 1720562263005
2024-07-10 00:57:43,009 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Subscribed to topic(s): telegram-notification-created-topic
2024-07-10 00:57:43,015 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092, localhost:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-telegram-notification-created-topic-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = telegram-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-10 00:57:43,015 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-10 00:57:43,022 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:57:43,022 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:57:43,022 INFO [main] AppInfoParser: Kafka startTimeMs: 1720562263022
2024-07-10 00:57:43,022 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Subscribed to topic(s): telegram-receiver-user-request-topic
2024-07-10 00:57:43,287 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] Metadata: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-10 00:57:43,287 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metadata: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-10 00:57:43,289 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-10 00:57:43,289 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-10 00:57:43,291 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:57:43,291 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:57:43,303 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-telegram-notification-created-topic-1-3ee95f38-ab31-422e-bb63-9fd9901f549d
2024-07-10 00:57:43,303 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-telegram-notification-created-topic-2-7e0623b9-9274-4904-9120-0922fb643ad1
2024-07-10 00:57:43,303 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:57:43,303 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:57:43,359 INFO [main] TelegramNotificationsApplication: Started TelegramNotificationsApplication in 3.816 seconds (process running for 4.308)
2024-07-10 00:57:44,537 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: group is already rebalancing
2024-07-10 00:57:44,538 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Revoke previously assigned partitions telegram-receiver-user-response-topic-0
2024-07-10 00:57:44,538 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions revoked: [telegram-receiver-user-response-topic-0]
2024-07-10 00:57:44,539 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:57:48,745 TRACE [http-nio-8081-exec-5] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@11be69a4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@295a763b, org.springframework.security.web.context.SecurityContextHolderFilter@59ebe484, org.springframework.security.web.header.HeaderWriterFilter@7b1bb01c, org.springframework.security.web.authentication.logout.LogoutFilter@6c3830ed, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1cafb30, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5a0b925a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3a352efd, org.springframework.security.web.access.ExceptionTranslationFilter@372c428, org.springframework.security.web.access.intercept.AuthorizationFilter@5f113867]] (1/1)
2024-07-10 00:57:48,745 DEBUG [http-nio-8081-exec-5] FilterChainProxy: Securing POST /receivers/create/
2024-07-10 00:57:48,745 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:57:48,745 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:57:48,745 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:57:48,745 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:57:48,745 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:57:48,745 TRACE [http-nio-8081-exec-5] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:57:48,745 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:57:48,745 TRACE [http-nio-8081-exec-5] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:57:48,745 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:57:48,745 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:57:48,745 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:57:48,746 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:57:48,746 TRACE [http-nio-8081-exec-5] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /receivers/create/
2024-07-10 00:57:48,746 TRACE [http-nio-8081-exec-5] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /receivers/create/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@ca6d353
2024-07-10 00:57:48,746 TRACE [http-nio-8081-exec-5] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-10 00:57:48,746 TRACE [http-nio-8081-exec-5] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-10 00:57:48,746 DEBUG [http-nio-8081-exec-5] FilterChainProxy: Secured POST /receivers/create/
2024-07-10 00:57:48,750 TRACE [http-nio-8081-exec-5] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-10 00:57:48,750 ERROR [http-nio-8081-exec-5] [dispatcherServlet]: Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: jakarta.validation.ValidationException: Telegram username is invalid] with root cause
jakarta.validation.ValidationException: Telegram username is invalid
	at org.example.emergency.service.impls.ReceiverServiceImpl.validateTelegramUsername(ReceiverServiceImpl.java:112)
	at org.example.emergency.service.impls.ReceiverServiceImpl.create(ReceiverServiceImpl.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.emergency.service.impls.ReceiverServiceImpl$$SpringCGLIB$$0.create(<generated>)
	at org.example.emergency.controller.ReceiverController.create(ReceiverController.java:24)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2024-07-10 00:57:48,751 TRACE [http-nio-8081-exec-5] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@11be69a4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@295a763b, org.springframework.security.web.context.SecurityContextHolderFilter@59ebe484, org.springframework.security.web.header.HeaderWriterFilter@7b1bb01c, org.springframework.security.web.authentication.logout.LogoutFilter@6c3830ed, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1cafb30, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5a0b925a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3a352efd, org.springframework.security.web.access.ExceptionTranslationFilter@372c428, org.springframework.security.web.access.intercept.AuthorizationFilter@5f113867]] (1/1)
2024-07-10 00:57:48,751 DEBUG [http-nio-8081-exec-5] FilterChainProxy: Securing POST /error
2024-07-10 00:57:48,751 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:57:48,751 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:57:48,751 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:57:48,751 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:57:48,751 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:57:48,751 TRACE [http-nio-8081-exec-5] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:57:48,751 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:57:48,751 TRACE [http-nio-8081-exec-5] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:57:48,751 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:57:48,751 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:57:48,751 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:57:48,751 TRACE [http-nio-8081-exec-5] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:57:48,751 TRACE [http-nio-8081-exec-5] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /error
2024-07-10 00:57:48,751 TRACE [http-nio-8081-exec-5] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /error using org.springframework.security.authorization.AuthenticatedAuthorizationManager@ca6d353
2024-07-10 00:57:48,751 TRACE [http-nio-8081-exec-5] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-10 00:57:48,751 TRACE [http-nio-8081-exec-5] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-10 00:57:48,751 DEBUG [http-nio-8081-exec-5] FilterChainProxy: Secured POST /error
2024-07-10 00:57:52,108 TRACE [http-nio-8081-exec-7] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@11be69a4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@295a763b, org.springframework.security.web.context.SecurityContextHolderFilter@59ebe484, org.springframework.security.web.header.HeaderWriterFilter@7b1bb01c, org.springframework.security.web.authentication.logout.LogoutFilter@6c3830ed, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1cafb30, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5a0b925a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3a352efd, org.springframework.security.web.access.ExceptionTranslationFilter@372c428, org.springframework.security.web.access.intercept.AuthorizationFilter@5f113867]] (1/1)
2024-07-10 00:57:52,109 DEBUG [http-nio-8081-exec-7] FilterChainProxy: Securing POST /receivers/create/
2024-07-10 00:57:52,109 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:57:52,109 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:57:52,109 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:57:52,109 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:57:52,109 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:57:52,109 TRACE [http-nio-8081-exec-7] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:57:52,109 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:57:52,109 TRACE [http-nio-8081-exec-7] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:57:52,109 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:57:52,109 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:57:52,109 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:57:52,109 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:57:52,109 TRACE [http-nio-8081-exec-7] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /receivers/create/
2024-07-10 00:57:52,109 TRACE [http-nio-8081-exec-7] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /receivers/create/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@ca6d353
2024-07-10 00:57:52,109 TRACE [http-nio-8081-exec-7] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-10 00:57:52,109 TRACE [http-nio-8081-exec-7] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-10 00:57:52,109 DEBUG [http-nio-8081-exec-7] FilterChainProxy: Secured POST /receivers/create/
2024-07-10 00:57:52,113 TRACE [http-nio-8081-exec-7] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-10 00:57:52,113 ERROR [http-nio-8081-exec-7] [dispatcherServlet]: Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: jakarta.validation.ValidationException: Telegram username is invalid] with root cause
jakarta.validation.ValidationException: Telegram username is invalid
	at org.example.emergency.service.impls.ReceiverServiceImpl.validateTelegramUsername(ReceiverServiceImpl.java:112)
	at org.example.emergency.service.impls.ReceiverServiceImpl.create(ReceiverServiceImpl.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.emergency.service.impls.ReceiverServiceImpl$$SpringCGLIB$$0.create(<generated>)
	at org.example.emergency.controller.ReceiverController.create(ReceiverController.java:24)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2024-07-10 00:57:52,114 TRACE [http-nio-8081-exec-7] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@11be69a4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@295a763b, org.springframework.security.web.context.SecurityContextHolderFilter@59ebe484, org.springframework.security.web.header.HeaderWriterFilter@7b1bb01c, org.springframework.security.web.authentication.logout.LogoutFilter@6c3830ed, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1cafb30, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5a0b925a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3a352efd, org.springframework.security.web.access.ExceptionTranslationFilter@372c428, org.springframework.security.web.access.intercept.AuthorizationFilter@5f113867]] (1/1)
2024-07-10 00:57:52,120 DEBUG [http-nio-8081-exec-7] FilterChainProxy: Securing POST /error
2024-07-10 00:57:52,120 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:57:52,120 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:57:52,120 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:57:52,120 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:57:52,120 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:57:52,120 TRACE [http-nio-8081-exec-7] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:57:52,120 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:57:52,120 TRACE [http-nio-8081-exec-7] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:57:52,120 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:57:52,120 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:57:52,120 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:57:52,121 TRACE [http-nio-8081-exec-7] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:57:52,121 TRACE [http-nio-8081-exec-7] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /error
2024-07-10 00:57:52,121 TRACE [http-nio-8081-exec-7] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /error using org.springframework.security.authorization.AuthenticatedAuthorizationManager@ca6d353
2024-07-10 00:57:52,122 TRACE [http-nio-8081-exec-7] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-10 00:57:52,122 TRACE [http-nio-8081-exec-7] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-10 00:57:52,122 DEBUG [http-nio-8081-exec-7] FilterChainProxy: Secured POST /error
2024-07-10 00:58:10,076 TRACE [http-nio-8081-exec-8] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@11be69a4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@295a763b, org.springframework.security.web.context.SecurityContextHolderFilter@59ebe484, org.springframework.security.web.header.HeaderWriterFilter@7b1bb01c, org.springframework.security.web.authentication.logout.LogoutFilter@6c3830ed, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1cafb30, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5a0b925a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3a352efd, org.springframework.security.web.access.ExceptionTranslationFilter@372c428, org.springframework.security.web.access.intercept.AuthorizationFilter@5f113867]] (1/1)
2024-07-10 00:58:10,076 DEBUG [http-nio-8081-exec-8] FilterChainProxy: Securing POST /receivers/create/
2024-07-10 00:58:10,076 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:58:10,076 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:58:10,076 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:58:10,076 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:58:10,076 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:58:10,076 TRACE [http-nio-8081-exec-8] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:58:10,076 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:58:10,076 TRACE [http-nio-8081-exec-8] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:58:10,076 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:58:10,077 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:58:10,077 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:58:10,077 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:58:10,077 TRACE [http-nio-8081-exec-8] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /receivers/create/
2024-07-10 00:58:10,077 TRACE [http-nio-8081-exec-8] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /receivers/create/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@ca6d353
2024-07-10 00:58:10,077 TRACE [http-nio-8081-exec-8] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-10 00:58:10,077 TRACE [http-nio-8081-exec-8] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-10 00:58:10,077 DEBUG [http-nio-8081-exec-8] FilterChainProxy: Secured POST /receivers/create/
2024-07-10 00:58:10,081 TRACE [http-nio-8081-exec-8] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-10 00:58:10,083 ERROR [http-nio-8081-exec-8] [dispatcherServlet]: Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: jakarta.validation.ValidationException: Telegram username is invalid] with root cause
jakarta.validation.ValidationException: Telegram username is invalid
	at org.example.emergency.service.impls.ReceiverServiceImpl.validateTelegramUsername(ReceiverServiceImpl.java:112)
	at org.example.emergency.service.impls.ReceiverServiceImpl.create(ReceiverServiceImpl.java:60)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.validation.beanvalidation.MethodValidationInterceptor.invoke(MethodValidationInterceptor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:392)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.example.emergency.service.impls.ReceiverServiceImpl$$SpringCGLIB$$0.create(<generated>)
	at org.example.emergency.controller.ReceiverController.create(ReceiverController.java:24)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2024-07-10 00:58:10,084 TRACE [http-nio-8081-exec-8] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@11be69a4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@295a763b, org.springframework.security.web.context.SecurityContextHolderFilter@59ebe484, org.springframework.security.web.header.HeaderWriterFilter@7b1bb01c, org.springframework.security.web.authentication.logout.LogoutFilter@6c3830ed, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1cafb30, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5a0b925a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3a352efd, org.springframework.security.web.access.ExceptionTranslationFilter@372c428, org.springframework.security.web.access.intercept.AuthorizationFilter@5f113867]] (1/1)
2024-07-10 00:58:10,084 DEBUG [http-nio-8081-exec-8] FilterChainProxy: Securing POST /error
2024-07-10 00:58:10,084 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:58:10,084 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:58:10,084 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:58:10,084 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:58:10,084 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:58:10,084 TRACE [http-nio-8081-exec-8] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:58:10,084 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:58:10,084 TRACE [http-nio-8081-exec-8] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:58:10,084 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:58:10,084 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:58:10,084 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:58:10,084 TRACE [http-nio-8081-exec-8] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:58:10,084 TRACE [http-nio-8081-exec-8] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /error
2024-07-10 00:58:10,084 TRACE [http-nio-8081-exec-8] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /error using org.springframework.security.authorization.AuthenticatedAuthorizationManager@ca6d353
2024-07-10 00:58:10,084 TRACE [http-nio-8081-exec-8] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-10 00:58:10,084 TRACE [http-nio-8081-exec-8] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-10 00:58:10,084 DEBUG [http-nio-8081-exec-8] FilterChainProxy: Secured POST /error
2024-07-10 00:58:23,550 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=18, memberId='consumer-telegram-notification-created-topic-1-4f4c1985-388c-4c5f-9689-281560b365c8', protocol='range'}
2024-07-10 00:58:23,550 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=18, memberId='consumer-telegram-notification-created-topic-1-3ee95f38-ab31-422e-bb63-9fd9901f549d', protocol='range'}
2024-07-10 00:58:23,550 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=18, memberId='consumer-telegram-notification-created-topic-2-7e0623b9-9274-4904-9120-0922fb643ad1', protocol='range'}
2024-07-10 00:58:23,556 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Finished assignment for group at generation 18: {consumer-telegram-notification-created-topic-1-4f4c1985-388c-4c5f-9689-281560b365c8=Assignment(partitions=[telegram-receiver-user-response-topic-0]), consumer-telegram-notification-created-topic-2-7e0623b9-9274-4904-9120-0922fb643ad1=Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]), consumer-telegram-notification-created-topic-1-3ee95f38-ab31-422e-bb63-9fd9901f549d=Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2])}
2024-07-10 00:58:23,557 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=18, memberId='consumer-telegram-notification-created-topic-1-4f4c1985-388c-4c5f-9689-281560b365c8', protocol='range'}
2024-07-10 00:58:23,557 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-receiver-user-response-topic-0])
2024-07-10 00:58:23,557 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=18, memberId='consumer-telegram-notification-created-topic-2-7e0623b9-9274-4904-9120-0922fb643ad1', protocol='range'}
2024-07-10 00:58:23,557 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=18, memberId='consumer-telegram-notification-created-topic-1-3ee95f38-ab31-422e-bb63-9fd9901f549d', protocol='range'}
2024-07-10 00:58:23,558 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-receiver-user-response-topic-0
2024-07-10 00:58:23,559 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-response-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=0}}
2024-07-10 00:58:23,559 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-receiver-user-response-topic-0]
2024-07-10 00:58:23,559 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2])
2024-07-10 00:58:23,559 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2])
2024-07-10 00:58:23,561 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2
2024-07-10 00:58:23,561 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2
2024-07-10 00:58:23,569 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-0 to the committed offset FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=3}}
2024-07-10 00:58:23,569 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-1 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=3}}
2024-07-10 00:58:23,569 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-2 to the committed offset FetchPosition{offset=7, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=4}}
2024-07-10 00:58:23,569 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=4}}
2024-07-10 00:58:23,569 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-1 to the committed offset FetchPosition{offset=7, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=3}}
2024-07-10 00:58:23,569 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=3}}
2024-07-10 00:58:23,570 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]
2024-07-10 00:58:23,570 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]
2024-07-10 00:59:25,245 TRACE [http-nio-8081-exec-1] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@11be69a4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@295a763b, org.springframework.security.web.context.SecurityContextHolderFilter@59ebe484, org.springframework.security.web.header.HeaderWriterFilter@7b1bb01c, org.springframework.security.web.authentication.logout.LogoutFilter@6c3830ed, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1cafb30, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5a0b925a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3a352efd, org.springframework.security.web.access.ExceptionTranslationFilter@372c428, org.springframework.security.web.access.intercept.AuthorizationFilter@5f113867]] (1/1)
2024-07-10 00:59:25,245 DEBUG [http-nio-8081-exec-1] FilterChainProxy: Securing GET /authentication/logout/
2024-07-10 00:59:25,245 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:59:25,245 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:59:25,245 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:59:25,245 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:59:25,245 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:59:25,245 TRACE [http-nio-8081-exec-1] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:59:25,245 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:59:25,245 TRACE [http-nio-8081-exec-1] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:59:25,245 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:59:25,245 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:59:25,245 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:59:25,246 TRACE [http-nio-8081-exec-1] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:59:25,246 TRACE [http-nio-8081-exec-1] RequestMatcherDelegatingAuthorizationManager: Authorizing GET /authentication/logout/
2024-07-10 00:59:25,246 TRACE [http-nio-8081-exec-1] RequestMatcherDelegatingAuthorizationManager: Checking authorization on GET /authentication/logout/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@ca6d353
2024-07-10 00:59:25,246 TRACE [http-nio-8081-exec-1] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]] from SPRING_SECURITY_CONTEXT
2024-07-10 00:59:25,246 TRACE [http-nio-8081-exec-1] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=abcde, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_USER]]
2024-07-10 00:59:25,246 DEBUG [http-nio-8081-exec-1] FilterChainProxy: Secured GET /authentication/logout/
2024-07-10 00:59:25,247 DEBUG [http-nio-8081-exec-1] HttpSessionSecurityContextRepository: Removed SecurityContextImpl [Null authentication] from HttpSession [org.apache.catalina.session.StandardSessionFacade@52663f63]
2024-07-10 00:59:25,247 TRACE [http-nio-8081-exec-1] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-10 00:59:33,617 TRACE [http-nio-8081-exec-2] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@11be69a4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@295a763b, org.springframework.security.web.context.SecurityContextHolderFilter@59ebe484, org.springframework.security.web.header.HeaderWriterFilter@7b1bb01c, org.springframework.security.web.authentication.logout.LogoutFilter@6c3830ed, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1cafb30, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5a0b925a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3a352efd, org.springframework.security.web.access.ExceptionTranslationFilter@372c428, org.springframework.security.web.access.intercept.AuthorizationFilter@5f113867]] (1/1)
2024-07-10 00:59:33,617 DEBUG [http-nio-8081-exec-2] FilterChainProxy: Securing POST /authentication/login/
2024-07-10 00:59:33,617 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:59:33,617 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:59:33,617 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:59:33,617 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:59:33,617 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:59:33,617 TRACE [http-nio-8081-exec-2] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:59:33,617 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:59:33,617 TRACE [http-nio-8081-exec-2] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:59:33,617 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:59:33,618 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:59:33,618 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:59:33,618 TRACE [http-nio-8081-exec-2] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:59:33,618 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /authentication/login/
2024-07-10 00:59:33,618 TRACE [http-nio-8081-exec-2] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /authentication/login/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@391c2e85
2024-07-10 00:59:33,618 TRACE [http-nio-8081-exec-2] HttpSessionSecurityContextRepository: Did not find SecurityContext in HttpSession 684799EF4E704B97F0EEA6D8A8BCF272 using the SPRING_SECURITY_CONTEXT session attribute
2024-07-10 00:59:33,618 TRACE [http-nio-8081-exec-2] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-10 00:59:33,618 TRACE [http-nio-8081-exec-2] SupplierDeferredSecurityContext: Created SecurityContextImpl [Null authentication]
2024-07-10 00:59:33,618 TRACE [http-nio-8081-exec-2] AnonymousAuthenticationFilter: Set SecurityContextHolder to AnonymousAuthenticationToken [Principal=anonymousUser, Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=684799EF4E704B97F0EEA6D8A8BCF272], Granted Authorities=[ROLE_ANONYMOUS]]
2024-07-10 00:59:33,618 DEBUG [http-nio-8081-exec-2] FilterChainProxy: Secured POST /authentication/login/
2024-07-10 00:59:33,619 TRACE [http-nio-8081-exec-2] ProviderManager: Authenticating request with DaoAuthenticationProvider (1/1)
2024-07-10 00:59:33,674 DEBUG [http-nio-8081-exec-2] DaoAuthenticationProvider: Authenticated user
2024-07-10 00:59:33,674 DEBUG [http-nio-8081-exec-2] HttpSessionSecurityContextRepository: Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@52663f63]
2024-07-10 00:59:33,678 TRACE [http-nio-8081-exec-2] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-10 00:59:36,847 TRACE [http-nio-8081-exec-3] FilterChainProxy: Trying to match request against DefaultSecurityFilterChain [RequestMatcher=any request, Filters=[org.springframework.security.web.session.DisableEncodeUrlFilter@11be69a4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@295a763b, org.springframework.security.web.context.SecurityContextHolderFilter@59ebe484, org.springframework.security.web.header.HeaderWriterFilter@7b1bb01c, org.springframework.security.web.authentication.logout.LogoutFilter@6c3830ed, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1cafb30, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5a0b925a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3a352efd, org.springframework.security.web.access.ExceptionTranslationFilter@372c428, org.springframework.security.web.access.intercept.AuthorizationFilter@5f113867]] (1/1)
2024-07-10 00:59:36,847 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Securing POST /emergency-calls/call/
2024-07-10 00:59:36,847 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking DisableEncodeUrlFilter (1/10)
2024-07-10 00:59:36,848 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking WebAsyncManagerIntegrationFilter (2/10)
2024-07-10 00:59:36,848 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderFilter (3/10)
2024-07-10 00:59:36,848 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking HeaderWriterFilter (4/10)
2024-07-10 00:59:36,848 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking LogoutFilter (5/10)
2024-07-10 00:59:36,848 TRACE [http-nio-8081-exec-3] LogoutFilter: Did not match request to Or [Ant [pattern='/logout', GET], Ant [pattern='/logout', POST], Ant [pattern='/logout', PUT], Ant [pattern='/logout', DELETE]]
2024-07-10 00:59:36,848 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking RequestCacheAwareFilter (6/10)
2024-07-10 00:59:36,848 TRACE [http-nio-8081-exec-3] HttpSessionRequestCache: matchingRequestParameterName is required for getMatchingRequest to lookup a value, but not provided
2024-07-10 00:59:36,848 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking SecurityContextHolderAwareRequestFilter (7/10)
2024-07-10 00:59:36,848 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AnonymousAuthenticationFilter (8/10)
2024-07-10 00:59:36,848 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking ExceptionTranslationFilter (9/10)
2024-07-10 00:59:36,848 TRACE [http-nio-8081-exec-3] FilterChainProxy: Invoking AuthorizationFilter (10/10)
2024-07-10 00:59:36,848 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Authorizing POST /emergency-calls/call/
2024-07-10 00:59:36,848 TRACE [http-nio-8081-exec-3] RequestMatcherDelegatingAuthorizationManager: Checking authorization on POST /emergency-calls/call/ using org.springframework.security.authorization.AuthenticatedAuthorizationManager@ca6d353
2024-07-10 00:59:36,848 TRACE [http-nio-8081-exec-3] HttpSessionSecurityContextRepository: Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]] from SPRING_SECURITY_CONTEXT
2024-07-10 00:59:36,848 TRACE [http-nio-8081-exec-3] AnonymousAuthenticationFilter: Did not set SecurityContextHolder since already authenticated UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=bladeattheneck, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=null, Granted Authorities=[ROLE_ADMIN]]
2024-07-10 00:59:36,848 DEBUG [http-nio-8081-exec-3] FilterChainProxy: Secured POST /emergency-calls/call/
2024-07-10 00:59:36,864 INFO [http-nio-8081-exec-3] ProducerConfig: ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092, localhost:9094]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 10000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 5000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2024-07-10 00:59:36,865 INFO [http-nio-8081-exec-3] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-10 00:59:36,870 INFO [http-nio-8081-exec-3] KafkaProducer: [Producer clientId=emergency-producer-1] Instantiated an idempotent producer.
2024-07-10 00:59:36,879 INFO [http-nio-8081-exec-3] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:59:36,879 INFO [http-nio-8081-exec-3] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:59:36,879 INFO [http-nio-8081-exec-3] AppInfoParser: Kafka startTimeMs: 1720562376879
2024-07-10 00:59:36,885 INFO [kafka-producer-network-thread | emergency-producer-1] Metadata: [Producer clientId=emergency-producer-1] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-10 00:59:36,885 INFO [kafka-producer-network-thread | emergency-producer-1] TransactionManager: [Producer clientId=emergency-producer-1] ProducerId set to 4002 with epoch 0
2024-07-10 00:59:36,906 INFO [kafka-producer-network-thread | emergency-producer-1] EmergencyCallServiceImpl: Message send successfully: email-notification-created-topic-0@3
2024-07-10 00:59:36,909 INFO [http-nio-8081-exec-3] ProducerConfig: ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9092, localhost:9094]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = emergency-producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 10000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 5000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.springframework.kafka.support.serializer.JsonSerializer

2024-07-10 00:59:36,909 INFO [http-nio-8081-exec-3] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-10 00:59:36,909 INFO [http-nio-8081-exec-3] KafkaProducer: [Producer clientId=emergency-producer-1] Instantiated an idempotent producer.
2024-07-10 00:59:36,912 INFO [http-nio-8081-exec-3] AppInfoParser: The mbean of App info: [kafka.producer], id: [emergency-producer-1] already exists, so skipping a new mbean creation.
2024-07-10 00:59:36,915 INFO [kafka-producer-network-thread | emergency-producer-1] TransactionManager: [Producer clientId=emergency-producer-1] ProducerId set to 4003 with epoch 0
2024-07-10 00:59:36,915 INFO [kafka-producer-network-thread | emergency-producer-1] Metadata: [Producer clientId=emergency-producer-1] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-10 00:59:36,925 INFO [kafka-producer-network-thread | emergency-producer-1] EmergencyCallServiceImpl: Message send successfully: telegram-notification-created-topic-2@0
2024-07-10 00:59:36,927 TRACE [http-nio-8081-exec-3] HstsHeaderWriter: Not injecting HSTS header since it did not match request to [Is Secure]
2024-07-10 00:59:42,897 INFO [main] TelegramNotificationsApplication: Starting TelegramNotificationsApplication using Java 17.0.10 with PID 11900 (D:\programming\java\emergency-ms\telegram-notifications\build\classes\java\main started by Andrey in D:\programming\java\emergency-ms)
2024-07-10 00:59:42,898 DEBUG [main] TelegramNotificationsApplication: Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-10 00:59:42,898 INFO [main] TelegramNotificationsApplication: No active profile set, falling back to 1 default profile: "default"
2024-07-10 00:59:43,387 INFO [main] RepositoryConfigurationDelegate: Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-07-10 00:59:43,434 INFO [main] RepositoryConfigurationDelegate: Finished Spring Data repository scanning in 40 ms. Found 1 JPA repository interface.
2024-07-10 00:59:43,890 INFO [main] TomcatWebServer: Tomcat initialized with port 8083 (http)
2024-07-10 00:59:43,898 INFO [main] Http11NioProtocol: Initializing ProtocolHandler ["http-nio-8083"]
2024-07-10 00:59:43,899 INFO [main] StandardService: Starting service [Tomcat]
2024-07-10 00:59:43,899 INFO [main] StandardEngine: Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-10 00:59:43,962 INFO [main] [/]: Initializing Spring embedded WebApplicationContext
2024-07-10 00:59:43,963 INFO [main] ServletWebServerApplicationContext: Root WebApplicationContext: initialization completed in 1021 ms
2024-07-10 00:59:44,142 INFO [main] HikariDataSource: HikariPool-1 - Starting...
2024-07-10 00:59:44,259 INFO [main] HikariPool: HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@578c3fd9
2024-07-10 00:59:44,260 INFO [main] HikariDataSource: HikariPool-1 - Start completed.
2024-07-10 00:59:44,283 INFO [main] FlywayExecutor: Database: jdbc:postgresql://localhost:5432/emergency_telegram_db (PostgreSQL 16.3)
2024-07-10 00:59:44,320 INFO [main] DbValidate: Successfully validated 1 migration (execution time 00:00.023s)
2024-07-10 00:59:44,357 INFO [main] DbMigrate: Current version of schema "public": 1.0
2024-07-10 00:59:44,359 INFO [main] DbMigrate: Schema "public" is up to date. No migration necessary.
2024-07-10 00:59:44,422 INFO [main] LogHelper: HHH000204: Processing PersistenceUnitInfo [name: default]
2024-07-10 00:59:44,466 INFO [main] Version: HHH000412: Hibernate ORM core version 6.5.2.Final
2024-07-10 00:59:44,492 INFO [main] RegionFactoryInitiator: HHH000026: Second-level cache disabled
2024-07-10 00:59:44,721 INFO [main] SpringPersistenceUnitInfo: No LoadTimeWeaver setup: ignoring JPA class transformer
2024-07-10 00:59:45,287 INFO [main] JtaPlatformInitiator: HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2024-07-10 00:59:45,288 INFO [main] LocalContainerEntityManagerFactoryBean: Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-07-10 00:59:45,688 WARN [main] JpaBaseConfiguration$JpaWebConfiguration: spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-07-10 00:59:45,996 INFO [main] Http11NioProtocol: Starting ProtocolHandler ["http-nio-8083"]
2024-07-10 00:59:46,010 INFO [main] TomcatWebServer: Tomcat started on port 8083 (http) with context path '/'
2024-07-10 00:59:46,036 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092, localhost:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-telegram-notification-created-topic-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = telegram-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-10 00:59:46,070 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-10 00:59:46,159 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:59:46,159 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:59:46,159 INFO [main] AppInfoParser: Kafka startTimeMs: 1720562386158
2024-07-10 00:59:46,161 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Subscribed to topic(s): telegram-notification-created-topic
2024-07-10 00:59:46,166 INFO [main] ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9092, localhost:9094]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-telegram-notification-created-topic-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = telegram-notification-created-topic
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

2024-07-10 00:59:46,166 INFO [main] KafkaMetricsCollector: initializing Kafka metrics collector
2024-07-10 00:59:46,174 INFO [main] AppInfoParser: Kafka version: 3.7.0
2024-07-10 00:59:46,174 INFO [main] AppInfoParser: Kafka commitId: 2ae524ed625438c5
2024-07-10 00:59:46,174 INFO [main] AppInfoParser: Kafka startTimeMs: 1720562386174
2024-07-10 00:59:46,174 INFO [main] LegacyKafkaConsumer: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Subscribed to topic(s): telegram-receiver-user-request-topic
2024-07-10 00:59:46,425 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] Metadata: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-10 00:59:46,425 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] Metadata: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Cluster ID: cMJBF3czQ4q8btV85lzxhQ
2024-07-10 00:59:46,426 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-10 00:59:46,427 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:59:46,427 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Discovered group coordinator localhost:9092 (id: 2147483646 rack: null)
2024-07-10 00:59:46,428 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:59:46,438 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-telegram-notification-created-topic-2-9c5e98f3-7f39-43e6-8ce4-9cad28cda791
2024-07-10 00:59:46,439 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:59:46,439 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: need to re-join with the given member-id: consumer-telegram-notification-created-topic-1-780fad02-15da-4b82-91d7-e8bc2d013ed7
2024-07-10 00:59:46,439 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:59:46,468 INFO [main] TelegramNotificationsApplication: Started TelegramNotificationsApplication in 3.842 seconds (process running for 4.23)
2024-07-10 00:59:47,785 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Request joining group due to: group is already rebalancing
2024-07-10 00:59:47,785 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Revoke previously assigned partitions telegram-receiver-user-response-topic-0
2024-07-10 00:59:47,785 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions revoked: [telegram-receiver-user-response-topic-0]
2024-07-10 00:59:47,785 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] (Re-)joining group
2024-07-10 00:59:59,700 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=19, memberId='consumer-telegram-notification-created-topic-1-4f4c1985-388c-4c5f-9689-281560b365c8', protocol='range'}
2024-07-10 00:59:59,701 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=19, memberId='consumer-telegram-notification-created-topic-1-780fad02-15da-4b82-91d7-e8bc2d013ed7', protocol='range'}
2024-07-10 00:59:59,701 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully joined group with generation Generation{generationId=19, memberId='consumer-telegram-notification-created-topic-2-9c5e98f3-7f39-43e6-8ce4-9cad28cda791', protocol='range'}
2024-07-10 00:59:59,702 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Finished assignment for group at generation 19: {consumer-telegram-notification-created-topic-1-4f4c1985-388c-4c5f-9689-281560b365c8=Assignment(partitions=[telegram-receiver-user-response-topic-0]), consumer-telegram-notification-created-topic-2-9c5e98f3-7f39-43e6-8ce4-9cad28cda791=Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]), consumer-telegram-notification-created-topic-1-780fad02-15da-4b82-91d7-e8bc2d013ed7=Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2])}
2024-07-10 00:59:59,703 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=19, memberId='consumer-telegram-notification-created-topic-1-4f4c1985-388c-4c5f-9689-281560b365c8', protocol='range'}
2024-07-10 00:59:59,703 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-receiver-user-response-topic-0])
2024-07-10 00:59:59,703 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=19, memberId='consumer-telegram-notification-created-topic-1-780fad02-15da-4b82-91d7-e8bc2d013ed7', protocol='range'}
2024-07-10 00:59:59,703 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-receiver-user-response-topic-0
2024-07-10 00:59:59,703 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Successfully synced group in generation Generation{generationId=19, memberId='consumer-telegram-notification-created-topic-2-9c5e98f3-7f39-43e6-8ce4-9cad28cda791', protocol='range'}
2024-07-10 00:59:59,704 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-response-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=0}}
2024-07-10 00:59:59,704 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-receiver-user-response-topic-0]
2024-07-10 00:59:59,705 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2])
2024-07-10 00:59:59,705 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerCoordinator: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Notifying assignor about the new Assignment(partitions=[telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2])
2024-07-10 00:59:59,706 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-2, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2
2024-07-10 00:59:59,706 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerRebalanceListenerInvoker: [Consumer clientId=consumer-telegram-notification-created-topic-1, groupId=telegram-notification-created-topic] Adding newly assigned partitions: telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2
2024-07-10 00:59:59,711 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-1 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=3}}
2024-07-10 00:59:59,711 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-0 to the committed offset FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9096 (id: 3 rack: null)], epoch=3}}
2024-07-10 00:59:59,712 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=4}}
2024-07-10 00:59:59,712 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-2 to the committed offset FetchPosition{offset=7, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9094 (id: 2 rack: null)], epoch=4}}
2024-07-10 00:59:59,712 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ConsumerUtils: Setting offset for partition telegram-notification-created-topic-2 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=3}}
2024-07-10 00:59:59,712 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] ConsumerUtils: Setting offset for partition telegram-receiver-user-request-topic-1 to the committed offset FetchPosition{offset=7, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[localhost:9092 (id: 1 rack: null)], epoch=3}}
2024-07-10 00:59:59,713 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-notification-created-topic-0, telegram-notification-created-topic-1, telegram-notification-created-topic-2]
2024-07-10 00:59:59,713 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] KafkaMessageListenerContainer: telegram-notification-created-topic: partitions assigned: [telegram-receiver-user-request-topic-0, telegram-receiver-user-request-topic-1, telegram-receiver-user-request-topic-2]
2024-07-10 00:59:59,750 INFO [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] TelegramNotificationCreatedEventHandler: Received event from bladeattheneck
